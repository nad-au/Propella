{
  "openapi": "3.0.1",
  "info": {
    "title": "Domain Public API",
    "description": "See https://developer.domain.com.au for more information",
    "termsOfService": "https://developer.domain.com.au/docs/latest/support/terms",
    "contact": {
      "name": "Domain Developer Support",
      "email": "api@domain.com.au"
    },
    "version": "v2"
  },
  "servers": [
    {
      "url": "http://api.domain.com.au/",
      "description": "api.domain.com.au - Primary"
    },
    {
      "url": "http://api.domain.com.au/sandbox/",
      "description": "api.domain.com.au - Sandbox"
    }
  ],
  "paths": {
    "/v2/listings/residential/offmarket": {
      "post": {
        "tags": [
          "Listings"
        ],
        "summary": "Creates an externally sold or leased residential listing; or takes an existing residential listing off the market.",
        "operationId": "listings_upsertresidentialoffmarket",
        "requestBody": {
          "description": "Listing data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListingAdmin.v2.ResidentialOffMarketListing"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ListingAdmin.v2.ResidentialOffMarketListing"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ListingAdmin.v2.ResidentialOffMarketListing"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ListingAdmin.v2.ResidentialOffMarketListing"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ListingAdmin.v2.ResidentialOffMarketListing"
              }
            }
          },
          "required": true,
          "x-bodyName": "listing"
        },
        "responses": {
          "200": {
            "description": "Listing data hasn't been changed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListingAdmin.v2.ListingResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListingAdmin.v2.ListingResponse"
                }
              }
            }
          },
          "202": {
            "description": "Listing data has been accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListingAdmin.v2.ListingResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListingAdmin.v2.ListingResponse"
                }
              }
            }
          },
          "400": {
            "description": "Listing data is not valid",
            "content": {
              "application/json": {},
              "text/json": {}
            }
          }
        },
        "security": [
          {
            "apikey": []
          },
          {
            "oauth2": [
              "api_listings_write"
            ]
          }
        ]
      }
    },
    "/v2/listings/commercial/offmarket": {
      "post": {
        "tags": [
          "Listings"
        ],
        "summary": "Creates an externally sold or leased commercial listing; or takes an existing commercial listing off the market.",
        "operationId": "listings_upsertcommercialoffmarket",
        "requestBody": {
          "description": "Listing data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListingAdmin.v2.CommercialOffMarketListing"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ListingAdmin.v2.CommercialOffMarketListing"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ListingAdmin.v2.CommercialOffMarketListing"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ListingAdmin.v2.CommercialOffMarketListing"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ListingAdmin.v2.CommercialOffMarketListing"
              }
            }
          },
          "required": true,
          "x-bodyName": "listing"
        },
        "responses": {
          "200": {
            "description": "Listing data hasn't been changed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListingAdmin.v2.ListingResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListingAdmin.v2.ListingResponse"
                }
              }
            }
          },
          "202": {
            "description": "Listing data has been accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListingAdmin.v2.ListingResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListingAdmin.v2.ListingResponse"
                }
              }
            }
          },
          "400": {
            "description": "Listing data is not valid",
            "content": {
              "application/json": {},
              "text/json": {}
            }
          }
        },
        "security": [
          {
            "apikey": []
          },
          {
            "oauth2": [
              "api_listings_write"
            ]
          }
        ]
      }
    },
    "/v2/listings/business/offmarket": {
      "post": {
        "tags": [
          "Listings"
        ],
        "summary": "Creates an externally sold business listing; or takes an existing business listing off the market.",
        "operationId": "listings_upsertbusinessoffmarket",
        "requestBody": {
          "description": "Listing data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListingAdmin.v2.BusinessOffMarketListing"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ListingAdmin.v2.BusinessOffMarketListing"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ListingAdmin.v2.BusinessOffMarketListing"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ListingAdmin.v2.BusinessOffMarketListing"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ListingAdmin.v2.BusinessOffMarketListing"
              }
            }
          },
          "required": true,
          "x-bodyName": "listing"
        },
        "responses": {
          "200": {
            "description": "Listing data hasn't been changed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListingAdmin.v2.ListingResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListingAdmin.v2.ListingResponse"
                }
              }
            }
          },
          "202": {
            "description": "Listing data has been accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListingAdmin.v2.ListingResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListingAdmin.v2.ListingResponse"
                }
              }
            }
          },
          "400": {
            "description": "Listing data is not valid",
            "content": {
              "application/json": {},
              "text/json": {}
            }
          }
        },
        "security": [
          {
            "apikey": []
          },
          {
            "oauth2": [
              "api_listings_write"
            ]
          }
        ]
      }
    },
    "/v2/listings/commercial": {
      "put": {
        "tags": [
          "Listings"
        ],
        "summary": "Creates a commercial listing.",
        "operationId": "listings_upsertcommerciallisting",
        "requestBody": {
          "description": "Listing data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListingAdmin.v2.CommercialListingV2"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ListingAdmin.v2.CommercialListingV2"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ListingAdmin.v2.CommercialListingV2"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ListingAdmin.v2.CommercialListingV2"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ListingAdmin.v2.CommercialListingV2"
              }
            }
          },
          "required": true,
          "x-bodyName": "listing"
        },
        "responses": {
          "200": {
            "description": "Listing data hasn't been changed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListingAdmin.v2.ListingResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListingAdmin.v2.ListingResponse"
                }
              }
            }
          },
          "202": {
            "description": "Listing data has been accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListingAdmin.v2.ListingResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListingAdmin.v2.ListingResponse"
                }
              }
            }
          },
          "400": {
            "description": "Listing data is not valid",
            "content": {
              "application/json": {},
              "text/json": {}
            }
          }
        },
        "security": [
          {
            "apikey": []
          },
          {
            "oauth2": [
              "api_listings_write"
            ]
          }
        ]
      }
    },
    "/v2/properties/{propertyId}/listings": {
      "get": {
        "tags": [
          "Listings"
        ],
        "summary": "Retrieve list of listings for the given property id",
        "operationId": "listings_bypropertyid",
        "parameters": [
          {
            "name": "propertyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedSince",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "listedSince",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "saleMode",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Listings.V2.SaleMode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listings for the property id",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Listings.V2.Listing"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Listings.V2.Listing"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Listings.V2.Listing"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          },
          {
            "oauth2": [
              "api_listings_read"
            ]
          }
        ]
      }
    },
    "/v2/premarket/listings/{id}": {
      "get": {
        "tags": [
          "Listings"
        ],
        "summary": "Retrieves a pre-portal listing.",
        "operationId": "PreMarket_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Pre-portal listing ID.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Pre-portal listing ID.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ListingResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ListingResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ListingResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          },
          {
            "oauth2": [
              "api_listings_read"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Listings"
        ],
        "summary": "Patch document based on the listing Id",
        "operationId": "PreMarket_Patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "```\r\nExamples:\r\n[\r\n{\r\n\t\"op\": \"replace\",\r\n\t\"path\": \"/bedrooms\",\r\n\t\"value\": 3\r\n   },\r\n{\r\n\t\"op\": \"replace\",\r\n\t\"path\": \"/listingStatus\",\r\n\t\"value\": \"sold\"\r\n},\r\n{\r\n\t\"op\": \"remove\",\r\n\t\"path\": \"/StatementOfInformation\"\r\n},\r\n{\r\n\t\"op\": \"add\",\r\n\t\"path\": \"/contacts/-\",\r\n\t\"value\": {\r\n\t\t\"firstName\": \"lily\",\r\n\t\t\"lastName\": \"li\",\r\n\t\t\"email\": \"lily.li@domain.com.au\",\r\n\t\t\"phone\": \"0411111111\",\r\n\t\t\"mobile\": null,\r\n\t\t\"fax\": null\r\n\t}\r\n}\r\n]\r\n```",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PreMarket.v1.ListingRequestJsonPatchDocument"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreMarket.v1.ListingRequestJsonPatchDocument"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PreMarket.v1.ListingRequestJsonPatchDocument"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PreMarket.v1.ListingRequestJsonPatchDocument"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ListingRequest"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ListingRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ListingRequest"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          },
          {
            "oauth2": [
              "api_listings_write"
            ]
          }
        ]
      }
    },
    "/v2/premarket/listings": {
      "post": {
        "tags": [
          "Listings"
        ],
        "summary": "Creates or updates a pre-portal listing.",
        "operationId": "PreMarket_Post",
        "requestBody": {
          "description": "Pre-portal listing request.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PreMarket.v1.ListingRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreMarket.v1.ListingRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PreMarket.v1.ListingRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PreMarket.v1.ListingRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.CreateOrUpdateListingResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.CreateOrUpdateListingResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.CreateOrUpdateListingResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreMarket.v1.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          },
          {
            "oauth2": [
              "api_listings_write"
            ]
          }
        ]
      }
    },
    "/v2/demographics/{state}/{suburb}": {
      "get": {
        "tags": [
          "Demographics"
        ],
        "summary": "Search for demographics in a given geographic level.",
        "description": "<br>Where available, all available topics and years will be returned if not supplied.\r\n<br>Note that not all suburbs will have data available for all years and topics.",
        "operationId": "Demographics_Get_ByNamedSuburb_WithoutPostcode",
        "parameters": [
          {
            "name": "state",
            "in": "path",
            "description": "The Australian state abbreviation",
            "required": true,
            "schema": {
              "type": "string"
            },
              "example": "NSW"
          },
          {
            "name": "suburb",
            "in": "path",
            "description": "Suburb name to retrieve data for",
            "required": true,
            "schema": {
              "type": "string"
            },
              "example": "Pyrmont"
          },
          {
            "name": "postcode",
            "in": "path",
            "description": "Suburb Post Code, optional, but required for suburbs with official post codes.",
            "schema": {
              "type": "string"
            },
              "example": "2009"
          },
          {
            "name": "types",
            "in": "query",
            "description": "Comma separated list of census topics to retrieve demographic data for. Possible values include:\r\n            `AgeGroupOfPopulation`, `CountryOfBirth`, `NatureOfOccupancy`,\r\n            `Occupation`, `GeographicalPopulation`, `DwellingStructure`,\r\n            `EducationAttendance`, `HousingLoanRepayment`, `MaritalStatus`,\r\n            `Religion`, `TransportToWork`, `FamilyComposition`,\r\n            `HouseholdIncome`, `Rent`, `LabourForceStatus`",
            "schema": {
              "type": "string"
            },
              "example": "Rent,TransportToWork"
          },
          {
            "name": "year",
            "in": "query",
            "description": "Census Year of data to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
              "example": 2016
            }
        ],
        "responses": {
          "200": {
            "description": "Demographics data returned",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Demographics.V1.DemographicsResults"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Demographics.V1.DemographicsResults"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Demographics.V1.DemographicsResults"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          },
          {
            "oauth2": [
              "api_demographics_read"
            ]
          }
        ]
      }
    },
    "/v2/demographics/{state}/{suburb}/{postcode}": {
      "get": {
        "tags": [
          "Demographics"
        ],
        "summary": "Search for demographics in a given geographic level.",
        "description": "<br>Where available, all available topics and years will be returned if not supplied.\r\n<br>Note that not all suburbs will have data available for all years and topics.",
        "operationId": "Demographics_Get_ByNamedSuburb",
        "parameters": [
          {
            "name": "state",
            "in": "path",
            "description": "The Australian state abbreviation",
            "required": true,
            "schema": {
              "type": "string"
            },
              "example": "NSW"
          },
          {
            "name": "suburb",
            "in": "path",
            "description": "Suburb name to retrieve data for",
            "required": true,
            "schema": {
              "type": "string"
            },
              "example": "Pyrmont"
          },
          {
            "name": "postcode",
            "in": "path",
            "description": "Suburb Post Code, optional, but required for suburbs with official post codes.",
            "schema": {
              "type": "string"
            },
              "example": "2009"
          },
          {
            "name": "types",
            "in": "query",
            "description": "Comma separated list of census topics to retrieve demographic data for. Possible values include:\r\n            `AgeGroupOfPopulation`, `CountryOfBirth`, `NatureOfOccupancy`,\r\n            `Occupation`, `GeographicalPopulation`, `DwellingStructure`,\r\n            `EducationAttendance`, `HousingLoanRepayment`, `MaritalStatus`,\r\n            `Religion`, `TransportToWork`, `FamilyComposition`,\r\n            `HouseholdIncome`, `Rent`, `LabourForceStatus`",
            "schema": {
              "type": "string"
            },
              "example": "Rent,TransportToWork"
          },
          {
            "name": "year",
            "in": "query",
            "description": "Census Year of data to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
              "example": 2016
            }
        ],
        "responses": {
          "200": {
            "description": "Demographics data returned",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Demographics.V1.DemographicsResults"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Demographics.V1.DemographicsResults"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Demographics.V1.DemographicsResults"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          },
          {
            "oauth2": [
              "api_demographics_read"
            ]
          }
        ]
      }
    },
    "/v2/suburbPerformanceStatistics/{state}/{suburb}/{postcode}": {
      "get": {
        "tags": [
          "SuburbPerformanceStatistics"
        ],
        "summary": "Search for sales statistics in a given geographic level.",
        "description": "- Standard Auction Clearance Rate formula is: `AuctionNumberSold / (AuctionNumberAuctioned + AuctionNumberWithdrawn)`\r\n- The Rate is considered Not Statistic Reliable if: `AuctionNumberAuctioned + AuctionNumberWithdrawn < 10`\r\n- APM Standard Gross Rental Yield formula is: `(MedianRentListingPrice* 52) / MedianSoldPrice`\r\n- The Yield is considered Not Available if: `MedianRentListingPrice is null or MedianSoldPrice is null`",
        "operationId": "SuburbPerformance_Get_ByNamedSuburb",
        "parameters": [
          {
            "name": "state",
            "in": "path",
            "description": "The Australian state abbreviation",
            "required": true,
            "schema": {
              "type": "string"
            },
              "example": "NSW"
          },
          {
            "name": "suburb",
            "in": "path",
            "description": "Suburb name to retrieve data for",
            "required": true,
            "schema": {
              "type": "string"
            },
              "example": "Pyrmont"
          },
          {
            "name": "postcode",
            "in": "path",
            "description": "Suburb Post Code, optional, but required for suburbs with official post codes.",
            "schema": {
              "type": "string"
            },
              "example": "2009"
          },
          {
            "name": "propertyCategory",
            "in": "query",
            "description": "Category of sales results to show. Possible values: `House`, `Unit`",
            "schema": {
              "$ref": "#/components/schemas/SuburbPerformanceStatistics.V3.PropertyCategory"
            },
            "example": "House"
          },
          {
            "name": "bedrooms",
            "in": "query",
            "description": "Number of bedrooms to use in the sales search",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
              "example": 3
          },
          {
            "name": "periodSize",
            "in": "query",
            "description": "Unit of the measurement period to use",
            "schema": {
              "$ref": "#/components/schemas/SuburbPerformanceStatistics.V3.PeriodSize"
            },
            "example": "Quarters"
          },
          {
            "name": "startingPeriodRelativeToCurrent",
            "in": "query",
            "description": "When to start stats from. 1 = current period, 2 = previous period, etc.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            },
              "example": 1
          },
          {
            "name": "totalPeriods",
            "in": "query",
            "description": "Number of total periods to show statistics for. i.e. 4 Quarters would be 1 full year",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 4
            },
              "example": 4
            }
        ],
        "responses": {
          "200": {
            "description": "Statistics data returned",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SuburbPerformanceStatistics.V3.SuburbPerformance"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuburbPerformanceStatistics.V3.SuburbPerformance"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuburbPerformanceStatistics.V3.SuburbPerformance"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          },
          {
            "oauth2": [
              "api_suburbperformance_read"
            ]
          }
        ]
      }
    },
    "/v2/schools/{latitude}/{longitude}": {
      "get": {
        "tags": [
          "Schools"
        ],
        "summary": "Search for a school in a location",
        "operationId": "Schools_Search_ByLocation",
        "parameters": [
          {
            "name": "latitude",
            "in": "path",
            "description": "Latitude to search",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            },
              "example": -33.8
          },
          {
            "name": "longitude",
            "in": "path",
            "description": "Longitude to search",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            },
              "example": 150.9
            }
        ],
        "responses": {
          "200": {
            "description": "Schools data returned",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Schools.V2.SchoolWithDistance"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Schools.V2.SchoolWithDistance"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Schools.V2.SchoolWithDistance"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          },
          {
            "oauth2": [
              "api_locations_read"
            ]
          }
        ]
      }
    },
    "/v2/schools/{id}": {
      "get": {
        "tags": [
          "Schools"
        ],
        "summary": "Retrieve the details of a school by Id",
        "description": "Domain School Ids can be obtained from the search by location endpoint.",
        "operationId": "Schools_Get_ById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "School id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
              "example": 1234
            }
        ],
        "responses": {
          "200": {
            "description": "Schools data returned",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Schools.V2.School"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Schools.V2.School"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Schools.V2.School"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          },
          {
            "oauth2": [
              "api_locations_read"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ListingAdmin.v2.Inspection": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "description": "Format: yyyy-mm-dd HH:mm:ss eg: 2015-10-20 13:30:00",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "description": "Format: yyyy-mm-dd HH:mm:ss, eg: 2015-10-20 14:30:00",
            "format": "date-time"
          },
          "repeat": {
            "type": "boolean",
            "description": "Specifies if the inspection is recurring weekly"
          }
        },
        "description": "Inspection times"
      },
      "ListingAdmin.v2.InspectionDetails": {
        "type": "object",
        "properties": {
          "inspectionDescription": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Free text field for inspections"
          },
          "inspections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListingAdmin.v2.Inspection"
            },
            "description": "Inspection times of the listing"
          }
        },
        "description": "Inspection details"
      },
      "ListingAdmin.v2.Contact": {
        "type": "object",
        "properties": {
          "domainAgentId": {
            "type": "integer",
            "description": "Domain ID of the contact person at the agency",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "description": "First name. Maximum 50 characters."
          },
          "lastName": {
            "type": "string",
            "description": "Last name. Maximum 50 characters."
          },
          "phone": {
            "type": "string",
            "description": "Phone. Maximum 20 characters."
          },
          "fax": {
            "type": "string",
            "description": "Fax. Maximum 20 characters."
          },
          "mobile": {
            "type": "string",
            "description": "Mobile. Maximum 20 characters."
          },
          "email": {
            "type": "string",
            "description": "Email. Maximum 100 characters."
          },
          "receiveEmails": {
            "type": "boolean",
            "description": "Indicates whether the contact person should receive emails for the listing"
          }
        },
        "description": "Contact domain model"
      },
      "ListingAdmin.v2.SoldDetails": {
        "required": [
          "soldType",
          "soldPrice"
        ],
        "type": "object",
        "properties": {
          "soldType": {
            "enum": [
              "auction",
              "privateTreaty",
              "priorToAuction"
            ],
            "type": "string",
            "description": "Sold Type"
          },
          "soldPrice": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "Price property was sold for",
            "format": "int32"
          },
          "displaySoldPrice": {
            "type": "boolean",
            "description": "Indicates how the price will be displayed for free to the general public, default to true if value not provided"
          }
        },
        "description": "Sold Details"
      },
      "ListingAdmin.v2.LeasedDetails": {
        "type": "object",
        "properties": {
          "leasedPrice": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "Optional. The weekly rental price.",
            "format": "int32"
          },
          "leasedDuration": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "The duration of the lease in weeks.",
            "format": "int32"
          }
        },
        "description": "Leased Details"
      },
      "ListingAdmin.v2.OffMarketDetailsBase": {
        "required": [
          "offMarketAction",
          "actionDate"
        ],
        "type": "object",
        "properties": {
          "offMarketAction": {
            "enum": [
              "withDrawn",
              "sold",
              "leased"
            ],
            "type": "string",
            "description": "Off Market Action"
          },
          "actionDate": {
            "type": "string",
            "description": "The date property was sold, leased or withdrawn",
            "format": "date-time"
          },
          "soldDetails": {
            "$ref": "#/components/schemas/ListingAdmin.v2.SoldDetails"
          },
          "leasedDetails": {
            "$ref": "#/components/schemas/ListingAdmin.v2.LeasedDetails"
          },
          "comment": {
            "type": "string",
            "description": "Extra details for off market action"
          }
        },
        "description": "Off market details base"
      },
      "ListingAdmin.v2.ParkingDetails": {
        "required": [
          "parkingType",
          "numberOfSpaces"
        ],
        "type": "object",
        "properties": {
          "parkingType": {
            "enum": [
              "onSite",
              "onStreet",
              "noParking",
              "garage",
              "carport",
              "outdoor"
            ],
            "type": "string",
            "description": "Can have the value \"OnSite\", \"OnStreet\", \"NoParking\". Default: \"NoParking\""
          },
          "numberOfSpaces": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "Number of parking spaces on site",
            "format": "int32"
          }
        },
        "description": "Parking Details"
      },
      "ListingAdmin.v2.ParkingInfo": {
        "type": "object",
        "properties": {
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListingAdmin.v2.ParkingDetails"
            },
            "description": "Details for available parking spaces"
          },
          "information": {
            "type": "string",
            "description": "Additional information regarding the parking condition"
          }
        },
        "description": "Parking Details"
      },
      "ListingAdmin.v2.PropertyMedia": {
        "required": [
          "url"
        ],
        "type": "object",
        "properties": {
          "resourceType": {
            "enum": [
              "photograph",
              "floorPlan",
              "video",
              "virtualTour",
              "webLink"
            ],
            "type": "string",
            "description": "Type of the resource"
          },
          "url": {
            "pattern": "^http[s]?:+.*",
            "type": "string",
            "description": "shows the place from where file can be downloaded"
          }
        },
        "description": "Resource related to the listing"
      },
      "ListingAdmin.v2.GeoLocation": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "description": "Latitude",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "description": "Longitude",
            "format": "double"
          }
        },
        "description": "Contains geocoding of an address"
      },
      "ListingAdmin.v2.Address": {
        "required": [
          "street",
          "suburb",
          "postcode",
          "state"
        ],
        "type": "object",
        "properties": {
          "unitNumber": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Unit number for apartments, maximum 30 characters"
          },
          "street": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Street name, maximum 100 characters"
          },
          "displayOption": {
            "enum": [
              "unspecified",
              "fullAddress",
              "streetAndSuburb",
              "suburbOnly",
              "regionOnly",
              "areaOnly",
              "stateOnly"
            ],
            "type": "string",
            "description": "What granularity to display the properties location at"
          },
          "suggestedGeoLocation": {
            "$ref": "#/components/schemas/ListingAdmin.v2.GeoLocation"
          },
          "streetNumber": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "Street number, maximum 20 characters"
          },
          "suburb": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Suburb name , maximum 50 characters"
          },
          "postcode": {
            "pattern": "^[0-9]{3,4}$",
            "type": "string",
            "description": "Postcode"
          },
          "state": {
            "enum": [
              "nsw",
              "vic",
              "act",
              "sa",
              "wa",
              "tas",
              "qld",
              "nt"
            ],
            "type": "string",
            "description": "State"
          }
        },
        "description": "Address structure for property"
      },
      "ListingAdmin.v2.Area": {
        "type": "object",
        "properties": {
          "value": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "number",
            "description": "Area. Will be rounded to 2 decimals.",
            "format": "double"
          },
          "from": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "number",
            "description": "Minimum area",
            "format": "double"
          },
          "to": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "number",
            "description": "Maximum area",
            "format": "double"
          },
          "unit": {
            "enum": [
              "squareMetres",
              "acres",
              "hectares",
              "squareFeet",
              "squareYards",
              "squares"
            ],
            "type": "string",
            "description": "Unit of measure, defaults to SquareMetres if not provided."
          }
        },
        "description": "Area information, Either single value or from and To must be provided"
      },
      "ListingAdmin.v2.LandArea": {
        "required": [
          "unit"
        ],
        "type": "object",
        "properties": {
          "unit": {
            "enum": [
              "squareMetres",
              "acres",
              "hectares",
              "squareFeet",
              "squareYards",
              "squares"
            ],
            "type": "string",
            "description": "Unit of measure"
          },
          "value": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "number",
            "description": "Area. Will be rounded to 2 decimals.",
            "format": "double"
          },
          "from": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "number",
            "description": "Minimum area",
            "format": "double"
          },
          "to": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "number",
            "description": "Maximum area",
            "format": "double"
          }
        },
        "description": "Area information, Either single value or from and To must be provided"
      },
      "ListingAdmin.v2.ResidentialOffMarketProperty": {
        "required": [
          "propertyType",
          "address"
        ],
        "type": "object",
        "properties": {
          "propertyType": {
            "type": "array",
            "items": {
              "enum": [
                "acreageSemiRural",
                "apartmentUnitFlat",
                "aquaculture",
                "blockOfUnits",
                "carSpace",
                "dairyFarming",
                "developmentSite",
                "duplex",
                "farm",
                "fishingForestry",
                "newHomeDesigns",
                "house",
                "newHouseLand",
                "irrigationServices",
                "newLand",
                "livestock",
                "newApartments",
                "penthouse",
                "retirement",
                "rural",
                "semiDetached",
                "specialistFarm",
                "studio",
                "terrace",
                "townhouse",
                "vacantLand",
                "villa",
                "cropping",
                "viticulture",
                "mixedFarming",
                "grazing",
                "horticulture",
                "equine",
                "farmlet",
                "orchard",
                "ruralLifestyle"
              ],
              "type": "string"
            },
            "description": "Residential property types<br />\r\n'Retirement' requires at least one more property type to be specified with it (for example: \"Retirement, ApartmentUnitFlat\") ['acreageSemiRural', 'apartmentUnitFlat', 'aquaculture', 'blockOfUnits', 'carSpace', 'dairyFarming', 'developmentSite', 'duplex', 'farm', 'fishingForestry', 'newHomeDesigns', 'house', 'newHouseLand', 'irrigationServices', 'newLand', 'livestock', 'newApartments', 'penthouse', 'retirement', 'rural', 'semiDetached', 'specialistFarm', 'studio', 'terrace', 'townhouse', 'vacantLand', 'villa', 'cropping', 'viticulture', 'mixedFarming', 'grazing', 'horticulture', 'equine', 'farmlet', 'orchard', 'ruralLifestyle']."
          },
          "bedRooms": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "Number of bedrooms",
            "format": "int32"
          },
          "bathRooms": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "Number of bathrooms",
            "format": "int32"
          },
          "parkingInfo": {
            "$ref": "#/components/schemas/ListingAdmin.v2.ParkingInfo"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListingAdmin.v2.PropertyMedia"
            },
            "description": "List of image files, photos or floor plans related to the listing."
          },
          "address": {
            "$ref": "#/components/schemas/ListingAdmin.v2.Address"
          },
          "area": {
            "$ref": "#/components/schemas/ListingAdmin.v2.Area"
          },
          "landArea": {
            "$ref": "#/components/schemas/ListingAdmin.v2.LandArea"
          }
        },
        "description": "Residential off market property"
      },
      "ListingAdmin.v2.ResidentialOffMarketListing": {
        "required": [
          "domainAgencyID",
          "providerAdId",
          "listingAction",
          "offMarketDetails",
          "propertyDetails"
        ],
        "type": "object",
        "properties": {
          "domainAdId": {
            "type": "integer",
            "description": "Domain Ad ID",
            "format": "int32",
            "readOnly": true
          },
          "inspectionDetails": {
            "$ref": "#/components/schemas/ListingAdmin.v2.InspectionDetails"
          },
          "isRural": {
            "type": "boolean",
            "description": "True if the property is rural",
            "readOnly": true
          },
          "listingProvider": {
            "type": "string",
            "description": "A string identifying the data provider"
          },
          "domainAgencyID": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "The Domain Agency ID",
            "format": "int32"
          },
          "providerAdId": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "External Advertisement Id of up to 50 characters will be stored.<br />\r\nThis value is used to identify an Advertisement for updates and should be unique for listing provider.<br />\r\nThis value is case-insensitive (meaning AAAA will update aaaa)."
          },
          "description": {
            "maxLength": 6000,
            "minLength": 0,
            "type": "string",
            "description": "Description of the property.\r\n6000 characters in length. The following HTML elements are permitted: &lt;br /&gt;, &lt;p&gt;&lt;/p&gt;, &amp;nbsp;. HTML must be well-formed.\r\nCarriage Returns are interpreted as line breaks. Foreign characters must be HTML encoded, e.g., façade for façade"
          },
          "summary": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "description": "'Headline' Any HTML stripped out.  If the Summary is less than 80 characters long then the description is concatenated to it and the total trimmed to 250 characters."
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListingAdmin.v2.Contact"
            },
            "description": "Minimum required attributes: First name, last name and E-mail.\r\nIf the DomainAgentId is provided, contact information will be based on the existing agent found for that id.\r\nOtherwise first name, last name and email will be used to find the matching contact. A new contact will be created if no contact can be found."
          },
          "listingAction": {
            "enum": [
              "sale",
              "rent"
            ],
            "type": "string",
            "description": "Sale or Rent"
          },
          "offMarketDetails": {
            "$ref": "#/components/schemas/ListingAdmin.v2.OffMarketDetailsBase"
          },
          "propertyDetails": {
            "$ref": "#/components/schemas/ListingAdmin.v2.ResidentialOffMarketProperty"
          }
        },
        "description": "Residential off market listing"
      },
      "ListingAdmin.v2.ListingResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The listing job Id. \r\nThis job will eventually be processed."
          },
          "agencyId": {
            "type": "integer",
            "description": "Agency Id from Domain.",
            "format": "int32"
          },
          "providerId": {
            "type": "string",
            "description": "Provider Id for the agency."
          },
          "providerAdId": {
            "type": "string",
            "description": "Listing identifier provided by CRM."
          },
          "versionId": {
            "type": "string",
            "description": "Version Id"
          },
          "processStatus": {
            "enum": [
              "queued",
              "processing",
              "processed",
              "searchable",
              "failed",
              "error"
            ],
            "type": "string",
            "description": "Status of listing been processed"
          }
        },
        "description": "Represent the listing job."
      },
      "ListingAdmin.v2.SpecificUnitDetail": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "description": "Unit number"
          },
          "size": {
            "type": "integer",
            "description": "Unit size",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "description": "Unit price",
            "format": "double"
          },
          "notes": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string",
            "description": "Additional notes"
          },
          "isSoldOrLeased": {
            "type": "boolean",
            "description": "Is it available?"
          },
          "occupancy": {
            "enum": [
              "tenanted",
              "vacant"
            ],
            "type": "string",
            "description": "Occupancy type"
          },
          "priceUnit": {
            "enum": [
              "totalAmount",
              "perSqm"
            ],
            "type": "string",
            "description": "Price unit type"
          },
          "leasePriceForSaleorLease": {
            "type": "number",
            "description": "Lease price for sale or lease",
            "format": "double"
          }
        },
        "description": "offered units details"
      },
      "ListingAdmin.v2.Parking": {
        "type": "object",
        "properties": {
          "parkingType": {
            "enum": [
              "onSite",
              "onStreet",
              "noParking"
            ],
            "type": "string",
            "description": "Can have the value \"OnSite\", \"OnStreet\", \"NoParking\". Default \"NoParking\""
          },
          "numberOnSite": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "Number On Site",
            "format": "int32"
          },
          "information": {
            "type": "string",
            "description": "Additional information regarding the parking condition"
          }
        },
        "description": "Parking Details"
      },
      "ListingAdmin.v2.CommercialOffMarketProperty": {
        "required": [
          "propertyType",
          "address"
        ],
        "type": "object",
        "properties": {
          "propertyType": {
            "type": "array",
            "items": {
              "enum": [
                "aquaculture",
                "dairyFarming",
                "developmentLand",
                "fishingForestry",
                "hotelLeisure",
                "industrialWarehouse",
                "irrigationServices",
                "livestock",
                "internationalCommercial",
                "medicalConsulting",
                "offices",
                "parkingCarSpace",
                "retail",
                "ruralCommercialFarming",
                "showroomsBulkyGoods",
                "servicedOffices",
                "other",
                "cropping",
                "viticulture",
                "mixedFarming",
                "grazing",
                "horticulture",
                "equine",
                "farmlet",
                "orchard",
                "ruralLifestyle"
              ],
              "type": "string"
            },
            "description": "Commercial property types ['aquaculture', 'dairyFarming', 'developmentLand', 'fishingForestry', 'hotelLeisure', 'industrialWarehouse', 'irrigationServices', 'livestock', 'internationalCommercial', 'medicalConsulting', 'offices', 'parkingCarSpace', 'retail', 'ruralCommercialFarming', 'showroomsBulkyGoods', 'servicedOffices', 'other', 'cropping', 'viticulture', 'mixedFarming', 'grazing', 'horticulture', 'equine', 'farmlet', 'orchard', 'ruralLifestyle']."
          },
          "buildingType": {
            "enum": [
              "whole",
              "part",
              "nA"
            ],
            "type": "string",
            "description": "Building Type"
          },
          "parking": {
            "$ref": "#/components/schemas/ListingAdmin.v2.Parking"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListingAdmin.v2.PropertyMedia"
            },
            "description": "List of image files, photos or floor plans related to the listing."
          },
          "address": {
            "$ref": "#/components/schemas/ListingAdmin.v2.Address"
          },
          "area": {
            "$ref": "#/components/schemas/ListingAdmin.v2.Area"
          },
          "landArea": {
            "$ref": "#/components/schemas/ListingAdmin.v2.LandArea"
          }
        },
        "description": "Commercial off market property"
      },
      "ListingAdmin.v2.CommercialOffMarketListing": {
        "required": [
          "domainAgencyID",
          "providerAdId",
          "listingAction",
          "offMarketDetails",
          "propertyDetails"
        ],
        "type": "object",
        "properties": {
          "unitsOffered": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "Integer value of units offered for sale or lease",
            "format": "int32"
          },
          "unitDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListingAdmin.v2.SpecificUnitDetail"
            },
            "description": "Units details"
          },
          "annualReturn": {
            "type": "integer",
            "description": "Integer value of percentage return on this property or business.",
            "format": "int32"
          },
          "nabers": {
            "maximum": 6,
            "minimum": 0,
            "type": "number",
            "description": "The NABERS Rating is the energy efficiency rating that the property has been measured to have. \r\nThis rating is measured in increments of .5 and can range from 0 to 6. \r\nThe NABERS rating is required for spaces within office buildings of 1000 square metres or more.\r\nFor more information on the NABERS rating system please visit http://www.nabers.gov.au",
            "format": "double"
          },
          "highlights": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Highlight Items"
          },
          "domainAdId": {
            "type": "integer",
            "description": "Domain Ad ID",
            "format": "int32",
            "readOnly": true
          },
          "inspectionDetails": {
            "$ref": "#/components/schemas/ListingAdmin.v2.InspectionDetails"
          },
          "isRural": {
            "type": "boolean",
            "description": "True if the property is rural",
            "readOnly": true
          },
          "listingProvider": {
            "type": "string",
            "description": "A string identifying the data provider"
          },
          "domainAgencyID": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "The Domain Agency ID",
            "format": "int32"
          },
          "providerAdId": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "External Advertisement Id of up to 50 characters will be stored.<br />\r\nThis value is used to identify an Advertisement for updates and should be unique for listing provider.<br />\r\nThis value is case-insensitive (meaning AAAA will update aaaa)."
          },
          "description": {
            "maxLength": 6000,
            "minLength": 0,
            "type": "string",
            "description": "Description of the property.\r\n6000 characters in length. The following HTML elements are permitted: &lt;br /&gt;, &lt;p&gt;&lt;/p&gt;, &amp;nbsp;. HTML must be well-formed.\r\nCarriage Returns are interpreted as line breaks. Foreign characters must be HTML encoded, e.g., façade for façade"
          },
          "summary": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "description": "'Headline' Any HTML stripped out.  If the Summary is less than 80 characters long then the description is concatenated to it and the total trimmed to 250 characters."
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListingAdmin.v2.Contact"
            },
            "description": "Minimum required attributes: First name, last name and E-mail.\r\nIf the DomainAgentId is provided, contact information will be based on the existing agent found for that id.\r\nOtherwise first name, last name and email will be used to find the matching contact. A new contact will be created if no contact can be found."
          },
          "listingAction": {
            "enum": [
              "sale",
              "rent"
            ],
            "type": "string",
            "description": "Sale or Rent"
          },
          "offMarketDetails": {
            "$ref": "#/components/schemas/ListingAdmin.v2.OffMarketDetailsBase"
          },
          "propertyDetails": {
            "$ref": "#/components/schemas/ListingAdmin.v2.CommercialOffMarketProperty"
          }
        },
        "description": "Commercial off market listing"
      },
      "ListingAdmin.v2.SaleInfo": {
        "required": [
          "annualSales",
          "annualProfit",
          "stockValue"
        ],
        "type": "object",
        "properties": {
          "annualSales": {
            "type": "number",
            "description": "Annual sales amount for the business",
            "format": "double"
          },
          "annualProfit": {
            "type": "number",
            "description": "Annual profit amount for the business",
            "format": "double"
          },
          "stockValue": {
            "type": "number",
            "description": "Stock value of the business",
            "format": "double"
          }
        },
        "description": "Contains details about a business sales info"
      },
      "ListingAdmin.v2.BusinessOffMarketProperty": {
        "required": [
          "propertyType",
          "address"
        ],
        "type": "object",
        "properties": {
          "propertyType": {
            "type": "array",
            "items": {
              "enum": [
                "accessoriesParts",
                "accommodationTourism",
                "accounting",
                "adult",
                "advertisingMarketing",
                "aerial",
                "aeronautical",
                "agedCare",
                "agricultural",
                "air",
                "aircraft",
                "alarms",
                "alcoholLiquor",
                "amusements",
                "animalRelated",
                "aquaculture",
                "aquaticMarineMarinaBerth",
                "artsCrafts",
                "autoElectrical",
                "automotive",
                "backpackerHostel",
                "bakery",
                "barsNightclubs",
                "beautyHealth",
                "beautyProducts",
                "beautySalon",
                "bikeAndMotorcycle",
                "boardingKennels",
                "boatsMarineMarinaBerth",
                "bookkeeping",
                "brokerage",
                "builder",
                "buildingAndConstruction",
                "bus",
                "butcher",
                "cafeCoffeeShop",
                "car",
                "carBusTruck",
                "carDealership",
                "carRental",
                "carWash",
                "caravanPark",
                "carpenter",
                "catering",
                "childCare",
                "civil",
                "cleaning",
                "cleaningAndMaintenance",
                "clinicalPractice",
                "clothingAccessories",
                "clothingFootwear",
                "communication",
                "communications",
                "computerIT",
                "computerAndInternet",
                "construction",
                "convenienceStore",
                "copyLaminate",
                "courier",
                "cropHarvesting",
                "customs",
                "dairyFarming",
                "deli",
                "dental",
                "detailing",
                "distributors",
                "drivingSchools",
                "educationTraining",
                "educational",
                "electrical",
                "employmentRecruitment",
                "entertainment",
                "entertainmentTechnology",
                "export",
                "farming",
                "fertiliser",
                "finance",
                "financialServices",
                "fishingForestry",
                "floristNursery",
                "foodBeverage",
                "foodBeverageHospitality",
                "franchiseBusinessOpportunities",
                "freight",
                "fruitVegFreshProduce",
                "fruitPicking",
                "functionCentre",
                "furnitureTimber",
                "gambling",
                "gardenHousehold",
                "gardenNurseries",
                "gardening",
                "glassCeramic",
                "guestHouseBB",
                "hairdresser",
                "healthBeauty",
                "healthSpa",
                "hire",
                "homeGarden",
                "homeBased",
                "homewareHardware",
                "hospital",
                "hotel",
                "huntingTrap",
                "import",
                "importExportWholesale",
                "industrialManufacturing",
                "insemination",
                "insurance",
                "internet",
                "irrigationServices",
                "juiceBar",
                "landClearing",
                "landscaping",
                "laundryDryCleaning",
                "legal",
                "leisureEntertainment",
                "limousineTaxi",
                "livestock",
                "machinery",
                "machineryMetal",
                "managementRights",
                "manufacturers",
                "manufacturingEngineering",
                "marine",
                "massage",
                "mechanicalRepair",
                "media",
                "medical",
                "medicalPractice",
                "miningEarthMoving",
                "mobileServices",
                "motel",
                "motorcycle",
                "musicRelated",
                "mustering",
                "nails",
                "naturalTherapies",
                "newsagency",
                "nursery",
                "nursingHome",
                "officeSupplies",
                "oilGas",
                "panelBeating",
                "paperPrinting",
                "parkingCarSpace",
                "pestRelated",
                "pharmacies",
                "plastic",
                "plumbing",
                "poolWater",
                "postOffices",
                "printPhoto",
                "professional",
                "propertyRealEstate",
                "rail",
                "recreationSport",
                "recruitment",
                "repair",
                "resort",
                "restaurant",
                "retail",
                "retailer",
                "retirement",
                "retirementVillage",
                "road",
                "rural",
                "scientific",
                "sea",
                "security",
                "serviceStation",
                "services",
                "shearing",
                "sportsComplexGym",
                "supermarket",
                "takeawayFood",
                "taxi",
                "themePark",
                "tours",
                "training",
                "transportDistribution",
                "travel",
                "truck",
                "vending",
                "water",
                "welding",
                "wholesale",
                "wholesalers",
                "woolClassing",
                "wreckers",
                "alcoholGrocery",
                "cafeRestaurants",
                "discountStore",
                "ecoFriendly",
                "green",
                "grocery",
                "specialityRetail",
                "storage",
                "travelAgency",
                "varietyStore",
                "chickenShop",
                "seafoodShop",
                "deliCafe",
                "cropping",
                "viticulture",
                "grazing",
                "horticulture",
                "equine",
                "farmlet",
                "orchard",
                "ruralLifestyle",
                "onlineBusiness"
              ],
              "type": "string"
            },
            "description": "Business property types ['accessoriesParts', 'accommodationTourism', 'accounting', 'adult', 'advertisingMarketing', 'aerial', 'aeronautical', 'agedCare', 'agricultural', 'air', 'aircraft', 'alarms', 'alcoholLiquor', 'amusements', 'animalRelated', 'aquaculture', 'aquaticMarineMarinaBerth', 'artsCrafts', 'autoElectrical', 'automotive', 'backpackerHostel', 'bakery', 'barsNightclubs', 'beautyHealth', 'beautyProducts', 'beautySalon', 'bikeAndMotorcycle', 'boardingKennels', 'boatsMarineMarinaBerth', 'bookkeeping', 'brokerage', 'builder', 'buildingAndConstruction', 'bus', 'butcher', 'cafeCoffeeShop', 'car', 'carBusTruck', 'carDealership', 'carRental', 'carWash', 'caravanPark', 'carpenter', 'catering', 'childCare', 'civil', 'cleaning', 'cleaningAndMaintenance', 'clinicalPractice', 'clothingAccessories', 'clothingFootwear', 'communication', 'communications', 'computerIT', 'computerAndInternet', 'construction', 'convenienceStore', 'copyLaminate', 'courier', 'cropHarvesting', 'customs', 'dairyFarming', 'deli', 'dental', 'detailing', 'distributors', 'drivingSchools', 'educationTraining', 'educational', 'electrical', 'employmentRecruitment', 'entertainment', 'entertainmentTechnology', 'export', 'farming', 'fertiliser', 'finance', 'financialServices', 'fishingForestry', 'floristNursery', 'foodBeverage', 'foodBeverageHospitality', 'franchiseBusinessOpportunities', 'freight', 'fruitVegFreshProduce', 'fruitPicking', 'functionCentre', 'furnitureTimber', 'gambling', 'gardenHousehold', 'gardenNurseries', 'gardening', 'glassCeramic', 'guestHouseBB', 'hairdresser', 'healthBeauty', 'healthSpa', 'hire', 'homeGarden', 'homeBased', 'homewareHardware', 'hospital', 'hotel', 'huntingTrap', 'import', 'importExportWholesale', 'industrialManufacturing', 'insemination', 'insurance', 'internet', 'irrigationServices', 'juiceBar', 'landClearing', 'landscaping', 'laundryDryCleaning', 'legal', 'leisureEntertainment', 'limousineTaxi', 'livestock', 'machinery', 'machineryMetal', 'managementRights', 'manufacturers', 'manufacturingEngineering', 'marine', 'massage', 'mechanicalRepair', 'media', 'medical', 'medicalPractice', 'miningEarthMoving', 'mobileServices', 'motel', 'motorcycle', 'musicRelated', 'mustering', 'nails', 'naturalTherapies', 'newsagency', 'nursery', 'nursingHome', 'officeSupplies', 'oilGas', 'panelBeating', 'paperPrinting', 'parkingCarSpace', 'pestRelated', 'pharmacies', 'plastic', 'plumbing', 'poolWater', 'postOffices', 'printPhoto', 'professional', 'propertyRealEstate', 'rail', 'recreationSport', 'recruitment', 'repair', 'resort', 'restaurant', 'retail', 'retailer', 'retirement', 'retirementVillage', 'road', 'rural', 'scientific', 'sea', 'security', 'serviceStation', 'services', 'shearing', 'sportsComplexGym', 'supermarket', 'takeawayFood', 'taxi', 'themePark', 'tours', 'training', 'transportDistribution', 'travel', 'truck', 'vending', 'water', 'welding', 'wholesale', 'wholesalers', 'woolClassing', 'wreckers', 'alcoholGrocery', 'cafeRestaurants', 'discountStore', 'ecoFriendly', 'green', 'grocery', 'specialityRetail', 'storage', 'travelAgency', 'varietyStore', 'chickenShop', 'seafoodShop', 'deliCafe', 'cropping', 'viticulture', 'grazing', 'horticulture', 'equine', 'farmlet', 'orchard', 'ruralLifestyle', 'onlineBusiness']."
          },
          "parking": {
            "$ref": "#/components/schemas/ListingAdmin.v2.Parking"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListingAdmin.v2.PropertyMedia"
            },
            "description": "List of image files, photos or floor plans related to the listing."
          },
          "address": {
            "$ref": "#/components/schemas/ListingAdmin.v2.Address"
          },
          "area": {
            "$ref": "#/components/schemas/ListingAdmin.v2.Area"
          },
          "landArea": {
            "$ref": "#/components/schemas/ListingAdmin.v2.LandArea"
          }
        },
        "description": "Business off market property"
      },
      "ListingAdmin.v2.BusinessOffMarketListing": {
        "required": [
          "domainAgencyID",
          "providerAdId",
          "listingAction",
          "offMarketDetails",
          "propertyDetails"
        ],
        "type": "object",
        "properties": {
          "saleInfo": {
            "$ref": "#/components/schemas/ListingAdmin.v2.SaleInfo"
          },
          "domainAdId": {
            "type": "integer",
            "description": "Domain Ad ID",
            "format": "int32",
            "readOnly": true
          },
          "inspectionDetails": {
            "$ref": "#/components/schemas/ListingAdmin.v2.InspectionDetails"
          },
          "isRural": {
            "type": "boolean",
            "description": "True if the property is rural",
            "readOnly": true
          },
          "listingProvider": {
            "type": "string",
            "description": "A string identifying the data provider"
          },
          "domainAgencyID": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "The Domain Agency ID",
            "format": "int32"
          },
          "providerAdId": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "External Advertisement Id of up to 50 characters will be stored.<br />\r\nThis value is used to identify an Advertisement for updates and should be unique for listing provider.<br />\r\nThis value is case-insensitive (meaning AAAA will update aaaa)."
          },
          "description": {
            "maxLength": 6000,
            "minLength": 0,
            "type": "string",
            "description": "Description of the property.\r\n6000 characters in length. The following HTML elements are permitted: &lt;br /&gt;, &lt;p&gt;&lt;/p&gt;, &amp;nbsp;. HTML must be well-formed.\r\nCarriage Returns are interpreted as line breaks. Foreign characters must be HTML encoded, e.g., façade for façade"
          },
          "summary": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "description": "'Headline' Any HTML stripped out.  If the Summary is less than 80 characters long then the description is concatenated to it and the total trimmed to 250 characters."
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListingAdmin.v2.Contact"
            },
            "description": "Minimum required attributes: First name, last name and E-mail.\r\nIf the DomainAgentId is provided, contact information will be based on the existing agent found for that id.\r\nOtherwise first name, last name and email will be used to find the matching contact. A new contact will be created if no contact can be found."
          },
          "listingAction": {
            "enum": [
              "sale",
              "rent"
            ],
            "type": "string",
            "description": "Sale or Rent"
          },
          "offMarketDetails": {
            "$ref": "#/components/schemas/ListingAdmin.v2.OffMarketDetailsBase"
          },
          "propertyDetails": {
            "$ref": "#/components/schemas/ListingAdmin.v2.BusinessOffMarketProperty"
          }
        },
        "description": "Business off market listing"
      },
      "ListingAdmin.v2.CommercialPrice": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "priceUnitType": {
            "enum": [
              "totalAmount",
              "perSqm"
            ],
            "type": "string",
            "description": "Price Unit type. Can have the values \"TotalAmount\", \"PerSqm\". Default = \"TotalAmount\""
          },
          "priceType": {
            "enum": [
              "gross",
              "net"
            ],
            "type": "string",
            "description": "Type can have the values \"Gross\", \"Net\". Default \"Net\""
          },
          "gstOptionType": {
            "enum": [
              "nA",
              "inc",
              "ex"
            ],
            "type": "string",
            "description": "GST Option Type. Can have the values \"NA\", \"Inc\", \"Ex\". Default = \"NA\""
          },
          "priceReduction": {
            "type": "boolean",
            "description": "Indicates if this property is under price reduction"
          },
          "displayText": {
            "maxLength": 80,
            "minLength": 0,
            "type": "string",
            "description": "When provided this will be shown instead of the price range, e.g.: \"Offers over $450K considered\""
          },
          "from": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "Lowest price the property is expected to sell/rent for to set search price. For a fixed price, set this value the same as To",
            "format": "int32"
          },
          "to": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "Highest price the property is expected to sell/rent for to set search price. \r\nFor a fixed price, set this value the same as From",
            "format": "int32"
          }
        },
        "description": "Commercial component for price"
      },
      "ListingAdmin.v2.Lease": {
        "type": "object",
        "properties": {
          "termOfLeaseFrom": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "Integer value of lease term range from",
            "format": "int32"
          },
          "termOfLeaseTo": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "Integer value of lease term range to",
            "format": "int32"
          },
          "leaseOutgoings": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "Outgoing cost of current lease",
            "format": "int32"
          }
        },
        "description": "Properties for lease listings"
      },
      "ListingAdmin.v2.EOI": {
        "required": [
          "endDate"
        ],
        "type": "object",
        "properties": {
          "address": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Street address, up to 100 characters"
          },
          "endDate": {
            "type": "string",
            "description": "End date of EOI",
            "format": "date-time"
          },
          "recipientName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "The recipient name of the EOI, up to 50 characters"
          }
        },
        "description": "Express of Interest"
      },
      "ListingAdmin.v2.Tenant": {
        "type": "object",
        "properties": {
          "leaseStart": {
            "type": "string",
            "description": "The date on which the tenants lease began, or is due to begin.",
            "format": "date-time"
          },
          "leaseEnd": {
            "type": "string",
            "description": "The date on which the tenants lease is due to end",
            "format": "date-time"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Name of the current tenant of the property, up to 100 characters"
          },
          "rentalDetails": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Information regarding current rental, up to 100 characters"
          },
          "leaseOptions": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Leasing options available to a prospective tenant, up to 100 characters"
          },
          "tenantInfoTermOfLeaseFrom": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "The from range of the tenant's current lease",
            "format": "int32"
          },
          "tenantInfoTermOfLeaseTo": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "The to range of the tenant's current lease",
            "format": "int32"
          },
          "leaseDateVariable": {
            "type": "boolean",
            "description": "Is tenant lease date variable"
          }
        },
        "description": "Tenant Information"
      },
      "ListingAdmin.v2.Tender": {
        "type": "object",
        "properties": {
          "recipientName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "The recipient name of the tender, up to 50 characters"
          },
          "address": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Street address, up to 100 characters."
          },
          "endDate": {
            "type": "string",
            "description": "Closing Date",
            "format": "date-time"
          }
        },
        "description": "Tender Information"
      },
      "ListingAdmin.v2.CommercialAuction": {
        "required": [
          "dateTime"
        ],
        "type": "object",
        "properties": {
          "auctionTerms": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Terms for the auctions, up to 200 characters. Example: \"10% deposit, balance 60 days\""
          },
          "dateTime": {
            "type": "string",
            "description": "Date of the auction. format: yyyy-MM-ddTHH:mm:ss",
            "format": "date-time"
          },
          "location": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Optional. Venue for the Auction. String max 100 characters. If the Location is omitted, or included but empty, the Venue will default to \"On Site\"."
          },
          "url": {
            "pattern": "^http[s]?:+.*",
            "type": "string",
            "description": "Optional on-line auction URL. Must be a valid URL and maximum 255 characters. If an empty string is received, the property will be re-set."
          }
        },
        "description": "Commercial Auction Details"
      },
      "ListingAdmin.v2.PropertyPdf": {
        "required": [
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "pattern": "^http[s]?:+.*",
            "type": "string",
            "description": "Url of the PDF"
          },
          "type": {
            "enum": [
              "commercialPdf",
              "newDevBrochurePdf",
              "floorplanPdf",
              "devProjectPdf"
            ],
            "type": "string",
            "description": "Type of the PDF"
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Description of the PDF"
          }
        },
        "description": "PDF file related to the listing"
      },
      "ListingAdmin.v2.CommercialProperty": {
        "required": [
          "propertyType",
          "address"
        ],
        "type": "object",
        "properties": {
          "propertyType": {
            "type": "array",
            "items": {
              "enum": [
                "aquaculture",
                "dairyFarming",
                "developmentLand",
                "fishingForestry",
                "hotelLeisure",
                "industrialWarehouse",
                "irrigationServices",
                "livestock",
                "internationalCommercial",
                "medicalConsulting",
                "offices",
                "parkingCarSpace",
                "retail",
                "ruralCommercialFarming",
                "showroomsBulkyGoods",
                "servicedOffices",
                "other",
                "cropping",
                "viticulture",
                "mixedFarming",
                "grazing",
                "horticulture",
                "equine",
                "farmlet",
                "orchard",
                "ruralLifestyle"
              ],
              "type": "string"
            },
            "description": "Commercial property types ['aquaculture', 'dairyFarming', 'developmentLand', 'fishingForestry', 'hotelLeisure', 'industrialWarehouse', 'irrigationServices', 'livestock', 'internationalCommercial', 'medicalConsulting', 'offices', 'parkingCarSpace', 'retail', 'ruralCommercialFarming', 'showroomsBulkyGoods', 'servicedOffices', 'other', 'cropping', 'viticulture', 'mixedFarming', 'grazing', 'horticulture', 'equine', 'farmlet', 'orchard', 'ruralLifestyle']."
          },
          "buildingType": {
            "enum": [
              "whole",
              "part",
              "nA"
            ],
            "type": "string",
            "description": "Building Type"
          },
          "parking": {
            "$ref": "#/components/schemas/ListingAdmin.v2.Parking"
          },
          "pdfs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListingAdmin.v2.PropertyPdf"
            },
            "description": "List of PDF files related to the listing"
          },
          "isMarkedForLiveability": {
            "type": "boolean",
            "description": "Is the property liveability compliant"
          },
          "propertyName": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string",
            "description": "Name of the property up to 70 characters"
          },
          "location": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Short location information up to 30 character, e.g.: Greenhills Beach"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListingAdmin.v2.PropertyMedia"
            },
            "description": "List of image files, photos or floor plans related to the listing."
          },
          "address": {
            "$ref": "#/components/schemas/ListingAdmin.v2.Address"
          },
          "area": {
            "$ref": "#/components/schemas/ListingAdmin.v2.Area"
          },
          "landArea": {
            "$ref": "#/components/schemas/ListingAdmin.v2.LandArea"
          }
        },
        "description": "Commercial Property"
      },
      "ListingAdmin.v2.AgentContact": {
        "required": [
          "agencyId"
        ],
        "type": "object",
        "properties": {
          "agencyId": {
            "type": "integer",
            "description": "Conjunction agent's agency",
            "format": "int32"
          },
          "domainAgentId": {
            "type": "integer",
            "description": "Domain ID of the contact person at the agency",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "description": "First name. Maximum 50 characters."
          },
          "lastName": {
            "type": "string",
            "description": "Last name. Maximum 50 characters."
          },
          "phone": {
            "type": "string",
            "description": "Phone. Maximum 20 characters."
          },
          "fax": {
            "type": "string",
            "description": "Fax. Maximum 20 characters."
          },
          "mobile": {
            "type": "string",
            "description": "Mobile. Maximum 20 characters."
          },
          "email": {
            "type": "string",
            "description": "Email. Maximum 100 characters."
          },
          "receiveEmails": {
            "type": "boolean",
            "description": "Indicates whether the contact person should receive emails for the listing"
          }
        },
        "description": "Represents a agent or conjunction agent domain model\r\nThe only difference to normal contacts is agent contacts needs to have their agency specified"
      },
      "ListingAdmin.v2.SupplementaryMetadata": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "description": "Name"
          },
          "description": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "description": "Description"
          },
          "measurement": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "number",
            "description": "Measurement",
            "format": "double"
          },
          "measurementUnit": {
            "enum": [
              "squareMetres",
              "hectares",
              "millimetres",
              "dse"
            ],
            "type": "string",
            "description": "Measurement unit"
          }
        },
        "description": "Supplementary metadata"
      },
      "ListingAdmin.v2.ListingSupplementary": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "description": "Name"
          },
          "description": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "description": "Description"
          },
          "types": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Types"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListingAdmin.v2.SupplementaryMetadata"
            },
            "description": "Metadata"
          }
        },
        "description": "Listing supplementary"
      },
      "ListingAdmin.v2.CommercialListingV2": {
        "required": [
          "propertyDetails",
          "domainAgencyID",
          "providerAdId",
          "listingAction"
        ],
        "type": "object",
        "properties": {
          "salePrice": {
            "$ref": "#/components/schemas/ListingAdmin.v2.CommercialPrice"
          },
          "leasePrice": {
            "$ref": "#/components/schemas/ListingAdmin.v2.CommercialPrice"
          },
          "lease": {
            "$ref": "#/components/schemas/ListingAdmin.v2.Lease"
          },
          "eoi": {
            "$ref": "#/components/schemas/ListingAdmin.v2.EOI"
          },
          "tenant": {
            "$ref": "#/components/schemas/ListingAdmin.v2.Tenant"
          },
          "tender": {
            "$ref": "#/components/schemas/ListingAdmin.v2.Tender"
          },
          "occupancyType": {
            "enum": [
              "tenanted",
              "vacant"
            ],
            "type": "string",
            "description": "Occupancy. Can be 'Tenanted', 'Vacant'"
          },
          "annualReturn": {
            "type": "integer",
            "description": "Integer value of percentage return on this property or business.",
            "format": "int32"
          },
          "unitsOffered": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "Integer value of units offered for sale or lease",
            "format": "int32"
          },
          "unitDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListingAdmin.v2.SpecificUnitDetail"
            },
            "description": "Units details"
          },
          "nabers": {
            "maximum": 6,
            "minimum": 0,
            "type": "number",
            "description": "The NABERS Rating is the energy efficiency rating that the property has been measured to have. \r\nThis rating is measured in increments of .5 and can range from 0 to 6. \r\nThe NABERS rating is required for spaces within office buildings of 1000 square metres or more.\r\nFor more information on the NABERS rating system please visit http://www.nabers.gov.au",
            "format": "double"
          },
          "saleTerms": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Information relating to aspects of the sale, such as required deposit, settlement time. Up to 50 characters, optional. Ignored for lease listings"
          },
          "auction": {
            "$ref": "#/components/schemas/ListingAdmin.v2.CommercialAuction"
          },
          "propertyDetails": {
            "$ref": "#/components/schemas/ListingAdmin.v2.CommercialProperty"
          },
          "conjunctionAgents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListingAdmin.v2.AgentContact"
            },
            "description": "List of conjunction agents"
          },
          "highlights": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Highlight Items"
          },
          "underOfferOrContract": {
            "type": "boolean",
            "description": "Set for Sale listings only"
          },
          "domainAdId": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "Domain Advertisement Id, not applicable for creating new ads.\r\nMandatory when updating a listing that belongs to an agency that\r\nis in the process of being migrated between listing providers.",
            "format": "int32"
          },
          "listingProvider": {
            "type": "string",
            "description": "A string identifying the data provider"
          },
          "domainAgencyID": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "The Domain Agency Id number",
            "format": "int32"
          },
          "providerAdId": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "External Advertisement Id of up to 50 characters will be stored.<br />\r\nThis value is used to identify an Advertisement for updates and should be unique for listing provider.<br />\r\nThis value is case-insensitive (meaning AAAA will update aaaa)."
          },
          "features": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": " Comma-separated list of features. 1000 characters in length. Select as appropriate or write your own.\r\nINSIDE: Air conditioning, Ensuite, Floorboards, Indoor Spa, Gym, Alarm System, Intercom, Built in wardrobes, Furnished, Internal Laundry, Pets allowed, Cable or Satellite, Gas, Broadband internet access, Bath, Fireplace(s), Separate Dining Room, Heating, Dishwasher, Study.\r\nOUTSIDE: Tennis Court, Secure Parking, Shed, Fully fenced, Balcony / Deck, Garden / Courtyard, Swimming Pool, Outdoor Spa.\r\nLOCATION: Ground floor, Water Views, North Facing, City Views.\r\nECO FRIENDLY: Double glazed windows, Energy efficient appliances, Water efficient appliances, Wall / ceiling insulation, Rainwater storage tank, Greywater system, Water efficient fixtures, Solar hot water, Solar panels"
          },
          "description": {
            "maxLength": 6000,
            "minLength": 0,
            "type": "string",
            "description": "Description of the property.\r\n6000 characters in length. The following HTML elements are permitted: &lt;br /&gt;, &lt;p&gt;&lt;/p&gt;, &amp;nbsp;. HTML must be well-formed.\r\nCarriage Returns are interpreted as line breaks. Foreign characters must be HTML encoded, e.g., façade for façade"
          },
          "summary": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "description": "'Headline' Any HTML stripped out.  If the Summary is less than 80 characters long then the description is concatenated to it and the total trimmed to 250 characters."
          },
          "inspectionDetails": {
            "$ref": "#/components/schemas/ListingAdmin.v2.InspectionDetails"
          },
          "media": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListingAdmin.v2.PropertyMedia"
            },
            "description": "Links to VideoURL, virtual tour or weblink. Maximum length of media URLs is 255 characters."
          },
          "listingAction": {
            "enum": [
              "sale",
              "rent",
              "saleAndLease"
            ],
            "type": "string",
            "description": "Sale or Rent"
          },
          "contactPreference": {
            "enum": [
              "byPhone"
            ],
            "type": "string",
            "description": "Indicates the listing preferred contact method. Default by both phone and email if not provided."
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListingAdmin.v2.Contact"
            },
            "description": "Minimum required attributes: First name, last name and E-mail.\r\nIf the DomainAgentId is provided, contact information will be based on the existing agent found for that id.\r\nOtherwise first name, last name and email will be used to find the matching contact. A new contact will be created if no contact can be found."
          },
          "otherEnquiryEmail": {
            "type": "string",
            "description": "Sets an additional Email Address to which enquiries on the Listing will be sent"
          },
          "receiveEmailsToDefaultAddress": {
            "type": "boolean",
            "description": "Send email enquiries to the default address for this listing type"
          },
          "isRural": {
            "type": "boolean",
            "description": "True if the property is rural"
          },
          "supplementary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListingAdmin.v2.ListingSupplementary"
            },
            "description": "Rural attributes\r\n\r\n*Improvements* (optional)\r\n\r\nAvailable `types` (fixed list, optional):\r\n* Machinery Shed\r\n* Shearing Shed\r\n* Workshop\r\n* Shearers Quarters\r\n* Silos\r\n* Other Housing\r\n* Managers Accommodation\r\n\r\n*Fencing* (optional)\r\n\r\n`description` (string, optional): free text fencing description, maximum 250 characters.\r\n\r\n*Yards* (optional)\r\n\r\nAvailable `types` (fixed list, optional):\r\n* Sheep\r\n* Cattle\r\n\r\n*Homestead* (optional)\r\n\r\n`description` (string, optional): description of the homestead and construction, maximum 250 characters.\r\n\r\n`metadata` (optional)\r\n* `area` (decimal, optional): homestead area in square metres.\r\n\r\nAvailable `types` (fixed list, optional):\r\n* Office\r\n* Ensuite\r\n* Tennis Court\r\n* Mains Gas\r\n* Floorboards\r\n* Internal Laundry\r\n\r\n*Water* (optional)\r\n\r\n`description` (string, optional): water comments, maximum 250 characters.\r\n\r\nAvailable `types` (fixed list, optional):\r\n* Tank\r\n* Well\r\n* Reticulated\r\n* Bores\r\n* Springs\r\n* Creeks\r\n* Dams\r\n* River\r\n\r\n*Crops* (optional)\r\n\r\n`description` (string, optional): description of the crops, maximum 250 characters.\r\n\r\n`metadata` (optional)\r\n* `croppedAnnually` (decimal, optional): average annual area cropped in hectares.\r\n* `fallowAnnually` (decimal, optional): average annual fallow area in hectares.\r\n* `pastures` (string, optional): description of pastures available, maximum 250 characters.\r\n\r\n*Livestock* (optional)\r\n\r\n`description` (string, optional): additional comments, maximum 250 characters.\r\n\r\n`metadata` (optional)\r\n* `capacity` (decimal, optional): property carrying capacity in DSE (unit of carry capacity).\r\n\r\nAvailable `types` (fixed list, optional):\r\n* Sheep\r\n* Pigs\r\n* Cattle\r\n* Poultry\r\n* Horses\r\n* Exotic\r\n* Goats\r\n* Stud\r\n\r\n*Inclusions* (optional)\r\n\r\n`description` (string, optional): description of plant and machinery included in sale, maximum 250 characters.\r\n\r\n`metadata` (optional)\r\n* `livestock` (string, optional): description of livestock included in sale, maximum 250 characters.\r\n* `crop` (string, optional): description of crops included in sale, maximum 250 characters.\r\n\r\n*Irrigation* (optional)\r\n\r\n`description` (string, optional): irrigation comments, maximum 250 characters\r\n\r\n`metadata` (optional)\r\n* `rainfall` (decimal, optional): annual rainfall in millimetres."
          }
        },
        "description": "Commercial Listing V2",
        "example": {
          "salePrice": {
            "priceUnitType": "totalAmount",
            "priceType": "gross",
            "gstOptionType": "ex",
            "priceReduction": true,
            "displayText": "Price Guide $2,200,000",
            "from": 2200000,
            "to": 2200000
          },
          "leasePrice": {
            "priceUnitType": "totalAmount",
            "priceType": "gross",
            "gstOptionType": "ex",
            "priceReduction": true,
            "displayText": "Price Guide $2,200",
            "from": 2200,
            "to": 2200
          },
          "lease": {
            "termOfLeaseFrom": 1,
            "termOfLeaseTo": 3,
            "leaseOutgoings": 3200
          },
          "tenant": {
            "leaseStart": "2019-07-30T14:13:16.0152311+10:00",
            "leaseEnd": "2020-07-30T14:13:16.0152311+10:00",
            "name": "John Smith",
            "rentalDetails": "Annual CPI reviews",
            "leaseOptions": "5+5 year lease which commenced May 2013",
            "tenantInfoTermOfLeaseFrom": 2,
            "tenantInfoTermOfLeaseTo": 3,
            "leaseDateVariable": false
          },
          "tender": {
            "recipientName": "Joe Russ",
            "address": "10,Pyrmont st, Pyrmont,NSW 2011",
            "endDate": "2020-07-10T14:13:16.0152311+10:00"
          },
          "occupancyType": "tenanted",
          "annualReturn": 10,
          "unitsOffered": 1,
          "nabers": 4.5,
          "saleTerms": "will be started after 3 days",
          "auction": {
            "auctionTerms": "10% deposit, balance 60 days.",
            "dateTime": "2020-06-30T14:13:16.0152311+10:00",
            "location": "On Site",
            "url": "https://ljhookermosman.agentboxcrm.com.au/www/fp-1-1P3679-1721283621.html"
          },
          "propertyDetails": {
            "propertyType": [
              "retail"
            ],
            "buildingType": "whole",
            "parking": {
              "parkingType": "noParking",
              "numberOnSite": 0
            },
            "pdfs": [],
            "images": [
              {
                "resourceType": "floorPlan",
                "url": "http://www.ljhookermosman.agentboxcrm.com.au/fp-1-1P3679-1721283621.jpg"
              },
              {
                "resourceType": "photograph",
                "url": "http://www.ljhookermosman.agentboxcrm.com.au/lt-1-1P3679-0316165440.jpg"
              },
              {
                "resourceType": "photograph",
                "url": "http://www.ljhookermosman.agentboxcrm.com.au/lt-1-1P3679-0316165441.jpg"
              }
            ],
            "address": {
              "unitNumber": "Suite 11A",
              "street": "Military Road",
              "displayOption": "fullAddress",
              "streetNumber": "287",
              "suburb": "Cremorne",
              "postcode": "2090",
              "state": "nsw"
            },
            "area": {
              "value": 174,
              "unit": "squareMetres"
            },
            "landArea": {
              "unit": "squareMetres",
              "value": 194
            }
          },
          "conjunctionAgents": [
            {
              "agencyId": 12346,
              "domainAgentId": 484442,
              "firstName": "Sam",
              "lastName": "Karri",
              "phone": "02 8356 7127",
              "fax": "23444 444 44",
              "mobile": "0411 345 877",
              "email": "a@a.com",
              "receiveEmails": true
            }
          ],
          "highlights": [
            "Hightlight 1",
            "Hightlight 2",
            "Hightlight 3"
          ],
          "underOfferOrContract": false,
          "listingProvider": "YOUR_LISTING_PROVIDER",
          "domainAgencyID": 13,
          "providerAdId": "YOUR_PROVIDER_AD_ID",
          "features": " Air conditioning, Alarm System, Intercom",
          "description": "Situated within Cremorne Town Shopping Centre, anchored by Supa IGA supermarket, this property represents a fantastic opportunity to own a tenanted strata retail shop in a successful shopping centre.",
          "summary": "Entry Level Investment Opportunity!",
          "inspectionDetails": {
            "inspections": [
              {
                "from": "2020-06-30T17:00:00.0000000+10:00",
                "to": "2020-06-30T18:00:00.0000000+10:00",
                "repeat": false
              },
              {
                "from": "2020-07-02T17:00:00.0000000+10:00",
                "to": "2020-07-02T18:00:00.0000000+10:00",
                "repeat": false
              },
              {
                "from": "2020-07-04T17:00:00.0000000+10:00",
                "to": "2020-07-04T18:00:00.0000000+10:00",
                "repeat": false
              },
              {
                "from": "2020-07-06T17:00:00.0000000+10:00",
                "to": "2020-07-06T18:00:00.0000000+10:00",
                "repeat": false
              },
              {
                "from": "2020-07-08T17:00:00.0000000+10:00",
                "to": "2020-07-08T18:00:00.0000000+10:00",
                "repeat": false
              }
            ]
          },
          "media": [
            {
              "resourceType": "video",
              "url": "http://www.ljhookermosman.agentboxcrm.com.au/fp-1-1P3679-1721283621.mp4"
            },
            {
              "resourceType": "virtualTour",
              "url": "http://www.ljhookermosman.agentboxcrm.com.au/fp-1-1P3679-1721283621.html"
            },
            {
              "resourceType": "webLink",
              "url": "http://www.ljhookermosman.agentboxcrm.com.au/fp-1-1P3679-1721283621.html"
            }
          ],
          "listingAction": "saleAndLease",
          "contacts": [
            {
              "domainAgentId": 881492,
              "firstName": "Jack",
              "lastName": "King",
              "phone": "02 8356 7127",
              "fax": "23444 444 44",
              "mobile": "0411 245 777",
              "email": "a@a.com",
              "receiveEmails": true
            }
          ],
          "otherEnquiryEmail": "b@a.com",
          "receiveEmailsToDefaultAddress": false
        }
      },
      "Listings.V2.SaleMode": {
        "enum": [
          "sale",
          "rent",
          "both"
        ],
        "type": "string"
      },
      "Listings.v2.Objective": {
        "enum": [
          "sale",
          "rent"
        ],
        "type": "string",
        "description": "The advertisement's objective  * `Sale` - Residential Advertisement for Sale * `Rent` - Residential Advertisement for Rent"
      },
      "Listings.v2.Status": {
        "enum": [
          "unknown",
          "archived",
          "underOffer",
          "sold",
          "leased",
          "newDevelopment",
          "recentlyUpdated",
          "new",
          "live",
          "pending",
          "depositTaken"
        ],
        "type": "string",
        "description": "The lifecycle status of a Listing  * `Unknown` - The listing has an unknown status, this can only be the case if data is somehow corrupted. * `Archived` - The listing has been archived and is inactive. * `UnderOffer` - An offer has been made for the listing. The listing is still active. * `Sold` - The listing has been sold.             The listing is inactive but may appear as sold listing on Domain * `Leased` - The listing has been leased. * `NewDevelopment` - The listing is a New Development Listing.             The listing is active. * `RecentlyUpdated` - The listing or project has been updated in past few days.             The listing is active. * `New` - The listing or project has been created in past few days.             The listing is active. * `Live` - The listing or project is currently live and has not been recently created or updated.             This listing is active. * `Pending` - This status is only used by projects.             It indicates that the project is pending to be activated (start date in the future).             This project is inactive. * `DepositTaken` - Deposit Taken. This listing is still active."
      },
      "Listings.v2.ListingSaleMode": {
        "enum": [
          "buy",
          "rent",
          "share",
          "sold",
          "leased",
          "archived"
        ],
        "type": "string",
        "description": "Listing sale mode  * `Buy` - buy * `Rent` - rent * `Share` - share * `Sold` - sold * `Leased` - leased * `Archived` - Archived: When listing has been archived but not sold or leased (table_sticker=0)"
      },
      "Listings.v2.Channel": {
        "enum": [
          "residential",
          "commercial",
          "business"
        ],
        "type": "string",
        "description": "Channel  * `Residential` - Residential * `Commercial` - Commercial * `Business` - Business"
      },
      "Listings.v2.StateAbbreviation": {
        "enum": [
          "nsw",
          "vic",
          "sa",
          "nt",
          "tas",
          "act",
          "qld",
          "wa"
        ],
        "type": "string",
        "description": "Australian states  * `NSW` - NSW * `VIC` - VIC * `SA` - SA * `NT` - NT * `TAS` - TAS * `ACT` - ACT * `QLD` - QLD * `WA` - WA"
      },
      "Listings.v2.DisplayAddressType": {
        "enum": [
          "fullAddress",
          "streetAndSuburb",
          "suburbOnly",
          "regionOnly",
          "areaOnly",
          "stateOnly"
        ],
        "type": "string",
        "description": "Advertiser's preference in displaying their listings address  * `FullAddress` - Display the entire address * `StreetAndSuburb` - Display only the street address and suburb * `SuburbOnly` - Display only the suburb * `RegionOnly` - Display only state * `AreaOnly` - Display only state * `StateOnly` - Display only state"
      },
      "Listings.V2.AddressParts": {
        "type": "object",
        "properties": {
          "stateAbbreviation": {
            "$ref": "#/components/schemas/Listings.v2.StateAbbreviation"
          },
          "displayType": {
            "$ref": "#/components/schemas/Listings.v2.DisplayAddressType"
          },
          "streetNumber": {
            "type": "string",
            "description": "Street number",
            "nullable": true
          },
          "unitNumber": {
            "type": "string",
            "description": "Unit number.",
            "nullable": true
          },
          "street": {
            "type": "string",
            "description": "Street address",
            "nullable": true
          },
          "suburb": {
            "type": "string",
            "description": "Suburb of the address",
            "nullable": true
          },
          "suburbId": {
            "type": "integer",
            "description": "Domain suburb identifier for address lookup via the domain location api",
            "format": "int32",
            "nullable": true
          },
          "postcode": {
            "type": "string",
            "description": "Postcode of the address",
            "nullable": true
          },
          "displayAddress": {
            "type": "string",
            "description": "Advertiser's preference in displaying their listing's address",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Encapsulates the parts that make up an Address",
        "x-data-access-level-info": {
          "Basic": [
            "DisplayAddress",
            "DisplayType",
            "StateAbbreviation"
          ],
          "Detailed": [
            "DisplayAddress",
            "DisplayType",
            "StateAbbreviation",
            "Postcode",
            "Suburb",
            "SuburbId",
            "UnitNumber",
            "StreetNumber",
            "Street"
          ],
          "Full": [
            "DisplayAddress",
            "DisplayType",
            "StateAbbreviation",
            "Postcode",
            "Suburb",
            "SuburbId",
            "UnitNumber",
            "StreetNumber",
            "Street"
          ]
        }
      },
      "Listings.v2.AdvertiserType": {
        "enum": [
          "agency",
          "private"
        ],
        "type": "string",
        "description": "Listing Advertiser types  * `Agency` - Listing Advertised by an agency * `Private` - Listing Advertised by a private advertiser"
      },
      "Listings.V2.AdvertiserIdentifiers": {
        "type": "object",
        "properties": {
          "advertiserType": {
            "$ref": "#/components/schemas/Listings.v2.AdvertiserType"
          },
          "advertiserId": {
            "type": "integer",
            "description": "Advertiser's identifier",
            "format": "int32",
            "nullable": true
          },
          "contactIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Identifier of each contact the advertiser has associated with the listing",
            "nullable": true
          },
          "agentIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Identifier of each agent the advertiser has associated with the listing",
            "nullable": true
          },
          "conjunctionContactIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Identifier of each conjunctional contact associated with the listing",
            "nullable": true
          },
          "conjunctionAgentIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Identifier of each conjunctional agent associated with the listing",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Encapsulates the listing's advertiser identifiers",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Listings.V2.AustralianPropertyMonitorsIdentifiers": {
        "type": "object",
        "properties": {
          "suburbId": {
            "type": "integer",
            "description": "APM suburb identifier",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "APM Identifiers",
        "x-data-access-level-info": {
          "Basic": [
            "SuburbId"
          ],
          "Detailed": [
            "SuburbId"
          ],
          "Full": [
            "SuburbId"
          ]
        }
      },
      "Listings.V2.GeoLocation": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "description": "Latitude of the property",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "description": "Longitude of the property",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Encapsulates the details of a geo location, long/lat",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Listings.v2.InspectionRecurrence": {
        "enum": [
          "none",
          "weekly"
        ],
        "type": "string",
        "description": "Indicates how often an inspection recurs.  * `None` - Once-off inspection * `Weekly` - Weekly inspection"
      },
      "Listings.V2.Inspection": {
        "type": "object",
        "properties": {
          "recurrence": {
            "$ref": "#/components/schemas/Listings.v2.InspectionRecurrence"
          },
          "openingDateTime": {
            "type": "string",
            "description": "Opening date and time of the inspection. e.g. 2015-01-01T12:00:00.  Not provided by bulk uploaded listings, in these cases refer to the  inspection description field. DateTime is in AEST (Australian Eastern Standard Time) timezone.",
            "format": "date-time",
            "nullable": true
          },
          "closingDateTime": {
            "type": "string",
            "description": "Closing date and time of the inspection. e.g. 2015-01-01T12:00:00  Not provided by bulk uploaded listings, in these cases refer to the  inspection description field. DateTime is in AEST (Australian Eastern Standard Time) timezone.",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description of the inspection provided by the Advertiser.  When listings are bulk uploaded, inspection times are provided as a string.  Other inspection details will not be provided",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Encapsulates the details of a Listing's Inspection",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Listings.V2.PropertyInspections": {
        "type": "object",
        "properties": {
          "inspections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Listings.V2.Inspection"
            },
            "description": "Inspection details for the property. e.g. opening and closing times",
            "nullable": true
          },
          "pastInspections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Listings.V2.Inspection"
            },
            "description": "Inspection details for the property. e.g. opening and closing times",
            "nullable": true
          },
          "isByAppointmentOnly": {
            "type": "boolean",
            "description": "True or False indicating whether the inspection is by appointment only"
          }
        },
        "additionalProperties": false,
        "description": "Property Inspection(s) details",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Listings.v2.ListingMediaCategory": {
        "enum": [
          "image",
          "video",
          "others"
        ],
        "type": "string",
        "description": "Available media associated with a Listing  * `Image` - Image media type * `Video` - Video media type * `Others` - Other media type"
      },
      "Listings.v2.ListingMediaType": {
        "enum": [
          "photo",
          "mp4",
          "youtube",
          "floorplan",
          "vimeo",
          "notSpecified"
        ],
        "type": "string",
        "description": "Available media types associated with a Listing  * `Photo` - Photo media type * `Mp4` - MP4 Video media type * `Youtube` - Youtube video media type * `Floorplan` - Floor plan image media type * `Vimeo` - Vimeo video media type * `NotSpecified` - Media type could not be determined"
      },
      "Listings.V2.ListingMedia": {
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/Listings.v2.ListingMediaCategory"
          },
          "type": {
            "$ref": "#/components/schemas/Listings.v2.ListingMediaType"
          },
          "url": {
            "type": "string",
            "description": "The URL to the property media",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Encapsulates media associated with a Listing",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Listings.V2.PriceDetails": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "description": "Price of the property",
            "format": "double",
            "nullable": true
          },
          "priceFrom": {
            "type": "integer",
            "description": "Price starting range of the property",
            "format": "int32",
            "nullable": true
          },
          "priceTo": {
            "type": "integer",
            "description": "Upper price range of the property",
            "format": "int32",
            "nullable": true
          },
          "pricePrefix": {
            "type": "string",
            "description": "Display price for the advertisement",
            "nullable": true
          },
          "canDisplayPrice": {
            "type": "boolean",
            "description": "Flag indicating whether the advertiser has chosen to display the property price"
          },
          "displayPrice": {
            "type": "string",
            "description": "A string provided by the Advertiser representing the ByIdListingPriceQueryResult of the Listing e.g. Over $1,000,000   This should be the default price field for client to use",
            "nullable": true
          },
          "bond": {
            "type": "number",
            "description": "Rental bond",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Encapsulates a listing's price information",
        "x-data-access-level-info": {
          "Basic": [
            "DisplayPrice",
            "Bond",
            "CanDisplayPrice",
            "Price",
            "PriceFrom",
            "PriceTo",
            "PricePrefix"
          ],
          "Detailed": [
            "DisplayPrice",
            "Bond",
            "CanDisplayPrice",
            "Price",
            "PriceFrom",
            "PriceTo",
            "PricePrefix"
          ],
          "Full": [
            "DisplayPrice",
            "Bond",
            "CanDisplayPrice",
            "Price",
            "PriceFrom",
            "PriceTo",
            "PricePrefix"
          ]
        }
      },
      "Listings.v2.PropertyType": {
        "enum": [
          "unknown",
          "acreageSemiRural",
          "duplex",
          "house",
          "rural",
          "farm",
          "specialistFarm",
          "carspace",
          "developmentLand",
          "developmentSite",
          "newHouseLand",
          "villa",
          "townhouse",
          "semiDetached",
          "terrace",
          "penthouse",
          "studio",
          "apartmentUnitFlat",
          "blockOfUnits",
          "vacantLand",
          "newHomeDesigns",
          "hotelLeisure",
          "industrialWarehouse",
          "newLand",
          "international",
          "medicalConsulting",
          "newApartments",
          "offices",
          "parkingCarSpace",
          "retail",
          "retirement",
          "ruralCommercialFarming",
          "showroomsBulkyGoods",
          "servicedOffices",
          "other",
          "chickenShop",
          "seafoodShop",
          "deliCafe",
          "cropping",
          "viticulture",
          "mixedFarming",
          "grazing",
          "horticulture",
          "equine",
          "farmlet",
          "orchard",
          "ruralLifestyle",
          "irrigationServices",
          "dairyFarming",
          "livestock",
          "aquaculture",
          "fishingForestry",
          "onlineBusiness",
          "homeBased"
        ],
        "type": "string",
        "description": "Available types of Properties  * `Unknown` - Unknown * `AcreageSemiRural` - Acreage-SemiRural * `ApartmentUnitFlat` - Apartment Unit Flat * `Aquaculture` - Aquaculture             commercial/rural type * `BlockOfUnits` - Block Of Units * `Carspace` - Carspace * `DairyFarming` - Dairy Farming             commercial/rural type * `DevelopmentLand` - Development / Land * `DevelopmentSite` - Development site * `Duplex` - Duplex * `Farm` - Farm * `FishingForestry` - Fishing / Forestry             commercial/rural type * `HomeBased` - Home Based * `NewHomeDesigns` - New Home Designs * `HotelLeisure` - Hotel / Leisure             commercial type * `House` - House * `NewHouseLand` - New House And Land * `IndustrialWarehouse` - Industrial / Warehouse             commercial type * `IrrigationServices` - Irrigation Services             commercial/rural type * `NewLand` - New Land * `Livestock` - Livestock             commercial/rural type * `International` - International             commercial type * `MedicalConsulting` - Medical / Consulting             commercial type * `NewApartments` - New Apartments / Off the Plan * `Offices` - Offices             commercial type * `ParkingCarSpace` - Parking / Car Space             commercial type * `Penthouse` - Penthouse * `Retail` - Retail             commercial type * `Retirement` - Retirement * `Rural` - Rural * `RuralCommercialFarming` - Rural / Commercial Farming              commercial type * `SemiDetached` - Semi Detached * `ShowroomsBulkyGoods` - Showrooms / Bulky Goods             commercial type * `SpecialistFarm` - The specialist farm * `Studio` - Studio * `Terrace` - Terrace * `Townhouse` - The townhouse * `VacantLand` - Vacant Land * `Villa` - Villa * `ServicedOffices` - Serviced Offices             commercial type * `Other` - Other             commercial type * `ChickenShop` - Chicken Shop             commercial type * `SeafoodShop` - Seafood Shop             commercial type * `DeliCafe` - Deli Cafe             commercial type * `Cropping` - Cropping             commercial/rural type * `Viticulture` - Viticulture             commercial/rural type * `MixedFarming` - Mixed Farming             commercial type * `Grazing` - Grazing             commercial/rural type * `Horticulture` - Horticulture             commercial/rural type * `Equine` - Equine             commercial/rural type * `Farmlet` - Farmlet             commercial/rural type * `Orchard` - Orchard             commercial/rural type * `RuralLifestyle` - Rural Lifestyle             commercial/rural type * `OnlineBusiness` - Online Business"
      },
      "Listings.v2.RentalMethod": {
        "enum": [
          "notStated",
          "rent",
          "share",
          "holiday",
          "lease"
        ],
        "type": "string",
        "description": "The rental method of the advertised listing  * `NotStated` - The not stated * `Rent` - The listing is for rental by leasing * `Share` - The listing is for rental by sharing * `Holiday` - The listing is a holiday rental * `Lease` - The listing is for lease"
      },
      "Listings.v2.PublishSource": {
        "enum": [
          "internal",
          "external"
        ],
        "type": "string",
        "description": "Specifies where the listing was sold             e.g. sold/leased using domain site or externally  * `Internal` - Sold via domain and other internal sites * `External` - Agency provided sales data that were Sold externally"
      },
      "Listings.V2.RentalDetails": {
        "type": "object",
        "properties": {
          "rentalMethod": {
            "$ref": "#/components/schemas/Listings.v2.RentalMethod"
          },
          "source": {
            "$ref": "#/components/schemas/Listings.v2.PublishSource"
          },
          "leasedDate": {
            "type": "string",
            "description": "The Date the listing was leased. DateTime is in AEST (Australian Eastern Standard Time) timezone.",
            "format": "date-time",
            "nullable": true
          },
          "leasedPrice": {
            "type": "integer",
            "description": "The last leased price entered by the Advertiser   This price will only be visible if allowed by the Advertiser  and the listing as been leased",
            "format": "int32",
            "nullable": true
          },
          "canDisplayPrice": {
            "type": "boolean",
            "description": "Indicates whether this instance can display price"
          },
          "leasedMonths": {
            "type": "integer",
            "description": "The number of months the property was last leased for  This will only be visible if the property has been leased",
            "format": "int32",
            "nullable": true
          },
          "termOfLeaseFrom": {
            "type": "integer",
            "description": "Lease term range from",
            "format": "int32",
            "nullable": true
          },
          "termOfLeaseTo": {
            "type": "integer",
            "description": "Lease term range to",
            "format": "int32",
            "nullable": true
          },
          "leaseOutgoings": {
            "type": "integer",
            "description": "Outgoing cost of current lease",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The rental detail's of the listing in case of it being for rent or leased",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Listings.v2.SaleMethod": {
        "enum": [
          "notStated",
          "auction",
          "privateTreaty",
          "tender",
          "expressionOfInterest"
        ],
        "type": "string",
        "description": "The method of sale for an advertised listing  * `NotStated` - When the sale method is not defined * `Auction` - For sale by auction, or sold by auction if the listing is sold * `PrivateTreaty` - For sale by private treaty, or sold by private treaty if the listing is sold * `Tender` - For sale by tender, or sold by tender if the listing is sold * `ExpressionOfInterest` - for sale by an expression of interest"
      },
      "Listings.v2.SoldAction": {
        "enum": [
          "notStated",
          "auction",
          "privateTreaty",
          "withdrawn",
          "soldPriorToAuction"
        ],
        "type": "string",
        "description": "The action taken which sold the listing  * `NotStated` - The not stated * `Auction` - The auction * `PrivateTreaty` - The private treaty * `Withdrawn` - The withdrawn * `SoldPriorToAuction` - The sold prior to auction"
      },
      "Listings.V2.SoldDetails": {
        "type": "object",
        "properties": {
          "soldAction": {
            "$ref": "#/components/schemas/Listings.v2.SoldAction"
          },
          "source": {
            "$ref": "#/components/schemas/Listings.v2.PublishSource"
          },
          "soldDate": {
            "type": "string",
            "description": "The Date the listing was sold. DateTime is in AEST (Australian Eastern Standard Time) timezone.",
            "format": "date-time",
            "nullable": true
          },
          "canDisplayPrice": {
            "type": "boolean",
            "description": "Indicates whether this instance can display price"
          }
        },
        "additionalProperties": false,
        "description": "Sold details in the case of the listing being sold.",
        "x-data-access-level-info": {
          "Basic": [
            "CanDisplayPrice",
            "SoldAction",
            "SoldDate",
            "Source"
          ],
          "Detailed": [
            "CanDisplayPrice",
            "SoldAction",
            "SoldDate",
            "Source"
          ],
          "Full": [
            "CanDisplayPrice",
            "SoldAction",
            "SoldDate",
            "Source"
          ]
        }
      },
      "Listings.V2.AuctionSchedule": {
        "type": "object",
        "properties": {
          "locationDescription": {
            "type": "string",
            "description": "Description and location of the auction provided by advertiser",
            "nullable": true
          },
          "openingDateTime": {
            "type": "string",
            "description": "Opening date and time of the auction. e.g. 2015-01-01T12:00:00  DateTime is in AEST (Australian Eastern Standard Time) timezone.",
            "format": "date-time",
            "nullable": true
          },
          "terms": {
            "type": "string",
            "description": "Terms of the auction",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "On-line URL of the auction",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Encapsulates the details of a Property being Auctioned.",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Listings.V2.AuctionDetails": {
        "type": "object",
        "properties": {
          "auctionSchedule": {
            "$ref": "#/components/schemas/Listings.V2.AuctionSchedule"
          },
          "auctionedPrice": {
            "type": "integer",
            "description": "The auctioned price entered by the Advertiser.   This price will only be visible if allowed by the Advertiser  and the listing as been auctioned",
            "format": "int32",
            "nullable": true
          },
          "auctionedDate": {
            "type": "string",
            "description": "The listing's last auctioned date and time specified by the Advertiser.  This will only be visible if the listing has been auctioned.  DateTime is in AEST (Australian Eastern Standard Time) timezone.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The detail's of the auction in case of a listing for sale being auctioned or sold by auction",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Listings.V2.TenderDetails": {
        "type": "object",
        "properties": {
          "tenderRecipientName": {
            "type": "string",
            "description": "Tender recipient name",
            "nullable": true
          },
          "tenderAddress": {
            "type": "string",
            "description": "Tender address",
            "nullable": true
          },
          "tenderEndDate": {
            "type": "string",
            "description": "Tender closing date. DateTime is in AEST (Australian Eastern Standard Time) timezone.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Tender details",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Listings.V2.TenantDetails": {
        "type": "object",
        "properties": {
          "leaseDateVariable": {
            "type": "boolean",
            "description": "Is tenant lease date variable",
            "nullable": true
          },
          "leaseOptions": {
            "type": "string",
            "description": "Leasing options available to a prospective tenant",
            "nullable": true
          },
          "tenantInfoTermOfLeaseFrom": {
            "type": "integer",
            "description": "The from range of the tenant's current lease",
            "format": "int32",
            "nullable": true
          },
          "tenantInfoTermOfLeaseTo": {
            "type": "integer",
            "description": "The to range of the tenant's current lease",
            "format": "int32",
            "nullable": true
          },
          "tenantName": {
            "type": "string",
            "description": "Name of the current tenant of the property",
            "nullable": true
          },
          "tenantRentDetails": {
            "type": "string",
            "description": "Information regarding current rental",
            "nullable": true
          },
          "leaseStartDate": {
            "type": "string",
            "description": "The date on which the tenants lease began, or is due to begin. DateTime is in AEST (Australian Eastern Standard Time) timezone.",
            "format": "date-time",
            "nullable": true
          },
          "leaseEndDate": {
            "type": "string",
            "description": "The date on which the tenants lease is due to end. DateTime is in AEST (Australian Eastern Standard Time) timezone.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Tenant Details",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Listings.V2.SaleDetails": {
        "type": "object",
        "properties": {
          "saleMethod": {
            "$ref": "#/components/schemas/Listings.v2.SaleMethod"
          },
          "soldDetails": {
            "$ref": "#/components/schemas/Listings.V2.SoldDetails"
          },
          "auctionDetails": {
            "$ref": "#/components/schemas/Listings.V2.AuctionDetails"
          },
          "tenderDetails": {
            "$ref": "#/components/schemas/Listings.V2.TenderDetails"
          },
          "tenantDetails": {
            "$ref": "#/components/schemas/Listings.V2.TenantDetails"
          },
          "annualReturn": {
            "type": "integer",
            "description": "Integer value of percentage return on this property or business",
            "format": "int32",
            "nullable": true
          },
          "saleTerms": {
            "type": "string",
            "description": "Information relating to aspects of the sale, such as required deposit, settlement time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The sale detail's of the listing in case of it being for sale or sold",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Listings.V2.BasicPrice": {
        "type": "object",
        "properties": {
          "from": {
            "type": "integer",
            "description": "Lowest price the property is expected to sell/rent for to set search price.",
            "format": "int32",
            "nullable": true
          },
          "to": {
            "type": "integer",
            "description": "Highest price the property is expected to sell/rent for to set search price.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Basic price information",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Listings.V2.PastSaleData": {
        "type": "object",
        "properties": {
          "unitNumber": {
            "type": "string",
            "description": "Property unit number",
            "nullable": true
          },
          "streetNumber": {
            "type": "string",
            "description": "Property street number",
            "nullable": true
          },
          "street": {
            "type": "string",
            "description": "Property Street name",
            "nullable": true
          },
          "suburb": {
            "type": "string",
            "description": "Property suburb name",
            "nullable": true
          },
          "postcode": {
            "type": "string",
            "description": "Property postcode",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "Property state",
            "nullable": true
          },
          "displayAddress": {
            "type": "string",
            "description": "display formatted address",
            "nullable": true,
            "readOnly": true
          },
          "dateOfSale": {
            "type": "string",
            "description": "Registered date of the sale",
            "nullable": true
          },
          "soldPrice": {
            "type": "integer",
            "description": "Property sold price",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "Information for past property sales",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Listings.V2.ComparableData": {
        "type": "object",
        "properties": {
          "comparableProperty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Listings.V2.PastSaleData"
            },
            "description": "Comparable properties that are of a similar standard or condition to the property for sale",
            "nullable": true
          },
          "declarationText": {
            "type": "string",
            "description": "Text description if there are less than three comparable sales available",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Information regarding the past comparable property sales that influenced the setting of the estimation price",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Listings.v2.MedianPriceType": {
        "enum": [
          "house",
          "apartmentUnitFlat",
          "vacantLand"
        ],
        "type": "string",
        "description": "Type of the median price type  * `House` - House * `ApartmentUnitFlat` - Apartment / unit / flat * `VacantLand` - Vacant Land"
      },
      "Listings.V2.MedianPriceData": {
        "type": "object",
        "properties": {
          "priceType": {
            "$ref": "#/components/schemas/Listings.v2.MedianPriceType"
          },
          "suburb": {
            "type": "string",
            "description": "Name of the suburb median price is based on.",
            "nullable": true
          },
          "postcode": {
            "type": "string",
            "description": "Postcode of the suburb",
            "nullable": true
          },
          "medianPrice": {
            "type": "integer",
            "description": "Median price for the suburb.",
            "format": "int32",
            "nullable": true
          },
          "source": {
            "type": "string",
            "description": "Where median price data comes from",
            "nullable": true
          },
          "sourceDateFrom": {
            "type": "string",
            "description": "Start date of the median price source time period",
            "nullable": true
          },
          "sourceDateTo": {
            "type": "string",
            "description": "End date of the median price source time period",
            "nullable": true
          },
          "sourceCollectionDate": {
            "type": "string",
            "description": "The collection date of the median price source",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Information regarding median house/unit price   for the suburb",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Listings.V2.StatementOfInformation": {
        "type": "object",
        "properties": {
          "estimatedPrice": {
            "$ref": "#/components/schemas/Listings.V2.BasicPrice"
          },
          "comparableData": {
            "$ref": "#/components/schemas/Listings.V2.ComparableData"
          },
          "suburbMedianPrice": {
            "$ref": "#/components/schemas/Listings.V2.MedianPriceData"
          },
          "documentationUrl": {
            "type": "string",
            "description": "Link to the statement of information documentation file",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Statement of Information  Regarding sale listing",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Listings.V2.Listing": {
        "type": "object",
        "properties": {
          "objective": {
            "$ref": "#/components/schemas/Listings.v2.Objective"
          },
          "status": {
            "$ref": "#/components/schemas/Listings.v2.Status"
          },
          "saleMode": {
            "$ref": "#/components/schemas/Listings.v2.ListingSaleMode"
          },
          "channel": {
            "$ref": "#/components/schemas/Listings.v2.Channel"
          },
          "id": {
            "type": "integer",
            "description": "The identifier which uniquely identifies the listing.",
            "format": "int32"
          },
          "addressParts": {
            "$ref": "#/components/schemas/Listings.V2.AddressParts"
          },
          "advertiserIdentifiers": {
            "$ref": "#/components/schemas/Listings.V2.AdvertiserIdentifiers"
          },
          "apmIdentifiers": {
            "$ref": "#/components/schemas/Listings.V2.AustralianPropertyMonitorsIdentifiers"
          },
          "bathrooms": {
            "type": "number",
            "description": "Total number of bathrooms in the property",
            "format": "float",
            "nullable": true
          },
          "bedrooms": {
            "type": "number",
            "description": "Total number of bedrooms in the property; Studio apartments have a value of \\\"0\\\"",
            "format": "float",
            "nullable": true
          },
          "buildingArea": {
            "type": "string",
            "description": "The building area display value of the property e.g. 160 ha",
            "nullable": true
          },
          "buildingAreaSqm": {
            "type": "number",
            "description": "The properties building area in square meters",
            "format": "double",
            "nullable": true
          },
          "carspaces": {
            "type": "number",
            "description": "Total number of car spaces in the property.",
            "format": "float",
            "nullable": true
          },
          "dateAvailable": {
            "type": "string",
            "description": "The date the property is available. DateTime is in AEST (Australian Eastern Standard Time) timezone.",
            "format": "date-time",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "description": "The date/time the listing was created. DateTime is in AEST (Australian Eastern Standard Time) timezone.",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "description": "The date/time the listing had major update. DateTime is in AEST (Australian Eastern Standard Time) timezone.",
            "format": "date-time"
          },
          "dateMinorUpdated": {
            "type": "string",
            "description": "When minor update applied to listing. DateTime is in AEST (Australian Eastern Standard Time) timezone.",
            "format": "date-time"
          },
          "datePurged": {
            "type": "string",
            "description": "The date/time the listing was purged. It's only returned for archived listings. DateTime is in AEST (Australian Eastern Standard Time) timezone.",
            "format": "date-time",
            "nullable": true
          },
          "dateListed": {
            "type": "string",
            "description": "The date/time last listed. DateTime is in AEST (Australian Eastern Standard Time) timezone.",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The long description of the property provided by the advertiser",
            "nullable": true
          },
          "devProjectId": {
            "type": "integer",
            "description": "The ID of the development project - null if no associated project",
            "format": "int32",
            "nullable": true
          },
          "energyEfficiencyRating": {
            "type": "integer",
            "description": "Energy Efficiency Rating value for ACT properties",
            "format": "int32",
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The property features specified by the advertiser",
            "nullable": true
          },
          "geoLocation": {
            "$ref": "#/components/schemas/Listings.V2.GeoLocation"
          },
          "headline": {
            "type": "string",
            "description": "The short description of the property provided by the advertiser",
            "nullable": true
          },
          "inspectionDetails": {
            "$ref": "#/components/schemas/Listings.V2.PropertyInspections"
          },
          "isNewDevelopment": {
            "type": "boolean",
            "description": "Indicates whether the property is a new development"
          },
          "landArea": {
            "type": "string",
            "description": "The land area display string for the property e.g. 160 sqm",
            "nullable": true
          },
          "landAreaSqm": {
            "type": "number",
            "description": "The properties land area in square meters",
            "format": "double",
            "nullable": true
          },
          "media": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Listings.V2.ListingMedia"
            },
            "description": "The media associated with the property provided by the advertiser",
            "nullable": true
          },
          "priceDetails": {
            "$ref": "#/components/schemas/Listings.V2.PriceDetails"
          },
          "propertyId": {
            "type": "string",
            "description": "The identifier which uniquely identifies the property being advertised.   This may be empty if the Address of property is poorly described",
            "nullable": true
          },
          "propertyTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Listings.v2.PropertyType"
            },
            "description": "Types of the property",
            "nullable": true
          },
          "rentalDetails": {
            "$ref": "#/components/schemas/Listings.V2.RentalDetails"
          },
          "saleDetails": {
            "$ref": "#/components/schemas/Listings.V2.SaleDetails"
          },
          "isWithdrawn": {
            "type": "boolean",
            "description": "Indicates if the property has been withdrawn from the market  The value will be 'true' When a listing is taken off market without being sold or leased."
          },
          "seoUrl": {
            "type": "string",
            "description": "Listing SEO URL",
            "nullable": true
          },
          "virtualTourUrl": {
            "type": "string",
            "description": "The Listing's Virtual Tour URL.",
            "nullable": true
          },
          "homepassEnabled": {
            "type": "boolean",
            "description": "If Homepass is enabled for the listing (agency)"
          },
          "statementOfInformation": {
            "$ref": "#/components/schemas/Listings.V2.StatementOfInformation"
          },
          "numberOfDwellings": {
            "type": "integer",
            "description": "Number of dwellings for current listing",
            "format": "int32",
            "nullable": true
          },
          "highlights": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Highlight items for the listing",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a Property Listing",
        "x-data-access-level-info": {
          "Basic": [
            "AddressParts",
            "AdvertiserIdentifiers",
            "Bathrooms",
            "Bedrooms",
            "BuildingAreaSqm",
            "Carspaces",
            "Channel",
            "DateAvailable",
            "DateListed",
            "DateUpdated",
            "Description",
            "DevProjectId",
            "EnergyEfficiencyRating",
            "Features",
            "GeoLocation",
            "Headline",
            "Highlights",
            "Id",
            "InspectionDetails",
            "IsNewDevelopment",
            "LandAreaSqm",
            "Media",
            "Objective",
            "PriceDetails",
            "PropertyTypes",
            "SaleDetails",
            "SaleMode",
            "SeoUrl",
            "StatementOfInformation",
            "Status",
            "VirtualTourUrl"
          ],
          "Detailed": [
            "AddressParts",
            "AdvertiserIdentifiers",
            "Bathrooms",
            "Bedrooms",
            "BuildingAreaSqm",
            "Carspaces",
            "Channel",
            "DateAvailable",
            "DateListed",
            "DateUpdated",
            "Description",
            "DevProjectId",
            "EnergyEfficiencyRating",
            "Features",
            "GeoLocation",
            "Headline",
            "Highlights",
            "Id",
            "InspectionDetails",
            "IsNewDevelopment",
            "LandAreaSqm",
            "Media",
            "Objective",
            "PriceDetails",
            "PropertyTypes",
            "SaleDetails",
            "SaleMode",
            "SeoUrl",
            "StatementOfInformation",
            "Status",
            "VirtualTourUrl",
            "ApmIdentifiers",
            "NumberOfDwellings",
            "PropertyId",
            "RentalDetails"
          ],
          "Full": [
            "AddressParts",
            "AdvertiserIdentifiers",
            "Bathrooms",
            "Bedrooms",
            "BuildingAreaSqm",
            "Carspaces",
            "Channel",
            "DateAvailable",
            "DateListed",
            "DateUpdated",
            "Description",
            "DevProjectId",
            "EnergyEfficiencyRating",
            "Features",
            "GeoLocation",
            "Headline",
            "Highlights",
            "Id",
            "InspectionDetails",
            "IsNewDevelopment",
            "LandAreaSqm",
            "Media",
            "Objective",
            "PriceDetails",
            "PropertyTypes",
            "SaleDetails",
            "SaleMode",
            "SeoUrl",
            "StatementOfInformation",
            "Status",
            "VirtualTourUrl",
            "ApmIdentifiers",
            "NumberOfDwellings",
            "PropertyId",
            "RentalDetails",
            "BuildingArea",
            "DateCreated",
            "DateMinorUpdated",
            "DatePurged",
            "HomepassEnabled",
            "IsWithdrawn",
            "LandArea"
          ]
        }
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {},
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "PreMarket.v1.ListingStatus": {
        "enum": [
          "preMarket",
          "sold",
          "listed",
          "withdrawn"
        ],
        "type": "string"
      },
      "PreMarket.v1.ProviderDetails": {
        "type": "object",
        "properties": {
          "providerSystem": {
            "type": "string",
            "description": "Identify the source of the listing",
            "nullable": true
          },
          "providerAdID": {
            "type": "string",
            "description": "Unique ID within provider system",
            "nullable": true
          }
        },
        "description": "Information for the listing provider"
      },
      "PreMarket.v1.State": {
        "enum": [
          "nsw",
          "vic",
          "act",
          "sa",
          "wa",
          "tas",
          "qld",
          "nt"
        ],
        "type": "string",
        "description": "Australian states"
      },
      "PreMarket.v1.Address": {
        "required": [
          "postcode",
          "state",
          "street",
          "streetNumber",
          "suburb"
        ],
        "type": "object",
        "properties": {
          "streetNumber": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "Street (and possibly unit) number component of an address. E.g. 23, 1a, 11/1."
          },
          "street": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Street name, e.g. Punt Road."
          },
          "suburb": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/PreMarket.v1.State"
          },
          "postcode": {
            "pattern": "^[0-9]{3,4}$",
            "type": "string"
          }
        }
      },
      "PreMarket.v1.AdvertiserIdentifiers": {
        "required": [
          "domainAgencyId"
        ],
        "type": "object",
        "properties": {
          "domainAgencyId": {
            "type": "integer",
            "description": "Domain Agency Id",
            "format": "int32"
          },
          "contactIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Identifier of each contact the advertiser has associated with the listing",
            "nullable": true
          },
          "agentIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Identifier of each agent the advertiser has associated with the listing",
            "nullable": true
          }
        }
      },
      "PreMarket.v1.Price": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "type": "number",
            "description": "Lower end of the price range.",
            "format": "double"
          },
          "to": {
            "minimum": 0,
            "type": "number",
            "description": "Upper end of the price range.",
            "format": "double"
          },
          "displayText": {
            "maxLength": 80,
            "minLength": 0,
            "type": "string",
            "description": "When provided this will be shown instead of the price range, e.g.: \"Offers over $450K considered\"",
            "nullable": true
          }
        }
      },
      "PreMarket.v1.PropertyType": {
        "enum": [
          "house",
          "townhouse",
          "apartmentUnitFlat",
          "vacantLand"
        ],
        "type": "string"
      },
      "PreMarket.v1.AuthorityType": {
        "enum": [
          "privateSale",
          "auction",
          "expressionOfInterest"
        ],
        "type": "string"
      },
      "PreMarket.v1.GeoLocation": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "description": "Latitude of the property.",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "description": "Longitude of the property.",
            "format": "double"
          }
        },
        "description": "Encapsulates the details of a geo location."
      },
      "PreMarket.v1.ResourceType": {
        "enum": [
          "photograph",
          "floorPlan"
        ],
        "type": "string"
      },
      "PreMarket.v1.PropertyMedia": {
        "required": [
          "resourceType",
          "url"
        ],
        "type": "object",
        "properties": {
          "resourceType": {
            "$ref": "#/components/schemas/PreMarket.v1.ResourceType"
          },
          "url": {
            "pattern": "^http[s]?:+.*",
            "type": "string"
          }
        }
      },
      "PreMarket.v1.StatementOfInformation": {
        "required": [
          "documentationUrl"
        ],
        "type": "object",
        "properties": {
          "documentationUrl": {
            "pattern": "^http[s]?:+.*",
            "type": "string",
            "description": "Link to the statement of information documentation file.\r\nMust be a PDF file.\r\nFile should be less than 10 MB in size\r\nThe Statement of Information must be updated if there is a change in the indicative selling price."
          }
        }
      },
      "PreMarket.v1.ListingResponse": {
        "required": [
          "authorityExecutedDate",
          "authorityType",
          "bathrooms",
          "bedrooms",
          "carspaces",
          "estimatedSalePrice",
          "id",
          "listingStatus"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Pre-portal listing ID."
          },
          "listingStatus": {
            "$ref": "#/components/schemas/PreMarket.v1.ListingStatus"
          },
          "providerDetails": {
            "$ref": "#/components/schemas/PreMarket.v1.ProviderDetails"
          },
          "address": {
            "$ref": "#/components/schemas/PreMarket.v1.Address"
          },
          "advertiserIdentifiers": {
            "$ref": "#/components/schemas/PreMarket.v1.AdvertiserIdentifiers"
          },
          "bedrooms": {
            "type": "number",
            "description": "Total number of bedrooms in the property",
            "format": "float"
          },
          "bathrooms": {
            "type": "number",
            "description": "Total number of bathrooms in the property",
            "format": "float"
          },
          "carspaces": {
            "type": "number",
            "description": "Total number of car spaces in the property.",
            "format": "float"
          },
          "headline": {
            "maximum": 250,
            "minimum": 0,
            "type": "string",
            "description": "The short description of the property provided by the advertiser",
            "nullable": true
          },
          "description": {
            "maximum": 6000,
            "minimum": 0,
            "type": "string",
            "description": "The long description of the property provided by the advertiser",
            "nullable": true
          },
          "authorityExecutedDate": {
            "type": "string",
            "description": "The date on which the authority contract was executed.\r\nThe date is compliant with the ISO 8601 and is in the UTC format, e.g. 2009-06-15T13:45:30.0000000Z.",
            "format": "date-time"
          },
          "estimatedSalePrice": {
            "$ref": "#/components/schemas/PreMarket.v1.Price"
          },
          "propertyTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PreMarket.v1.PropertyType"
            },
            "description": "The property types (e.g. house, apartment/unit/flat, etc.).",
            "nullable": true
          },
          "authorityType": {
            "$ref": "#/components/schemas/PreMarket.v1.AuthorityType"
          },
          "exclusivePeriodDays": {
            "type": "integer",
            "description": "The time (in days) that the agent has exclusive authority to sell the property.",
            "format": "int32",
            "nullable": true
          },
          "exclusiveContinuingPeriodDays": {
            "type": "integer",
            "description": "The time (in days) that exclusive authority has been extended.",
            "format": "int32",
            "nullable": true
          },
          "exclusivePeriodStartDate": {
            "type": "string",
            "description": "Start date of the exclusivity period.\r\nThe date is compliant with the ISO 8601 and is in the UTC format, e.g. 2009-06-15T13:45:30.0000000Z.",
            "format": "date-time",
            "nullable": true
          },
          "geoLocation": {
            "$ref": "#/components/schemas/PreMarket.v1.GeoLocation"
          },
          "mapCertainty": {
            "type": "integer",
            "description": "Map certainty of the property location.",
            "format": "int32"
          },
          "media": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PreMarket.v1.PropertyMedia"
            },
            "description": "The media associated with the property provided by the advertiser",
            "nullable": true
          },
          "propertyId": {
            "type": "string",
            "description": "The identifier which uniquely identifies the property being advertised. \r\nThis may be empty if the Address of property is poorly described",
            "nullable": true
          },
          "statementOfInformation": {
            "$ref": "#/components/schemas/PreMarket.v1.StatementOfInformation"
          },
          "dateCreated": {
            "type": "string",
            "description": "The date/time the listing was created\r\nThe date is compliant with the ISO 8601 and is in the UTC format, e.g. 2009-06-15T13:45:30.0000000Z.",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "description": "The date/time the listing was last updated\r\nThe date is compliant with the ISO 8601 and is in the UTC format, e.g. 2009-06-15T13:45:30.0000000Z.",
            "format": "date-time"
          },
          "dateWithdrawn": {
            "type": "string",
            "description": "The date property was withdrawn",
            "format": "date-time",
            "nullable": true
          },
          "dateListed": {
            "type": "string",
            "description": "The date property was listed",
            "format": "date-time",
            "nullable": true
          },
          "dateSold": {
            "type": "string",
            "description": "The date property was sold",
            "format": "date-time",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional listing metadata.",
            "nullable": true
          }
        },
        "description": "Pre-portal listing response."
      },
      "PreMarket.v1.ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "PreMarket.v1.Contact": {
        "required": [
          "email",
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 50,
            "type": "string",
            "description": "First name of the agent contact."
          },
          "lastName": {
            "maxLength": 50,
            "type": "string",
            "description": "Last name of the agent contact."
          },
          "email": {
            "maxLength": 100,
            "type": "string",
            "description": "Agent contact email. Valid email address.",
            "format": "email"
          },
          "phone": {
            "maxLength": 20,
            "type": "string",
            "description": "Agent contact phone number. Valid phone number.",
            "nullable": true
          },
          "mobile": {
            "maxLength": 20,
            "type": "string",
            "description": "Agent contact mobile number. Valid mobile number.",
            "nullable": true
          },
          "fax": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          }
        }
      },
      "PreMarket.v1.ListingRequest": {
        "required": [
          "actionDate",
          "address",
          "authorityExecutedDate",
          "authorityType",
          "bathrooms",
          "bedrooms",
          "carspaces",
          "domainAgencyId",
          "estimatedSalePrice",
          "listingStatus",
          "propertyTypes"
        ],
        "type": "object",
        "properties": {
          "listingStatus": {
            "$ref": "#/components/schemas/PreMarket.v1.ListingStatus"
          },
          "address": {
            "$ref": "#/components/schemas/PreMarket.v1.Address"
          },
          "domainAgencyId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "The Domain agency ID. Must match an existing Domain agency ID.",
            "format": "int32"
          },
          "listingProvider": {
            "type": "string",
            "description": "A string identifying the source of the listing",
            "nullable": true
          },
          "providerAdId": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "External Advertisement Id of up to 50 characters will be stored.\r\nThis value is correlated with actual Domain listing when it is created, and it should be unique for the listing provider. \r\nThis value is case-insensitive (meaning AAAA will update aaaa).",
            "nullable": true
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PreMarket.v1.Contact"
            },
            "nullable": true
          },
          "bedrooms": {
            "minimum": 0,
            "type": "number",
            "description": "Number of bedrooms divisible by 0.5.",
            "format": "float"
          },
          "bathrooms": {
            "minimum": 0,
            "type": "number",
            "description": "Number of bathrooms divisible by 0.5.",
            "format": "float"
          },
          "carspaces": {
            "minimum": 0,
            "type": "number",
            "description": "Number of car spaces divisible by 0.5.",
            "format": "float"
          },
          "summary": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "description": "Headline of the advertisement. Any HTML will be stripped out.",
            "nullable": true
          },
          "description": {
            "maxLength": 6000,
            "minLength": 0,
            "type": "string",
            "description": "Description of the property.\r\nAllow up to 6000 characters in length. The following HTML elements are permitted: ```<br />, <p></p>, &nbsp;``` . HTML must be well-formed.\r\nCarriage Returns are interpreted as line breaks. Foreign characters must be HTML encoded, e.g., façade for façade",
            "nullable": true
          },
          "authorityExecutedDate": {
            "type": "string",
            "description": "The date on which the authority contract was executed.\r\nThe date must comply with the ISO 8601 and be in the UTC format, e.g. 2009-06-15T13:45:30.0000000Z.",
            "format": "date-time"
          },
          "reservePrice": {
            "minimum": 0,
            "type": "number",
            "description": "Vendor reserve price.",
            "format": "double",
            "nullable": true
          },
          "estimatedSalePrice": {
            "$ref": "#/components/schemas/PreMarket.v1.Price"
          },
          "propertyTypes": {
            "minLength": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PreMarket.v1.PropertyType"
            },
            "description": "The property types (e.g. house, apartment/unit/flat, etc.)."
          },
          "authorityType": {
            "$ref": "#/components/schemas/PreMarket.v1.AuthorityType"
          },
          "exclusivePeriodDays": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "The time (in days) that the agent has exclusive authority to sell the property.",
            "format": "int32",
            "nullable": true
          },
          "exclusiveContinuingPeriodDays": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "The time (in days) that exclusive authority has been extended.",
            "format": "int32",
            "nullable": true
          },
          "exclusivePeriodStartDate": {
            "type": "string",
            "description": "Start date of the exclusivity period.\r\nThe date must comply with the ISO 8601 and be in the UTC format, e.g. 2009-06-15T13:45:30.0000000Z.",
            "format": "date-time",
            "nullable": true
          },
          "actionDate": {
            "type": "string",
            "description": "The date that this property was listed, sold or withdrawn. It is required if listing status is marked to be \"sold, withdrawn, or listed\".\r\nThe date must comply with the ISO 8601 and be in the UTC format, e.g. 2009-06-15T13:45:30.0000000Z. \r\nOnly the date part will be saved, time part will be discarded.",
            "format": "date-time"
          },
          "statementOfInformation": {
            "$ref": "#/components/schemas/PreMarket.v1.StatementOfInformation"
          },
          "images": {
            "maxLength": 20,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PreMarket.v1.PropertyMedia"
            },
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Optional listing metadata.",
            "nullable": true
          }
        },
        "description": "Pre-portal listing request."
      },
      "PreMarket.v1.CreateOrUpdateListingResponse": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Pre-portal listing ID."
          }
        },
        "description": "Create or update pre-portal listing response."
      },
      "PreMarket.v1.OperationType": {
        "enum": [
          "add",
          "remove",
          "replace",
          "move",
          "copy",
          "test",
          "invalid"
        ],
        "type": "string"
      },
      "PreMarket.v1.ListingRequestOperation": {
        "type": "object",
        "properties": {
          "value": {
            "type": "object",
            "nullable": true
          },
          "operationType": {
            "$ref": "#/components/schemas/PreMarket.v1.OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PreMarket.v1.IContractResolver": {
        "type": "object"
      },
      "PreMarket.v1.ListingRequestJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PreMarket.v1.ListingRequestOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/PreMarket.v1.IContractResolver"
          }
        }
      },
      "Demographics.V1.DemographicsItem": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "Gets or Sets Label",
            "nullable": true
          },
          "value": {
            "type": "integer",
            "description": "Gets or Sets Value",
            "format": "int32"
          },
          "composition": {
            "type": "string",
            "description": "Gets or Sets Composition",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DemographicsItemModel",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Demographics.V1.Demographics": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Gets or Sets Type",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Gets or Sets Total",
            "format": "int64"
          },
          "year": {
            "type": "integer",
            "description": "Gets or Sets Year",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Demographics.V1.DemographicsItem"
            },
            "description": "Gets or Sets Items",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DemographicsModel",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Demographics.V1.DemographicsResults": {
        "type": "object",
        "properties": {
          "demographics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Demographics.V1.Demographics"
            },
            "description": "Gets or Sets Demographics",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DemographicsResultsModel",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "SuburbPerformanceStatistics.V3.PropertyCategory": {
        "enum": [
          "house",
          "unit"
        ],
        "type": "string"
      },
      "SuburbPerformanceStatistics.V3.PeriodSize": {
        "enum": [
          "quarters",
          "halfYears",
          "years"
        ],
        "type": "string"
      },
      "SuburbPerformanceStatistics.V3.SuburbSeriesHeader": {
        "type": "object",
        "properties": {
          "suburb": {
            "type": "string",
            "description": "Gets or Sets Suburb",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "Gets or Sets State",
            "nullable": true
          },
          "propertyCategory": {
            "type": "string",
            "description": "Gets or Sets PropertyCategory",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "APMAPIModelsSuburbV2SeriesHeaderModel",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "SuburbPerformanceStatistics.V3.SuburbSeriesInfo": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "description": "Gets or Sets Year",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "description": "Gets or Sets Month",
            "format": "int32"
          },
          "values": {
            "type": "object",
            "additionalProperties": {},
            "description": "Gets or Sets Values",
            "nullable": true,
            "x-data-access-level-info": {
              "Basic": [
                "*"
              ],
              "Detailed": [
                "*"
              ],
              "Full": [
                "*"
              ]
            }
          }
        },
        "additionalProperties": false,
        "description": "APMAPIModelsSuburbV2SeriesInfoModel",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "SuburbPerformanceStatistics.V3.SuburbSeries": {
        "type": "object",
        "properties": {
          "seriesInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SuburbPerformanceStatistics.V3.SuburbSeriesInfo"
            },
            "description": "Gets or Sets SeriesInfo",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "APMAPIModelsSuburbV2SeriesModel",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "SuburbPerformanceStatistics.V3.SuburbPerformance": {
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/SuburbPerformanceStatistics.V3.SuburbSeriesHeader"
          },
          "series": {
            "$ref": "#/components/schemas/SuburbPerformanceStatistics.V3.SuburbSeries"
          }
        },
        "additionalProperties": false,
        "description": "APMAPIModelsSuburbV2SuburbPerformanceModel",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Schools.V2.SchoolProfile": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Website for the school",
            "nullable": true,
            "readOnly": true
          },
          "yearRange": {
            "type": "string",
            "description": "The range of year levels offered by the school.",
            "nullable": true,
            "readOnly": true
          },
          "icsea": {
            "type": "integer",
            "description": "The Index of Community Socio-Educational Advantage score for the school. This score is derived from a number of variables including parental school and non-school education and occupation, the school’s geographical location and proportion of Indigenous students.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "bottomSeaQuarter": {
            "type": "integer",
            "description": "The percentage of students positioned in the lowest socio-educational advantage quarter.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "lowerMiddleSeaQuarter": {
            "type": "integer",
            "description": "The percentage of students positioned in the lower middle socio-educational advantage quarter.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "upperMiddleSeaQuarter": {
            "type": "integer",
            "description": "The percentage of students positioned in the higher middle socio-educational advantage quarter.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "topSeaQuarter": {
            "type": "integer",
            "description": "The percentage of students positioned in the highest socio-educational advantage quarter.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "totalEnrolments": {
            "type": "integer",
            "description": "The total number of students, including both full-time and part-time students, who are enrolled at the school in the calendar year specified.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "girlsEnrolments": {
            "type": "integer",
            "description": "The total number of female students, including both full-time and part-time students, who are enrolled at the school in the calendar year specified.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "boysEnrolments": {
            "type": "integer",
            "description": "The total number of male students, including full-time and part-time students, who are enrolled at the school in the calendar year specified.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "x-data-access-level-info": {
          "Basic": [
            "Url",
            "YearRange",
            "GirlsEnrolments",
            "BoysEnrolments",
            "TotalEnrolments",
            "TopSeaQuarter",
            "UpperMiddleSeaQuarter",
            "LowerMiddleSeaQuarter",
            "BottomSeaQuarter",
            "Icsea"
          ],
          "Detailed": [
            "Url",
            "YearRange",
            "GirlsEnrolments",
            "BoysEnrolments",
            "TotalEnrolments",
            "TopSeaQuarter",
            "UpperMiddleSeaQuarter",
            "LowerMiddleSeaQuarter",
            "BottomSeaQuarter",
            "Icsea"
          ],
          "Full": [
            "Url",
            "YearRange",
            "GirlsEnrolments",
            "BoysEnrolments",
            "TotalEnrolments",
            "TopSeaQuarter",
            "UpperMiddleSeaQuarter",
            "LowerMiddleSeaQuarter",
            "BottomSeaQuarter",
            "Icsea"
          ]
        }
      },
      "Schools.V2.SchoolCatchment": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Gets possible values include: 'Primary', 'Secondary'",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "x-data-access-level-info": {
          "Basic": [],
          "Detailed": [],
          "Full": [
            "Type"
          ]
        }
      },
      "Schools.V2.School": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "schoolSector": {
            "type": "string",
            "description": "Gets possible values include: 'Catholic', 'Government',\r\n'Independent'",
            "nullable": true,
            "readOnly": true
          },
          "schoolType": {
            "type": "string",
            "description": "Gets possible values include: 'Combined', 'Primary', 'Secondary',\r\n'Special'",
            "nullable": true,
            "readOnly": true
          },
          "suburb": {
            "type": "string",
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "state": {
            "type": "string",
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "postcode": {
            "type": "string",
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "centroid": {
            "type": "string",
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "profile": {
            "$ref": "#/components/schemas/Schools.V2.SchoolProfile"
          },
          "catchments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Schools.V2.SchoolCatchment"
            },
            "description": "",
            "nullable": true,
            "readOnly": true
          },
          "domainId": {
            "type": "integer",
            "description": "",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "gender": {
            "type": "string",
            "description": "Gets possible values include: 'Boys', 'Girls', 'CoEd'",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "x-data-access-level-info": {
          "Basic": [
            "DomainId",
            "Name",
            "Profile",
            "SchoolSector",
            "State",
            "SchoolType",
            "Suburb",
            "Postcode",
            "Centroid",
            "Gender"
          ],
          "Detailed": [
            "DomainId",
            "Name",
            "Profile",
            "SchoolSector",
            "State",
            "SchoolType",
            "Suburb",
            "Postcode",
            "Centroid",
            "Gender"
          ],
          "Full": [
            "DomainId",
            "Name",
            "Profile",
            "SchoolSector",
            "State",
            "SchoolType",
            "Suburb",
            "Postcode",
            "Centroid",
            "Gender",
            "Catchments"
          ]
        }
      },
      "Schools.V2.SchoolWithDistance": {
        "type": "object",
        "properties": {
          "distance": {
            "type": "number",
            "description": "",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "school": {
            "$ref": "#/components/schemas/Schools.V2.School"
          }
        },
        "additionalProperties": false,
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      }
    },
    "securitySchemes": {
      "apikey": {
        "type": "apiKey",
        "description": "API Key in Header",
        "name": "x-api-key",
        "in": "header"
      },
      "oauth2": {
        "type": "oauth2",
        "description": "OAuth 2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://auth.domain.com.au/v1/connect/token",
            "scopes": {
              "api_demographics_read": "api_demographics_read",
              "api_listings_read": "api_listings_read",
              "api_listings_write": "api_listings_write",
              "api_locations_read": "api_locations_read",
              "api_suburbperformance_read": "api_suburbperformance_read"
            }
          },
          "authorizationCode": {
            "authorizationUrl": "https://auth.domain.com.au/v1/connect/authorize",
            "tokenUrl": "https://auth.domain.com.au/v1/connect/token",
            "refreshUrl": "https://auth.domain.com.au/v1/connect/token",
            "scopes": {
              "api_demographics_read": "api_demographics_read",
              "api_listings_read": "api_listings_read",
              "api_listings_write": "api_listings_write",
              "api_locations_read": "api_locations_read",
              "api_suburbperformance_read": "api_suburbperformance_read"
            }
          }
        }
      }
    }
  }
}
