{
  "openapi": "3.0.1",
  "info": {
    "title": "Domain Public API",
    "description": "See https://developer.domain.com.au for more information",
    "termsOfService": "https://developer.domain.com.au/docs/latest/support/terms",
    "contact": {
      "name": "Domain Developer Support",
      "email": "api@domain.com.au"
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "http://api.domain.com.au/",
      "description": "api.domain.com.au - Primary"
    },
    {
      "url": "http://api.domain.com.au/sandbox/",
      "description": "api.domain.com.au - Sandbox"
    }
  ],
  "paths": {
    "/v1/addressLocators": {
      "get": {
        "tags": [
          "AddressLocators"
        ],
        "summary": "Retrieves matching ids for use in other services.",
        "description": "Use this endpoint to retrieve IDs that may be used to query information from other endpoints.\r\n\r\nFor example use `id` of the `Suburb` level to query [`demographics`](/docs/v1/apis/pkg_properties_locations/references/demographics_get)",
        "operationId": "AddressLocators_Get",
        "parameters": [
          {
            "name": "searchLevel",
            "in": "query",
            "description": "Requested search level. Valid values are: `Address`, and `Suburb`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unitNumber",
            "in": "query",
            "description": "Unit number",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "streetNumber",
            "in": "query",
            "description": "Street number",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "streetName",
            "in": "query",
            "description": "Street name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "streetType",
            "in": "query",
            "description": "Street type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "suburb",
            "in": "query",
            "description": "Suburb",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "State",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "postcode",
            "in": "query",
            "description": "Postcode",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.APMService.v3.Model.APMAPIModelsTokenisedSearchV3AddressDataModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.APMService.v3.Model.APMAPIModelsTokenisedSearchV3AddressDataModel"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.APMService.v3.Model.APMAPIModelsTokenisedSearchV3AddressDataModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.APMService.v3.Model.APMAPIModelsTokenisedSearchV3AddressDataModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.APMService.v3.Model.APMAPIModelsTokenisedSearchV3AddressDataModel"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_addresslocators_read"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 0
      }
    },
    "/v1/agencies/{id}": {
      "get": {
        "tags": [
          "Agencies"
        ],
        "summary": "Retrieves a specific agency details.",
        "operationId": "Agencies_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Agency identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.AgencyService.v2.Model.Agency"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.AgencyService.v2.Model.Agency"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.AgencyService.v2.Model.Agency"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.AgencyService.v2.Model.Agency"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.AgencyService.v2.Model.Agency"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_agencies_read"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/agencies/{id}/listings": {
      "get": {
        "tags": [
          "Agencies"
        ],
        "summary": "Retrieves listings across all channels for a specific agency matching specified criteria.",
        "description": "Note that the result page size is clamped at 200.  Requesting a page size greater than this will be treated as if only a page size of 200 were requested.",
        "operationId": "Agencies_GetListings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Agency identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "listingStatusFilter",
            "in": "query",
            "description": "Filter for listing status",
            "schema": {
              "enum": [
                "live",
                "liveAndArchived"
              ],
              "type": "string"
            }
          },
          {
            "name": "dateUpdatedSince",
            "in": "query",
            "description": "Filter to remove listings not updated since before the given date time",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number for paginated results",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size for paginated results",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Listing"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Listing"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Listing"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Listing"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Listing"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_listings_read"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/agencies/{id}/statistics": {
      "get": {
        "tags": [
          "Agencies"
        ],
        "summary": "Retrieves statistics across all channels for a specific agency.",
        "operationId": "Agencies_GetStatistics",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Agency identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "timePeriod",
            "in": "query",
            "description": "Period to report on, Valid values are: `last7Days`, `last90Days`, `wholeCampaign`. Default is `last7Days`.",
            "schema": {
              "enum": [
                "last7Days",
                "last90Days",
                "wholeCampaign"
              ],
              "type": "string"
            }
          },
          {
            "name": "statusFilter",
            "in": "query",
            "description": "Status to filter, Valid values are: `Live`, `LiveAndArchived`. Default is `LiveAndArchived`",
            "schema": {
              "enum": [
                "live",
                "liveAndArchived"
              ],
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Statistics"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Statistics"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Statistics"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Statistics"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Statistics"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_agencies_read"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": true,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/agencies/{id}/subscriptions": {
      "get": {
        "tags": [
          "Agencies"
        ],
        "summary": "Retrieves the active subscriptions for the specific agency",
        "operationId": "Agencies_GetSubscriptions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Agency identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "channel",
            "in": "query",
            "description": "Channel. Either `residential` or `commercial` (case insensitive). Defaults to `residential` if not provided",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.AgencyService.v1.Model.AgencySubscriptionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.AgencyService.v1.Model.AgencySubscriptionDto"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.AgencyService.v1.Model.AgencySubscriptionDto"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.AgencyService.v1.Model.AgencySubscriptionDto"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.AgencyService.v1.Model.AgencySubscriptionDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_agencies_read"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/agencies/{id}/bundlecontracts": {
      "get": {
        "tags": [
          "Agencies"
        ],
        "summary": "Retrieves the product bundle contracts applicable to the specific agency.",
        "operationId": "Agencies_GetBundleContracts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Agency identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.BookingService.v1.Model.ProductBundleContractDetailsResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.BookingService.v1.Model.ProductBundleContractDetailsResponse"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.BookingService.v1.Model.ProductBundleContractDetailsResponse"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.BookingService.v1.Model.ProductBundleContractDetailsResponse"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.BookingService.v1.Model.ProductBundleContractDetailsResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_agencies_read"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": true,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/agencies": {
      "get": {
        "tags": [
          "Agencies"
        ],
        "summary": "Retrieves summary of agencies matching the specified criteria.",
        "description": "<para>The <code>q</code> parameter supports:</para>\r\n<ul>\r\n  <li>name: search by name eg. <code>name:\"Agency XYZ\"</code></li>\r\n  <li>providerId: search by providerId. eg. <code>providerId:\"ABC Software\"</code></li>\r\n  <li>domainUrl: search by domainUrl. eg. <code>domainUrl:\"agency-xyz\"</code></li>\r\n  <li>dateUpdated: search by dateUpdated. eg. <code>dateUpdated:\"2016-12-25\"</code></li>\r\n  <li>suburbId: search by suburbId. Lists supported.  eg. <code>suburbId:1</code> eg. <code>suburbId:(1 OR 2 OR 3)</code>.  Can include related suburbs by adding <code>in:related</code></li>\r\n  <li>accountType: search by account type. Lists supported.  eg. <code>accountType:residential</code> eg. <code>accountType:(residential OR commercial)</code> Valid values are: none, residential, commerciallight, commercialfull, developer, holiday, business</li>\r\n  <li>\r\n    <code>in:all</code> includes archived agencies (archived agencies excluded by default)</li>\r\n  <li>\r\n    <code>-is:selfservice</code> excludes selfservice</li>\r\n</ul>",
        "operationId": "Agencies_Search",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Search phrase.  e.g. name:\"Agency XYZ\"",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number for paginated results",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size for paginated results",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.AgencyService.v2.Model.AgencySummary"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.AgencyService.v2.Model.AgencySummary"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.AgencyService.v2.Model.AgencySummary"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.AgencyService.v2.Model.AgencySummary"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.AgencyService.v2.Model.AgencySummary"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No results",
            "content": {
              "application/json": {},
              "text/json": {},
              "text/html": {},
              "application/xml": {},
              "text/xml": {}
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_agencies_read"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      },
      "head": {
        "tags": [
          "Agencies"
        ],
        "summary": "Retrieves summary of agency search",
        "description": "Given a specified agency search criteria, this endpoint can be used to ascertain the result count that can be expected.",
        "operationId": "Agencies_Head",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Search phrase.  e.g. name:\"Agency XYZ\"",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number for paginated results",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size for paginated results",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Result count returned, see X-Total-Count header",
            "content": {
              "application/json": {},
              "text/json": {},
              "text/html": {},
              "application/xml": {},
              "text/xml": {}
            }
          },
          "404": {
            "description": "No results",
            "content": {
              "application/json": {},
              "text/json": {},
              "text/html": {},
              "application/xml": {},
              "text/xml": {}
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_agencies_read"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/agencies/_testAgency": {
      "post": {
        "tags": [
          "Agencies"
        ],
        "summary": "Creates a test agency",
        "description": "Enables automatic creation of a test agency in our sandbox environment.",
        "operationId": "Agencies_CreateTestAgency",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.AgencyService.v2.Model.Agency"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.AgencyService.v2.Model.Agency"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.AgencyService.v2.Model.Agency"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.AgencyService.v2.Model.Agency"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.AgencyService.v2.Model.Agency"
                }
              }
            }
          },
          "401": {
            "description": "When a request is made on a non sandbox environment",
            "content": {
              "application/json": {},
              "text/json": {},
              "text/html": {},
              "application/xml": {},
              "text/xml": {}
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_agencies_write"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": true,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/agents/search": {
      "get": {
        "tags": [
          "Agents"
        ],
        "summary": "Search for agents by name.",
        "description": "The returned Agent ID can be used to get an agent details by ID. See `GET /agents/{id}/`",
        "operationId": "Agents_Search",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "The name, or portion of name, to search for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number for paginated results",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size for paginated results (maximum 20)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.AgentSearch.v1.Model.AutoSuggestAgentResultDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.AgentSearch.v1.Model.AutoSuggestAgentResultDto"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.AgentSearch.v1.Model.AutoSuggestAgentResultDto"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.AgentSearch.v1.Model.AutoSuggestAgentResultDto"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.AgentSearch.v1.Model.AutoSuggestAgentResultDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_agencies_read"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/agents/{id}": {
      "get": {
        "tags": [
          "Agents"
        ],
        "summary": "Retrieves a specific agent details, including contact information.",
        "operationId": "Agents_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Agent identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.AgencyService.v1.Model.AgentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.AgencyService.v1.Model.AgentDto"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.AgencyService.v1.Model.AgentDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.AgencyService.v1.Model.AgentDto"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.AgencyService.v1.Model.AgentDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_agencies_read"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/agents/{id}/listings": {
      "get": {
        "tags": [
          "Agents"
        ],
        "summary": "Gets listing using the contact id",
        "operationId": "Agents_GetListings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Agent identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "dateUpdatedSince",
            "in": "query",
            "description": "Filter to remove listings not updated since before the given date time",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "includedArchivedListings",
            "in": "query",
            "description": "Filter to remove listings that have been archived",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number for paginated results",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size for paginated results",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Listing"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Listing"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Listing"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Listing"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Listing"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_listings_read"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/demographics": {
      "get": {
        "tags": [
          "Demographics"
        ],
        "summary": "Retrieves demographic information",
        "operationId": "Demographics_Get",
        "parameters": [
          {
            "name": "level",
            "in": "query",
            "description": "Geographic level.  Valid values are: `Postcode`, `Suburb`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Location identifier. If the geographic level is Suburb this is a Suburb ID value, if the geographic level is postcode this is a Postcode ID value.  See the `/addressLocators` endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "types",
            "in": "query",
            "description": "Comma separated list of demographic data requested. If not provided, all data will be returned. Valid values are: `AgeGroupOfPopulation`, `CountryOfBirth`, `NatureOfOccupancy`, `GeographicalPopulation`, `DwellingStructure`, `HousingLoanRepayment`, `MaritalStatus`, `Religion`, `Occupation`, `EducationAttendance`, `TransportToWork`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "Year of the source data.  Valid values are: `2011`, `2016`",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.DemographicsService.v1.Model.DemographicsResultsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.DemographicsService.v1.Model.DemographicsResultsModel"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.DemographicsService.v1.Model.DemographicsResultsModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.DemographicsService.v1.Model.DemographicsResultsModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.DemographicsService.v1.Model.DemographicsResultsModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_demographics_read"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/disclaimers": {
      "get": {
        "tags": [
          "Disclaimers"
        ],
        "summary": "Retrieves disclaimers for given ids",
        "operationId": "Disclaimers_Get",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Comma separated list of ids. Eg. \"1,2,3\"",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.APMService.v2.Model.APMAPIModelsDisclaimerV2DisclaimerModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.APMService.v2.Model.APMAPIModelsDisclaimerV2DisclaimerModel"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.APMService.v2.Model.APMAPIModelsDisclaimerV2DisclaimerModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.APMService.v2.Model.APMAPIModelsDisclaimerV2DisclaimerModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.APMService.v2.Model.APMAPIModelsDisclaimerV2DisclaimerModel"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_properties_read"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/disclaimers/product/{product}": {
      "get": {
        "tags": [
          "Disclaimers"
        ],
        "summary": "Retrieves disclaimers for given product",
        "operationId": "Disclaimers_GetByProduct",
        "parameters": [
          {
            "name": "product",
            "in": "path",
            "description": "Possible product values: `PropertyData`, `AURIN`, `HomePriceGuide`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.APMService.v2.Model.APMAPIModelsDisclaimerV2DisclaimerModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.APMService.v2.Model.APMAPIModelsDisclaimerV2DisclaimerModel"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.APMService.v2.Model.APMAPIModelsDisclaimerV2DisclaimerModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.APMService.v2.Model.APMAPIModelsDisclaimerV2DisclaimerModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.APMService.v2.Model.APMAPIModelsDisclaimerV2DisclaimerModel"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_properties_read"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/enquiries/{id}": {
      "get": {
        "tags": [
          "Enquiries"
        ],
        "summary": "Retrieves a specific enquiry.",
        "operationId": "Enquiries_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enquiry identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.EnquiryReport"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.EnquiryReport"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.EnquiryReport"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.EnquiryReport"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.EnquiryReport"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_enquiries_read",
              "api_enquiries_write"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/enquiries": {
      "get": {
        "tags": [
          "Enquiries"
        ],
        "summary": "Searches enquiries based on agents or agencies.",
        "operationId": "Enquiries_Search",
        "parameters": [
          {
            "name": "agencyId",
            "in": "query",
            "description": "Agency identifier",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "agentId",
            "in": "query",
            "description": "Agent identifier",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Enquiries received from",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Enquiries received up to",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number for paginated results (25 per page)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.EnquiryReport"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.EnquiryReport"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.EnquiryReport"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.EnquiryReport"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.EnquiryReport"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_enquiries_read",
              "api_enquiries_write"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": true,
        "x-domain-endpointcost": 1
      },
      "post": {
        "tags": [
          "Enquiries"
        ],
        "summary": "Sends an enquiry for listing, agency, etc... (based on the enquiry type and referenceid).\r\nRecipients and template will be automatically selected.",
        "operationId": "Enquiries_Post",
        "requestBody": {
          "description": "The enquiry object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.Enquiry"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.Enquiry"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.Enquiry"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.Enquiry"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.Enquiry"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.Enquiry"
              }
            }
          },
          "required": true,
          "x-bodyName": "enquiry"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.EnquiryService.v1.Model.GroupEnquiryServiceModelsEnquiryResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.EnquiryService.v1.Model.GroupEnquiryServiceModelsEnquiryResponse"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.EnquiryService.v1.Model.GroupEnquiryServiceModelsEnquiryResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.EnquiryService.v1.Model.GroupEnquiryServiceModelsEnquiryResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.EnquiryService.v1.Model.GroupEnquiryServiceModelsEnquiryResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_enquiries_write"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/listings/{id}": {
      "get": {
        "tags": [
          "Listings"
        ],
        "summary": "Retrieves a specific listing.",
        "operationId": "Listings_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Listing identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Listing"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Listing"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Listing"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Listing"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Listing"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_listings_read",
              "api_listings_write"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/listings/{id}/enquiries": {
      "get": {
        "tags": [
          "Listings"
        ],
        "summary": "Returns enquiries for a given listing",
        "operationId": "Listings_GetEnquiries",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Listing identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number for paginated results (25 per page)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.EnquiryReport"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.EnquiryReport"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.EnquiryReport"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.EnquiryReport"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.EnquiryReport"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_enquiries_read",
              "api_enquiries_write"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/listings/residential/_search": {
      "post": {
        "tags": [
          "Listings"
        ],
        "summary": "Retrieves residential listings matching the specified criteria.",
        "description": "Search results are limited to the first 1000 results.\r\n\r\nIf the number of results is greater, the intention is to refine the search by adding more restrictive parameters, to find a relevant set of results.",
        "operationId": "Listings_DetailedResidentialSearch",
        "requestBody": {
          "description": "Search parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsSearchParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsSearchParameters"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsSearchParameters"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsSearchParameters"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsSearchParameters"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsSearchParameters"
              }
            }
          },
          "required": true,
          "x-bodyName": "parameters"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchContractsV2SearchResult"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchContractsV2SearchResult"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchContractsV2SearchResult"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchContractsV2SearchResult"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchContractsV2SearchResult"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_listings_read",
              "api_listings_write"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/listings/residential": {
      "put": {
        "tags": [
          "Listings"
        ],
        "summary": "Creates or updates a residential listing",
        "operationId": "Listings_UpsertResidentialListing",
        "requestBody": {
          "description": "The residential listing",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ResidentialListing"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ResidentialListing"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ResidentialListing"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ResidentialListing"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ResidentialListing"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ResidentialListing"
              }
            }
          },
          "required": true,
          "x-bodyName": "listing"
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_listings_write"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/listings/commercial/_search": {
      "post": {
        "tags": [
          "Listings"
        ],
        "summary": "Retrieves commercial listings matching the specified criteria.",
        "operationId": "Listings_DetailedCommercialSearch",
        "requestBody": {
          "description": "Search parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.SearchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.SearchRequest"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.SearchRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.SearchRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "parameters"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.Listing"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.Listing"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.Listing"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.Listing"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.Listing"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_listings_read",
              "api_listings_write"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/listings/commercial": {
      "put": {
        "tags": [
          "Listings"
        ],
        "summary": "Creates or updates a commercial listing",
        "operationId": "Listings_UpsertCommercialListing",
        "requestBody": {
          "description": "The commercial listing",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.CommercialListing"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.CommercialListing"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.CommercialListing"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.CommercialListing"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.CommercialListing"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.CommercialListing"
              }
            }
          },
          "required": true,
          "x-bodyName": "listing"
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_listings_write"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/listings/business/_search": {
      "post": {
        "tags": [
          "Listings"
        ],
        "summary": "Retrieves business listings matching the specified criteria.",
        "operationId": "Listings_DetailedBusinessSearch",
        "requestBody": {
          "description": "Search parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.SearchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.SearchRequest"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.SearchRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.SearchRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.SearchRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.SearchRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "parameters"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.Listing"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.Listing"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.Listing"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.Listing"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.Listing"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_listings_read",
              "api_listings_write"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/listings/business": {
      "put": {
        "tags": [
          "Listings"
        ],
        "summary": "Creates or updates a business listing",
        "operationId": "Listings_UpsertBusinessListing",
        "requestBody": {
          "description": "The business listing",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.BusinessListing"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.BusinessListing"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.BusinessListing"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.BusinessListing"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.BusinessListing"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.BusinessListing"
              }
            }
          },
          "required": true,
          "x-bodyName": "listing"
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_listings_write"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/listings/{id}/offmarket": {
      "post": {
        "tags": [
          "Listings"
        ],
        "summary": "Takes a listing offmarket",
        "operationId": "Listings_UpdateOffmarketDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Listing identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.OffMarketDetails"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.OffMarketDetails"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.OffMarketDetails"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.OffMarketDetails"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.OffMarketDetails"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.OffMarketDetails"
              }
            }
          },
          "required": true,
          "x-bodyName": "offMarketDetails"
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_listings_write"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/listings/{id}/statistics": {
      "get": {
        "tags": [
          "Listings"
        ],
        "summary": "Retrieves listings stats for the specified listing",
        "operationId": "Listings_GetListingStatistics",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Listing identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "timePeriod",
            "in": "query",
            "description": "The time period to show statistics for. Valid values are: `last7Days`, `last90Days`, `wholeCampaign`",
            "schema": {
              "enum": [
                "last7Days",
                "last90Days",
                "wholeCampaign"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.StatisticsReport"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.StatisticsReport"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.StatisticsReport"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.StatisticsReport"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.StatisticsReport"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_listings_read"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": true,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/listings/statistics": {
      "get": {
        "tags": [
          "Listings"
        ],
        "summary": "Retrieves stats for the listings of a given agent",
        "operationId": "Listings_GetListingStatisticsByAgentId",
        "parameters": [
          {
            "name": "agentId",
            "in": "query",
            "description": "Agent identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "timePeriod",
            "in": "query",
            "description": "The time period to show statistics for. Valid values are: `last7Days`, `last90Days`, `wholeCampaign`",
            "required": true,
            "schema": {
              "enum": [
                "last7Days",
                "last90Days",
                "wholeCampaign"
              ],
              "type": "string"
            }
          },
          {
            "name": "statusFilter",
            "in": "query",
            "description": "Listing filter",
            "required": true,
            "schema": {
              "enum": [
                "live",
                "liveAndArchived"
              ],
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number for paginated results",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size for paginated results",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Statistics"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Statistics"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Statistics"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Statistics"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Statistics"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_listings_read"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": true,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/listings/processingReports": {
      "get": {
        "tags": [
          "Listings"
        ],
        "summary": "Searches processing reports",
        "operationId": "Listings_GetListingReportByReference",
        "parameters": [
          {
            "name": "agencyId",
            "in": "query",
            "description": "Domain agency Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "providerAdId",
            "in": "query",
            "description": "External provider advertisement identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingReport"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingReport"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingReport"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingReport"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingReport"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_listings_read"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/listings/processingReports/{id}": {
      "get": {
        "tags": [
          "Listings"
        ],
        "summary": "Gets the processing report",
        "operationId": "Listings_GetListingReport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Report id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingReport"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingReport"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingReport"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingReport"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingReport"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_listings_read"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/listings/locations": {
      "get": {
        "tags": [
          "Listings"
        ],
        "summary": "Suggests listing locations",
        "description": "The resulting suggested location can be of type \"suburb\" / \"area\" / \"region\".\r\n\r\nThe `name` property corresponds to the type of location returned.\r\n\r\nThe area name / region name can be fed into the corresponding fields search fields.  See [`v1/listings/residential/_search`](/docs/v1/apis/pkg_agents_listings/references/listings_detailedresidentialsearch)",
        "operationId": "ListingLocations_Search",
        "parameters": [
          {
            "name": "terms",
            "in": "query",
            "description": "Suburb / area / region prefix, or postcode",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.ListingLocation"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.ListingLocation"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.ListingLocation"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.ListingLocation"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.ListingLocation"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_listings_read",
              "api_listings_write"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/leadminer/predictions/{participantId}": {
      "get": {
        "tags": [
          "Leadminer"
        ],
        "summary": "URL to download a list of agency predictions",
        "operationId": "LeadMiner_GetById",
        "parameters": [
          {
            "name": "participantId",
            "in": "path",
            "description": "Participant ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "URL to download a list of agency predictions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "No predictions found"
          }
        },
        "security": [
          {
            "apikey": []
          },
          {
            "oauth2": [
              "api_agencies_read"
            ]
          }
        ]
      }
    },
    "/v1/me": {
      "get": {
        "tags": [
          "Me"
        ],
        "summary": "Retrieve information about the currently authorised request",
        "operationId": "Me_Profile",
        "responses": {
          "200": {
            "description": "User information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Me.V1.MyDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Me.V1.MyDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Me.V1.MyDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          }
        ],
        "x-domain-optionalscopes": "openid email"
      }
    },
    "/v1/me/agencies": {
      "get": {
        "tags": [
          "Me"
        ],
        "summary": "Retrieve list of agencies with which the current client is associated",
        "operationId": "Me_GetMyAgencies",
        "responses": {
          "200": {
            "description": "Agency information",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Me.V1.AgencySummary"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Me.V1.AgencySummary"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Me.V1.AgencySummary"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          },
          {
            "oauth2": [
              "api_agencies_read"
            ]
          }
        ]
      }
    },
    "/v1/me/providers": {
      "get": {
        "tags": [
          "Me"
        ],
        "summary": "Retrieve list of provider Ids with which the current client is associated",
        "operationId": "Me_GetMyProviders",
        "responses": {
          "200": {
            "description": "Provider information",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Me.V1.ProviderSummary"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Me.V1.ProviderSummary"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Me.V1.ProviderSummary"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          },
          {
            "oauth2": [
              "api_listings_write"
            ]
          }
        ]
      }
    },
    "/v1/products/ratefornewlisting": {
      "post": {
        "tags": [
          "ProductRates"
        ],
        "summary": "Get updated pricing information for a hypothetical listing",
        "operationId": "Products_RateForNewListing",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Bookings.V2.RateForNewListingRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Bookings.V2.RateForNewListingRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Bookings.V2.RateForNewListingRequest"
              }
              }
              }
            },
        "responses": {
          "200": {
            "description": "Pricing information for the given listing details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Bookings.V2.RateForNewListing"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bookings.V2.RateForNewListing"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bookings.V2.RateForNewListing"
                }
              }
                }
              },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          },
          {
            "oauth2": [
              "api_agencies_read"
            ]
          }
        ],
        "x-domain-usercontextrequired": true
      }
    },
    "/v1/locations/profiles/{domainLocationId}": {
      "get": {
        "tags": [
          "Profiles"
        ],
        "summary": "Get location data based on the given domainLocationId",
        "operationId": "LocationProfiles_Get",
        "parameters": [
          {
            "name": "domainLocationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.LocationProfilesService.v1.Model.Location"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.LocationProfilesService.v1.Model.Location"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.LocationProfilesService.v1.Model.Location"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.LocationProfilesService.v1.Model.Location"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.LocationProfilesService.v1.Model.Location"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorised",
            "content": {
              "application/json": {},
              "text/json": {},
              "text/html": {},
              "application/xml": {},
              "text/xml": {}
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {},
              "text/json": {},
              "text/html": {},
              "application/xml": {},
              "text/xml": {}
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_locations_read"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/projects/{id}/listings": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Retrieves listings of a project",
        "operationId": "Projects_GetChildListings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Listing"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Listing"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Listing"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Listing"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Listing"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_listings_read",
              "api_listings_write"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/projects/{id}": {
      "get": {
        "tags": [
          "Listings"
        ],
        "summary": "Details of project",
        "operationId": "Projects_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the project",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Listings.V2.Project"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Listings.V2.Project"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Listings.V2.Project"
                }
                  }
                }
              },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          },
          {
            "oauth2": [
              "api_listings_read"
            ]
          }
        ]
      }
    },
    "/v1/projects": {
      "get": {
        "tags": [
          "Listings"
        ],
        "summary": "Searches projects",
        "description": "Note that the result page size is clamped at 100.  Requesting a page size greater than this will be treated as if only a page size of 100 were requested.",
        "operationId": "Projects_Search",
        "parameters": [
          {
            "name": "agencyId",
            "in": "query",
            "description": "Restricts to the provided agency",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number for paginated results",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size for paginated results",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Listings.V2.Project"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Listings.V2.Project"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Listings.V2.Project"
                  }
                }
                  }
                }
              },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                  }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          },
        "security": [
          {
            "apikey": []
          },
          {
            "oauth2": [
              "api_listings_read"
            ]
          }
        ]
      }
    },
    "/v1/properties/{id}": {
      "get": {
        "tags": [
          "Properties"
        ],
        "summary": "Retrieves a specific property.",
        "description": "Applicable [policies](/docs/latest/support/policies) apply here include APM attribution and appropriate state government attribution.",
        "operationId": "Properties_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Property identifier.  Use the `_suggest` resource to determine the propertyId.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Properties.Property"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Properties.Property"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Properties.Property"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_properties_read"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/properties/{id}/priceEstimate": {
      "get": {
        "tags": [
          "Properties"
        ],
        "summary": "Retrieves the current price estimate for the given property.",
        "description": "The price estimate data is refreshed monthly, typically towards the end of each month.\r\n\r\nThe price estimate provides a guide of the approximate market value for a property.",
        "operationId": "Properties_GetPriceEstimate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Property identifier.  Use the `_suggest` resource to determine the propertyId.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Properties.PriceEstimate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Properties.PriceEstimate"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Properties.PriceEstimate"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_properties_read"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/properties/_suggest": {
      "get": {
        "tags": [
          "Properties"
        ],
        "summary": "Search for suggested addressed for the given terms",
        "description": "Applicable [policies](/docs/latest/support/policies) apply here include APM attribution.",
        "operationId": "Properties_Suggest",
        "parameters": [
          {
            "name": "terms",
            "in": "query",
            "description": "The address to search",
            "schema": {
              "type": "string"
            },
              "example": "1 Smith Street, Smithfield, NSW"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of suggestions (maximum 20)",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "channel",
            "in": "query",
            "description": "Restrict the suggestions to this type of property: `All` (default), `Residential`, `Commercial`",
            "schema": {
              "$ref": "#/components/schemas/LocationTypeahead.V1.PropertySuggestionChannel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Demographics data returned",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationTypeahead.V1.PropertySuggestion"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationTypeahead.V1.PropertySuggestion"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationTypeahead.V1.PropertySuggestion"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "apikey": []
          },
          {
            "oauth2": [
              "api_properties_read"
            ]
          }
        ],
        "x-domain-endpointcost": 0,
        "x-domain-usercontextrequired": false
      }
    },
    "/v1/propertyReports": {
      "get": {
        "tags": [
          "PropertyReports"
        ],
        "summary": "Retrieves a property report based on query parameters",
        "operationId": "PropertyReports_Get",
        "parameters": [
          {
            "name": "propertyType",
            "in": "query",
            "description": "Type of property `House`, `Unit`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "streetNumber",
            "in": "query",
            "description": "Street number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "streetName",
            "in": "query",
            "description": "Street name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "suburb",
            "in": "query",
            "description": "Suburb e.g. `Pyrmont`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "State e.g. `NSW`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unitNumber",
            "in": "query",
            "description": "Unit number",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "streetType",
            "in": "query",
            "description": "Street type e.g. `Pl`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "postcode",
            "in": "query",
            "description": "Postcode e.g. `2009`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "areaSize",
            "in": "query",
            "description": "Area size",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "bedrooms",
            "in": "query",
            "description": "Number of bedrooms",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "bathrooms",
            "in": "query",
            "description": "Number of bathrooms",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "parking",
            "in": "query",
            "description": "Number of parking spots",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "preparedFor",
            "in": "query",
            "description": "\"Prepared for\" information",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productCode",
            "in": "query",
            "description": "Report product code",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.PropertyReportService.v1.Model.PropertyReportGenerationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.PropertyReportService.v1.Model.PropertyReportGenerationResult"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.PropertyReportService.v1.Model.PropertyReportGenerationResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.PropertyReportService.v1.Model.PropertyReportGenerationResult"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.PropertyReportService.v1.Model.PropertyReportGenerationResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_propertyreports_read"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/salesResults/_head": {
      "get": {
        "tags": [
          "SalesResults"
        ],
        "summary": "Retrieves metadata regarding sales result data",
        "operationId": "SalesResults_Head",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.SalesResultsService.v1.Model.DomainSalesResultsModelCityResultsDate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.SalesResultsService.v1.Model.DomainSalesResultsModelCityResultsDate"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.SalesResultsService.v1.Model.DomainSalesResultsModelCityResultsDate"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.SalesResultsService.v1.Model.DomainSalesResultsModelCityResultsDate"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.SalesResultsService.v1.Model.DomainSalesResultsModelCityResultsDate"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_salesresults_read"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/salesResults/{city}": {
      "get": {
        "tags": [
          "SalesResults"
        ],
        "summary": "Retrieves sales results for a given city",
        "operationId": "SalesResults_Get",
        "parameters": [
          {
            "name": "city",
            "in": "path",
            "description": "City. Supported cities are: `Sydney`, `Melbourne`, `Brisbane`, `Adelaide`, `Canberra`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.SalesResultsService.v1.Model.DomainSalesResultsModelCityResultsSummary"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.SalesResultsService.v1.Model.DomainSalesResultsModelCityResultsSummary"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.SalesResultsService.v1.Model.DomainSalesResultsModelCityResultsSummary"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.SalesResultsService.v1.Model.DomainSalesResultsModelCityResultsSummary"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.SalesResultsService.v1.Model.DomainSalesResultsModelCityResultsSummary"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_salesresults_read"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/salesResults/{city}/listings": {
      "get": {
        "tags": [
          "SalesResults"
        ],
        "summary": "Retrieves listing summaries corresponding to the sales results",
        "operationId": "SalesResults_Listings",
        "parameters": [
          {
            "name": "city",
            "in": "path",
            "description": "City. Supported cities are: `Sydney`, `Melbourne`, `Brisbane`, `Adelaide`, `Canberra`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.SalesResults.ListingSummary"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.SalesResults.ListingSummary"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.SalesResults.ListingSummary"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.SalesResults.ListingSummary"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.SalesResults.ListingSummary"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_salesresults_read"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/locations/schools/{id}": {
      "get": {
        "tags": [
          "Schools"
        ],
        "summary": "Retrieves a specific school",
        "operationId": "Schools_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "School identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Locations.Schools.School"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Locations.Schools.School"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Locations.Schools.School"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Locations.Schools.School"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Locations.Schools.School"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_locations_read"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/locations/schools": {
      "get": {
        "tags": [
          "Schools"
        ],
        "summary": "Searches schools based on specified criteria",
        "operationId": "Schools_Search",
        "parameters": [
          {
            "name": "coordinate",
            "in": "query",
            "description": "Filter schools to include the specified coordinate in their catchment area (lat,long)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Locations.Schools.School"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Locations.Schools.School"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Locations.Schools.School"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Locations.Schools.School"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Locations.Schools.School"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_locations_read"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/statistics/{event}": {
      "post": {
        "tags": [
          "Statistics"
        ],
        "summary": "Record a statistic event along with its associated metadata (if applicable)",
        "operationId": "Statistics_Post",
        "parameters": [
          {
            "name": "event",
            "in": "path",
            "description": "The event type",
            "required": true,
            "schema": {
              "enum": [
                "listingViewed",
                "listingImageGalleryViewed",
                "listingImageViewed",
                "listingMapViewed",
                "listingVideoViewed",
                "listingFloorPlanViewed",
                "listingAddedToShortlist",
                "listingAgentCalled",
                "listingAgentPhoneRevealed",
                "listingNotesAdded",
                "listingEmailedToAFriend",
                "listingEnquirySent",
                "loanEventRaised"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "A JSON object dictionary of the metadata associated with the event.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            },
            "text/json": {
              "schema": {
                "type": "object"
              }
            },
            "text/html": {
              "schema": {
                "type": "object"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true,
          "x-bodyName": "eventMetaData"
        },
        "responses": {
          "202": {
            "description": "The statistic event has been queued for reporting.",
            "content": {
              "application/json": {},
              "text/json": {},
              "text/html": {},
              "application/xml": {},
              "text/xml": {}
            }
          },
          "400": {
            "description": "There was a validation error with the supplied data. Check the error message for details",
            "content": {
              "application/json": {},
              "text/json": {},
              "text/html": {},
              "application/xml": {},
              "text/xml": {}
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_statistics_write"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/suburbPerformanceStatistics": {
      "get": {
        "tags": [
          "SuburbPerformanceStatistics"
        ],
        "summary": "Retrieves suburb performance data",
        "operationId": "SuburbPerformanceStatistics_Get",
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "description": "State where the suburb is",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "suburbId",
            "in": "query",
            "description": "Suburb Identifier.  Use the `addressLocators` resource to determine the suburbId.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "propertyCategory",
            "in": "query",
            "description": "Property Category. Valid values are: `house`, `unit`, `land`",
            "required": true,
            "schema": {
              "enum": [
                "house",
                "unit",
                "land"
              ],
              "type": "string"
            }
          },
          {
            "name": "chronologicalSpan",
            "in": "query",
            "description": "The size of each chunk of information we want in months. 3, 6, or 12.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "tPlusFrom",
            "in": "query",
            "description": "Countdown number in chronological spans from the current (current chronological span is 1)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "tPlusTo",
            "in": "query",
            "description": "Countdown number in chronological spans from the current (current chronological span is 1, 2 chronological spans ago is 3)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "bedrooms",
            "in": "query",
            "description": "Restrict statistics to properties with this number of bedrooms",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "values",
            "in": "query",
            "description": "Values to be returned for the series.  If the field is not provided, all available values for the SeriesInfo will be returned. You can specify multiple values using comma separated text.  Valid values are: `MedianSoldPrice`, `AuctionNumberAuctioned`, `AuctionNumberSold`, `AuctionNumberWithdrawn`, `NumberSold`, `LowestSoldPrice`, `HighestSoldPrice`, `5thPercentileSoldPrice`, `25thPercentileSoldPrice`, `75thPercentileSoldPrice`, `95thPercentileSoldPrice`, `DaysOnMarket`, `DiscountPercentage`, `MedianRentListingPrice`, `NumberRentListing`, `HighestRentListingPrice`, `LowestRentListingPrice`, `MedianSaleListingPrice`, `NumberSaleListing`, `HighestSaleListingPrice`, `LowestSaleListingPrice`",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.APMService.v2.Model.APMAPIModelsSuburbV2SuburbPerformanceModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.APMService.v2.Model.APMAPIModelsSuburbV2SuburbPerformanceModel"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.APMService.v2.Model.APMAPIModelsSuburbV2SuburbPerformanceModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.APMService.v2.Model.APMAPIModelsSuburbV2SuburbPerformanceModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.APMService.v2.Model.APMAPIModelsSuburbV2SuburbPerformanceModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_suburbperformance_read"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/subscriptions/{id}": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Retrieves a webhook subscription",
        "operationId": "Webhooks_GetSubscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Subscription identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Subscriptions.Subscription"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Subscriptions.Subscription"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Subscriptions.Subscription"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_webhooks_write"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      },
      "delete": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Deletes a webhook subscription",
        "operationId": "Webhooks_DeleteSubscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Subscription identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "oauth2": [
              "api_webhooks_write"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      }
    },
    "/v1/webhooks/{id}/subscriptions": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Retreives all webhook subscriptions",
        "operationId": "Webhooks_ListSubscriptions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Subscriber (Webhook) ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Subscriptions.Subscription"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Subscriptions.Subscription"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Subscriptions.Subscription"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Subscriptions.Subscription"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Subscriptions.Subscription"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_webhooks_write"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": false,
        "x-domain-endpointcost": 1
      },
      "put": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Creates a subscription",
        "operationId": "Webhooks_CreateSubscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Webhook identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Subscription data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain.NotificationPortal.v1.Model.AddSubscriptionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain.NotificationPortal.v1.Model.AddSubscriptionRequest"
              }
            },
            "text/html": {
              "schema": {
                "$ref": "#/components/schemas/Domain.NotificationPortal.v1.Model.AddSubscriptionRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Domain.NotificationPortal.v1.Model.AddSubscriptionRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Domain.NotificationPortal.v1.Model.AddSubscriptionRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Domain.NotificationPortal.v1.Model.AddSubscriptionRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "subscription"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Subscriptions.Subscription"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Subscriptions.Subscription"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Subscriptions.Subscription"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "x-data-access-level-info": {
                      "Basic": [
                        "*"
                      ],
                      "Detailed": [
                        "*"
                      ],
                      "Full": [
                        "*"
                      ]
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "x-data-access-level-info": {
                      "Basic": [
                        "*"
                      ],
                      "Detailed": [
                        "*"
                      ],
                      "Full": [
                        "*"
                      ]
                    }
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "x-data-access-level-info": {
                      "Basic": [
                        "*"
                      ],
                      "Detailed": [
                        "*"
                      ],
                      "Full": [
                        "*"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api_webhooks_write"
            ]
          },
          {
            "apikey": []
          }
        ],
        "x-domain-usercontextrequired": true,
        "x-domain-endpointcost": 1
      }
    }
  },
  "components": {
    "schemas": {
      "Domain.APMService.v3.Model.APMAPIModelsTokenisedSearchV2AddressComponentModel": {
        "type": "object",
        "properties": {
          "component": {
            "enum": [
              "UnitNumber",
              "StreetNumber",
              "StreetName",
              "StreetType",
              "Suburb",
              "Postcode",
              "State"
            ],
            "type": "string"
          },
          "shortName": {
            "type": "string"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.APMService.v3.Model.APMAPIModelsTokenisedSearchV3ApmIdModel": {
        "type": "object",
        "properties": {
          "level": {
            "enum": [
              "Address",
              "Street",
              "Suburb",
              "Postcode",
              "State"
            ],
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.APMService.v3.Model.APMAPIModelsTokenisedSearchV3AddressDataModel": {
        "type": "object",
        "properties": {
          "types": {
            "type": "array",
            "items": {
              "enum": [
                "Address",
                "Street",
                "Suburb",
                "Postcode",
                "State"
              ],
              "type": "string"
            }
          },
          "addressComponents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.APMService.v3.Model.APMAPIModelsTokenisedSearchV2AddressComponentModel"
            }
          },
          "ids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.APMService.v3.Model.APMAPIModelsTokenisedSearchV3ApmIdModel"
            }
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.AgencyService.v2.Model.AgencyPhoto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.AgencyService.v2.Model.AgencyProfile": {
        "type": "object",
        "properties": {
          "agencyPhotos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.AgencyService.v2.Model.AgencyPhoto"
            }
          },
          "profileWebsite": {
            "type": "string"
          },
          "agencyBanner": {
            "type": "string"
          },
          "agencyWebsite": {
            "type": "string"
          },
          "agencyLogoStandard": {
            "type": "string"
          },
          "agencyLogoSmall": {
            "type": "string"
          },
          "logoColour": {
            "type": "string"
          },
          "primaryAgencyColour": {
            "type": "string"
          },
          "backgroundColour": {
            "type": "string"
          },
          "mapLatitude": {
            "type": "string"
          },
          "mapLongitude": {
            "type": "string"
          },
          "mapCertainty": {
            "type": "integer",
            "format": "int32"
          },
          "agencyVideoUrl": {
            "type": "string"
          },
          "agencyDescription": {
            "type": "string"
          },
          "agencyDescriptionCre": {
            "type": "string"
          },
          "creProfileWebsite": {
            "type": "string"
          },
          "agencyCreBanner": {
            "type": "string"
          },
          "agencyCreWebsite": {
            "type": "string"
          },
          "agencyCreLogoStandard": {
            "type": "string"
          },
          "numberForSale": {
            "type": "integer",
            "format": "int32"
          },
          "numberForRent": {
            "type": "integer",
            "format": "int32"
          },
          "numberForSaleCommercial": {
            "type": "integer",
            "format": "int32"
          },
          "numberForRentCommercial": {
            "type": "integer",
            "format": "int32"
          },
          "creAgencyVideoUrl": {
            "type": "string"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "ProfileWebsite",
            "AgencyBanner",
            "AgencyWebsite",
            "AgencyLogoStandard",
            "AgencyLogoSmall",
            "LogoColour",
            "PrimaryAgencyColour",
            "BackgroundColour",
            "MapLatitude",
            "MapLongitude",
            "MapCertainty",
            "AgencyDescription",
            "AgencyDescriptionCre",
            "CreProfileWebsite",
            "AgencyCreBanner",
            "AgencyCreWebsite",
            "AgencyCreLogoStandard",
            "NumberForSale",
            "NumberForRent",
            "NumberForSaleCommercial",
            "NumberForRentCommercial"
          ],
          "Detailed": [
            "AgencyPhotos",
            "ProfileWebsite",
            "AgencyBanner",
            "AgencyWebsite",
            "AgencyLogoStandard",
            "AgencyLogoSmall",
            "LogoColour",
            "PrimaryAgencyColour",
            "BackgroundColour",
            "MapLatitude",
            "MapLongitude",
            "MapCertainty",
            "AgencyVideoUrl",
            "AgencyDescription",
            "AgencyDescriptionCre",
            "CreProfileWebsite",
            "AgencyCreBanner",
            "AgencyCreWebsite",
            "AgencyCreLogoStandard",
            "NumberForSale",
            "NumberForRent",
            "NumberForSaleCommercial",
            "NumberForRentCommercial",
            "CreAgencyVideoUrl"
          ],
          "Full": [
            "AgencyPhotos",
            "ProfileWebsite",
            "AgencyBanner",
            "AgencyWebsite",
            "AgencyLogoStandard",
            "AgencyLogoSmall",
            "LogoColour",
            "PrimaryAgencyColour",
            "BackgroundColour",
            "MapLatitude",
            "MapLongitude",
            "MapCertainty",
            "AgencyVideoUrl",
            "AgencyDescription",
            "AgencyDescriptionCre",
            "CreProfileWebsite",
            "AgencyCreBanner",
            "AgencyCreWebsite",
            "AgencyCreLogoStandard",
            "NumberForSale",
            "NumberForRent",
            "NumberForSaleCommercial",
            "NumberForRentCommercial",
            "CreAgencyVideoUrl"
          ]
        }
      },
      "Domain.AgencyService.v2.Model.AgencyDetails": {
        "type": "object",
        "properties": {
          "streetAddress1": {
            "type": "string"
          },
          "streetAddress2": {
            "type": "string"
          },
          "suburb": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "agencyWebsite": {
            "type": "string"
          },
          "principalName": {
            "type": "string"
          },
          "principalEmail": {
            "type": "string"
          },
          "showPastSalesPrices": {
            "type": "boolean"
          },
          "isAgencyReportEnabled": {
            "type": "boolean"
          },
          "salesEmail": {
            "type": "string"
          },
          "rentalEmail": {
            "type": "string"
          },
          "isPromotionalTelephoneActive": {
            "type": "boolean"
          },
          "hideMarketPriceEstimate": {
            "type": "boolean"
          },
          "limitEmailDomain": {
            "type": "boolean"
          },
          "showTabSoldLastYear": {
            "type": "boolean"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "StreetAddress1",
            "StreetAddress2",
            "Suburb",
            "State",
            "Postcode",
            "AgencyWebsite",
            "PrincipalName"
          ],
          "Detailed": [
            "StreetAddress1",
            "StreetAddress2",
            "Suburb",
            "State",
            "Postcode",
            "AgencyWebsite",
            "PrincipalName",
            "PrincipalEmail",
            "SalesEmail",
            "RentalEmail"
          ],
          "Full": [
            "StreetAddress1",
            "StreetAddress2",
            "Suburb",
            "State",
            "Postcode",
            "AgencyWebsite",
            "PrincipalName",
            "PrincipalEmail",
            "ShowPastSalesPrices",
            "IsAgencyReportEnabled",
            "SalesEmail",
            "RentalEmail",
            "IsPromotionalTelephoneActive",
            "HideMarketPriceEstimate",
            "LimitEmailDomain",
            "ShowTabSoldLastYear"
          ]
        }
      },
      "Domain.AgencyService.v2.Model.AgentInAgencyList": {
        "type": "object",
        "properties": {
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "agencyId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "isActiveProfilePage": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "saleActive": {
            "type": "boolean"
          },
          "rentalActive": {
            "type": "boolean"
          },
          "secondaryEmail": {
            "type": "string"
          },
          "facebookUrl": {
            "type": "string"
          },
          "twitterUrl": {
            "type": "string"
          },
          "agentVideo": {
            "type": "string"
          },
          "profileText": {
            "type": "string"
          },
          "isHideSoldLeasedListings": {
            "type": "boolean"
          },
          "googlePlusUrl": {
            "type": "string"
          },
          "personalWebsiteUrl": {
            "type": "string"
          },
          "linkedInUrl": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "mugShotNew": {
            "type": "string"
          },
          "contactTypeCode": {
            "type": "integer",
            "format": "int32"
          },
          "receivesRequests": {
            "type": "boolean"
          },
          "creAgentVideoURL": {
            "type": "string"
          },
          "receiveScheduledReportEmail": {
            "type": "boolean"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "AgencyId",
            "Id",
            "FirstName",
            "Photo",
            "LastName",
            "Phone",
            "FacebookUrl",
            "TwitterUrl",
            "ProfileText",
            "GooglePlusUrl",
            "MugShotNew",
            "ContactTypeCode"
          ],
          "Detailed": [
            "AgencyId",
            "Id",
            "Email",
            "FirstName",
            "Mobile",
            "Photo",
            "LastName",
            "Phone",
            "SecondaryEmail",
            "FacebookUrl",
            "TwitterUrl",
            "AgentVideo",
            "ProfileText",
            "GooglePlusUrl",
            "PersonalWebsiteUrl",
            "LinkedInUrl",
            "MugShotNew",
            "ContactTypeCode",
            "CreAgentVideoURL"
          ],
          "Full": [
            "DateUpdated",
            "AgencyId",
            "Id",
            "Email",
            "FirstName",
            "Mobile",
            "Photo",
            "LastName",
            "IsActiveProfilePage",
            "Phone",
            "SaleActive",
            "RentalActive",
            "SecondaryEmail",
            "FacebookUrl",
            "TwitterUrl",
            "AgentVideo",
            "ProfileText",
            "IsHideSoldLeasedListings",
            "GooglePlusUrl",
            "PersonalWebsiteUrl",
            "LinkedInUrl",
            "Fax",
            "MugShotNew",
            "ContactTypeCode",
            "ReceivesRequests",
            "CreAgentVideoURL",
            "ReceiveScheduledReportEmail"
          ]
        }
      },
      "Domain.AgencyService.v2.Model.EmailPhone": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.AgencyService.v2.Model.EmailDomain": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.AgencyService.v2.Model.GeneralContactDetails": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.AgencyService.v2.Model.ContactDetails": {
        "type": "object",
        "properties": {
          "businessSale": {
            "$ref": "#/components/schemas/Domain.AgencyService.v2.Model.EmailPhone"
          },
          "businessRent": {
            "$ref": "#/components/schemas/Domain.AgencyService.v2.Model.EmailPhone"
          },
          "commercialLease": {
            "$ref": "#/components/schemas/Domain.AgencyService.v2.Model.EmailPhone"
          },
          "commercialSale": {
            "$ref": "#/components/schemas/Domain.AgencyService.v2.Model.EmailPhone"
          },
          "emailDomains": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.AgencyService.v2.Model.EmailDomain"
            }
          },
          "general": {
            "$ref": "#/components/schemas/Domain.AgencyService.v2.Model.GeneralContactDetails"
          },
          "residentialRent": {
            "$ref": "#/components/schemas/Domain.AgencyService.v2.Model.EmailPhone"
          },
          "residentialSale": {
            "$ref": "#/components/schemas/Domain.AgencyService.v2.Model.EmailPhone"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.AgencyService.v2.Model.AgencyOptions": {
        "type": "object",
        "properties": {
          "saleListingsGstOption": {
            "type": "integer",
            "format": "int32"
          },
          "leaseListingsGstOption": {
            "type": "integer",
            "format": "int32"
          },
          "receiveLookForPropertyRequests": {
            "type": "boolean"
          },
          "receiveSellPropertyRequests": {
            "type": "boolean"
          },
          "receivePropertyValuationRequests": {
            "type": "boolean"
          },
          "agentDirectoryListing": {
            "type": "boolean"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.AgencyService.v2.Model.Agency": {
        "type": "object",
        "properties": {
          "accountType": {
            "enum": [
              "none",
              "residential",
              "commercialLight",
              "commercialFull",
              "developer",
              "holiday",
              "business"
            ],
            "type": "string"
          },
          "profile": {
            "$ref": "#/components/schemas/Domain.AgencyService.v2.Model.AgencyProfile"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/Domain.AgencyService.v2.Model.AgencyDetails"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "creId": {
            "type": "integer",
            "format": "int32"
          },
          "agents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.AgencyService.v2.Model.AgentInAgencyList"
            }
          },
          "contactDetails": {
            "$ref": "#/components/schemas/Domain.AgencyService.v2.Model.ContactDetails"
          },
          "homepassEnabled": {
            "type": "boolean"
          },
          "suburbsServed": {
            "type": "string"
          },
          "subscribedToAgencyPerformanceReport": {
            "type": "boolean"
          },
          "agencyOptions": {
            "$ref": "#/components/schemas/Domain.AgencyService.v2.Model.AgencyOptions"
          },
          "welcomeMessage": {
            "type": "string"
          },
          "adFormat": {
            "type": "string"
          },
          "providerAgencyId": {
            "type": "string"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "AccountType",
            "Profile",
            "Name",
            "Details",
            "Id",
            "CreId",
            "Agents",
            "ContactDetails",
            "SuburbsServed"
          ],
          "Detailed": [
            "AccountType",
            "Profile",
            "DateUpdated",
            "Name",
            "Details",
            "Id",
            "CreId",
            "Agents",
            "ContactDetails",
            "SuburbsServed"
          ],
          "Full": [
            "AccountType",
            "Profile",
            "DateUpdated",
            "Name",
            "Details",
            "Id",
            "CreId",
            "Agents",
            "ContactDetails",
            "HomepassEnabled",
            "SuburbsServed",
            "SubscribedToAgencyPerformanceReport",
            "AgencyOptions",
            "WelcomeMessage",
            "AdFormat",
            "ProviderAgencyId"
          ]
        }
      },
      "Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingAddressParts": {
        "type": "object",
        "properties": {
          "stateAbbreviation": {
            "enum": [
              "nsw",
              "vic",
              "sa",
              "nt",
              "tas",
              "act",
              "qld",
              "wa"
            ],
            "type": "string"
          },
          "displayType": {
            "enum": [
              "fullAddress",
              "streetAndSuburb",
              "suburbOnly",
              "regionOnly",
              "areaOnly",
              "stateOnly"
            ],
            "type": "string"
          },
          "streetNumber": {
            "type": "string"
          },
          "unitNumber": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "suburb": {
            "type": "string"
          },
          "suburbId": {
            "type": "integer",
            "format": "int32"
          },
          "postcode": {
            "type": "string"
          },
          "displayAddress": {
            "type": "string"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "StateAbbreviation",
            "DisplayType",
            "StreetNumber",
            "UnitNumber",
            "Street",
            "Suburb",
            "SuburbId",
            "Postcode",
            "DisplayAddress"
          ],
          "Detailed": [
            "StateAbbreviation",
            "DisplayType",
            "StreetNumber",
            "UnitNumber",
            "Street",
            "Suburb",
            "SuburbId",
            "Postcode",
            "DisplayAddress"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingAdvertiserIdentifiers": {
        "type": "object",
        "properties": {
          "advertiserType": {
            "enum": [
              "agency",
              "private"
            ],
            "type": "string"
          },
          "advertiserId": {
            "type": "integer",
            "format": "int32"
          },
          "contactIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "agentIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "conjunctionContactIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "conjunctionAgentIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingAustralianPropertyMonitorsIdentifiers": {
        "type": "object",
        "properties": {
          "addressId": {
            "type": "integer",
            "format": "int32"
          },
          "streetId": {
            "type": "integer",
            "format": "int32"
          },
          "suburbId": {
            "type": "integer",
            "format": "int32"
          },
          "cadastreId": {
            "type": "integer",
            "format": "int64"
          },
          "postcodeId": {
            "type": "integer",
            "format": "int32"
          },
          "stateId": {
            "type": "integer",
            "format": "int32"
          },
          "state": {
            "type": "string"
          },
          "propertyTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "propertyTypeCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "flatNumber": {
            "type": "string"
          },
          "streetNumber": {
            "type": "string"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "SuburbId"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingGeoLocation": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingInspection": {
        "type": "object",
        "properties": {
          "recurrence": {
            "enum": [
              "none",
              "weekly"
            ],
            "type": "string"
          },
          "closingDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "openingDateTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingPropertyInspections": {
        "type": "object",
        "properties": {
          "inspections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingInspection"
            }
          },
          "pastInspections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingInspection"
            }
          },
          "isByAppointmentOnly": {
            "type": "boolean"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingListingMedia": {
        "type": "object",
        "properties": {
          "category": {
            "enum": [
              "image",
              "video",
              "others"
            ],
            "type": "string"
          },
          "type": {
            "enum": [
              "photo",
              "mp4",
              "youtube",
              "floorplan",
              "vimeo",
              "notSpecified"
            ],
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingPriceDetails": {
        "type": "object",
        "properties": {
          "hiddenReasons": {
            "type": "array",
            "items": {
              "enum": [
                "byAgency",
                "qLDRestriction"
              ],
              "type": "string"
            }
          },
          "gstOption": {
            "enum": [
              "na",
              "inc",
              "ex"
            ],
            "type": "string"
          },
          "priceType": {
            "enum": [
              "gross",
              "net"
            ],
            "type": "string"
          },
          "priceUnit": {
            "enum": [
              "totalAmount",
              "perSqm"
            ],
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "priceFrom": {
            "type": "integer",
            "format": "int32"
          },
          "priceTo": {
            "type": "integer",
            "format": "int32"
          },
          "pricePrefix": {
            "type": "string"
          },
          "canDisplayPrice": {
            "type": "boolean"
          },
          "displayPrice": {
            "type": "string"
          },
          "bond": {
            "type": "number",
            "format": "double"
          },
          "priceReduction": {
            "type": "boolean"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "Price",
            "PriceFrom",
            "PriceTo",
            "PricePrefix",
            "CanDisplayPrice",
            "DisplayPrice",
            "Bond"
          ],
          "Detailed": [
            "Price",
            "PriceFrom",
            "PriceTo",
            "PricePrefix",
            "CanDisplayPrice",
            "DisplayPrice",
            "Bond"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingProviderDetails": {
        "type": "object",
        "properties": {
          "providerSystem": {
            "type": "string"
          },
          "providerAdID": {
            "type": "string"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingRentalDetails": {
        "type": "object",
        "properties": {
          "rentalMethod": {
            "enum": [
              "notStated",
              "rent",
              "share",
              "holiday",
              "lease"
            ],
            "type": "string"
          },
          "source": {
            "enum": [
              "internal",
              "external"
            ],
            "type": "string"
          },
          "leasedDate": {
            "type": "string",
            "format": "date-time"
          },
          "leasedPrice": {
            "type": "integer",
            "format": "int32"
          },
          "canDisplayPrice": {
            "type": "boolean"
          },
          "leasedMonths": {
            "type": "integer",
            "format": "int32"
          },
          "termOfLeaseFrom": {
            "type": "integer",
            "format": "int32"
          },
          "termOfLeaseTo": {
            "type": "integer",
            "format": "int32"
          },
          "leaseOutgoings": {
            "type": "integer",
            "format": "int32"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingSoldDetails": {
        "type": "object",
        "properties": {
          "soldAction": {
            "enum": [
              "notStated",
              "auction",
              "privateTreaty",
              "withdrawn",
              "soldPriorToAuction"
            ],
            "type": "string"
          },
          "source": {
            "enum": [
              "internal",
              "external"
            ],
            "type": "string"
          },
          "soldPrice": {
            "type": "integer",
            "format": "int32"
          },
          "governmentRecordedSoldPrice": {
            "type": "integer",
            "format": "int32"
          },
          "soldDate": {
            "type": "string",
            "format": "date-time"
          },
          "canDisplayPrice": {
            "type": "boolean"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "SoldAction",
            "Source",
            "SoldPrice",
            "SoldDate",
            "CanDisplayPrice"
          ],
          "Detailed": [
            "SoldAction",
            "Source",
            "SoldPrice",
            "SoldDate",
            "CanDisplayPrice"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingAuctionSchedule": {
        "type": "object",
        "properties": {
          "locationDescription": {
            "type": "string"
          },
          "openingDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "terms": {
            "type": "string"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingAuctionDetails": {
        "type": "object",
        "properties": {
          "auctionSchedule": {
            "$ref": "#/components/schemas/Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingAuctionSchedule"
          },
          "auctionedPrice": {
            "type": "integer",
            "format": "int32"
          },
          "auctionedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingTenderDetails": {
        "type": "object",
        "properties": {
          "tenderRecipientName": {
            "type": "string"
          },
          "tenderAddress": {
            "type": "string"
          },
          "tenderEndDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingTenantDetails": {
        "type": "object",
        "properties": {
          "leaseDateVariable": {
            "type": "boolean"
          },
          "leaseOptions": {
            "type": "string"
          },
          "tenantInfoTermOfLeaseFrom": {
            "type": "integer",
            "format": "int32"
          },
          "tenantInfoTermOfLeaseTo": {
            "type": "integer",
            "format": "int32"
          },
          "tenantName": {
            "type": "string"
          },
          "tenantRentDetails": {
            "type": "string"
          },
          "leaseStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "leaseEndDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingSaleDetails": {
        "type": "object",
        "properties": {
          "saleMethod": {
            "enum": [
              "notStated",
              "auction",
              "privateTreaty",
              "tender",
              "expressionOfInterest"
            ],
            "type": "string"
          },
          "soldDetails": {
            "$ref": "#/components/schemas/Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingSoldDetails"
          },
          "auctionDetails": {
            "$ref": "#/components/schemas/Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingAuctionDetails"
          },
          "tenderDetails": {
            "$ref": "#/components/schemas/Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingTenderDetails"
          },
          "tenantDetails": {
            "$ref": "#/components/schemas/Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingTenantDetails"
          },
          "annualReturn": {
            "type": "integer",
            "format": "int32"
          },
          "saleTerms": {
            "type": "string"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "SaleMethod",
            "SoldDetails",
            "AuctionDetails",
            "TenderDetails",
            "TenantDetails",
            "AnnualReturn",
            "SaleTerms"
          ],
          "Detailed": [
            "SaleMethod",
            "SoldDetails",
            "AuctionDetails",
            "TenderDetails",
            "TenantDetails",
            "AnnualReturn",
            "SaleTerms"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingBasicPrice": {
        "type": "object",
        "properties": {
          "from": {
            "type": "integer",
            "format": "int32"
          },
          "to": {
            "type": "integer",
            "format": "int32"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingPastSaleData": {
        "type": "object",
        "properties": {
          "unitNumber": {
            "type": "string"
          },
          "streetNumber": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "suburb": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "displayAddress": {
            "type": "string"
          },
          "dateOfSale": {
            "type": "string"
          },
          "soldPrice": {
            "type": "integer",
            "format": "int64"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingComparableData": {
        "type": "object",
        "properties": {
          "comparableProperty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingPastSaleData"
            }
          },
          "declarationText": {
            "type": "string"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingMedianPriceData": {
        "type": "object",
        "properties": {
          "priceType": {
            "enum": [
              "house",
              "apartmentUnitFlat",
              "vacantLand"
            ],
            "type": "string"
          },
          "suburb": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "medianPrice": {
            "type": "integer",
            "format": "int32"
          },
          "source": {
            "type": "string"
          },
          "sourceDateFrom": {
            "type": "string"
          },
          "sourceDateTo": {
            "type": "string"
          },
          "sourceCollectionDate": {
            "type": "string"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingStatementOfInformation": {
        "type": "object",
        "properties": {
          "estimatedPrice": {
            "$ref": "#/components/schemas/Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingBasicPrice"
          },
          "comparableData": {
            "$ref": "#/components/schemas/Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingComparableData"
          },
          "suburbMedianPrice": {
            "$ref": "#/components/schemas/Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingMedianPriceData"
          },
          "documentationUrl": {
            "type": "string"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Listing": {
        "type": "object",
        "properties": {
          "objective": {
            "enum": [
              "sale",
              "rent"
            ],
            "type": "string",
            "description": "The type of Advertisement"
          },
          "propertyTypes": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "accessoriesParts",
                "accommodationTourism",
                "accounting",
                "acreageSemiRural",
                "adult",
                "advertisingMarketing",
                "aerial",
                "aeronautical",
                "agedCare",
                "agricultural",
                "air",
                "aircraft",
                "alarms",
                "alcoholLiquor",
                "amusements",
                "animalRelated",
                "apartmentUnitFlat",
                "aquaculture",
                "aquaticMarineMarinaBerth",
                "artsCrafts",
                "autoElectrical",
                "automotive",
                "backpackerHostel",
                "bakery",
                "barsNightclubs",
                "beautyHealth",
                "beautyProducts",
                "beautySalon",
                "bikeAndMotorcycle",
                "blockOfUnits",
                "boardingKennels",
                "boatsMarineMarinaBerth",
                "bookkeeping",
                "brokerage",
                "builder",
                "buildingAndConstruction",
                "bus",
                "butcher",
                "cafeCoffeeShop",
                "car",
                "carBusTruck",
                "carDealership",
                "carRental",
                "carspace",
                "carWash",
                "caravanPark",
                "carpenter",
                "catering",
                "childCare",
                "civil",
                "cleaning",
                "cleaningAndMaintenance",
                "clinicalPractice",
                "clothingAccessories",
                "clothingFootwear",
                "communication",
                "communications",
                "computerIT",
                "computerAndInternet",
                "construction",
                "convenienceStore",
                "copyLaminate",
                "courier",
                "cropHarvesting",
                "customs",
                "dairyFarming",
                "deli",
                "dental",
                "detailing",
                "developmentLand",
                "developmentSite",
                "distributors",
                "drivingSchools",
                "duplex",
                "educationTraining",
                "educational",
                "electrical",
                "employmentRecruitment",
                "entertainment",
                "entertainmentTechnology",
                "export",
                "farm",
                "farming",
                "fertiliser",
                "finance",
                "financialServices",
                "fishingForestry",
                "floristNursery",
                "foodBeverage",
                "foodBeverageHospitality",
                "franchiseBusinessOpportunities",
                "freight",
                "fruitVegFreshProduce",
                "fruitPicking",
                "functionCentre",
                "furnitureTimber",
                "gambling",
                "gardenHousehold",
                "gardenNurseries",
                "gardening",
                "glassCeramic",
                "guestHouseBB",
                "hairdresser",
                "healthBeauty",
                "healthSpa",
                "hire",
                "homeGarden",
                "homeBased",
                "newHomeDesigns",
                "homewareHardware",
                "hospital",
                "hotel",
                "hotelLeisure",
                "house",
                "newHouseLand",
                "huntingTrap",
                "import",
                "importExportWholesale",
                "industrialManufacturing",
                "industrialWarehouse",
                "insemination",
                "insurance",
                "internet",
                "irrigationServices",
                "juiceBar",
                "landClearing",
                "newLand",
                "landscaping",
                "laundryDryCleaning",
                "legal",
                "leisureEntertainment",
                "limousineTaxi",
                "livestock",
                "international",
                "machinery",
                "machineryMetal",
                "managementRights",
                "manufacturers",
                "manufacturingEngineering",
                "marine",
                "massage",
                "mechanicalRepair",
                "media",
                "medical",
                "medicalConsulting",
                "medicalPractice",
                "miningEarthMoving",
                "mobileServices",
                "motel",
                "motorcycle",
                "musicRelated",
                "mustering",
                "nails",
                "naturalTherapies",
                "newApartments",
                "newsagency",
                "nursery",
                "nursingHome",
                "offices",
                "officeSupplies",
                "oilGas",
                "panelBeating",
                "paperPrinting",
                "parkingCarSpace",
                "penthouse",
                "pestRelated",
                "pharmacies",
                "plastic",
                "plumbing",
                "poolWater",
                "postOffices",
                "printPhoto",
                "professional",
                "propertyRealEstate",
                "rail",
                "recreationSport",
                "recruitment",
                "repair",
                "resort",
                "restaurant",
                "retail",
                "retailer",
                "retirement",
                "retirementVillage",
                "road",
                "rural",
                "ruralCommercialFarming",
                "scientific",
                "sea",
                "security",
                "semiDetached",
                "serviceStation",
                "services",
                "shearing",
                "showroomsBulkyGoods",
                "specialistFarm",
                "sportsComplexGym",
                "studio",
                "supermarket",
                "takeawayFood",
                "taxi",
                "terrace",
                "themePark",
                "tours",
                "townhouse",
                "training",
                "transportDistribution",
                "travel",
                "truck",
                "vacantLand",
                "vending",
                "villa",
                "water",
                "welding",
                "wholesale",
                "wholesalers",
                "woolClassing",
                "wreckers",
                "servicedOffices",
                "other",
                "alcoholGrocery",
                "cafeRestaurants",
                "discountStore",
                "ecoFriendly",
                "green",
                "grocery",
                "specialityRetail",
                "storage",
                "travelAgency",
                "varietyStore",
                "chickenShop",
                "seafoodShop",
                "deliCafe",
                "cropping",
                "viticulture",
                "mixedFarming",
                "grazing",
                "horticulture",
                "equine",
                "farmlet",
                "orchard",
                "ruralLifestyle",
                "onlineBusiness"
              ],
              "type": "string"
            },
            "description": "Types of the property e.g. House, Duplex, Apartment/Unit/Flat"
          },
          "status": {
            "enum": [
              "unknown",
              "archived",
              "underOffer",
              "sold",
              "leased",
              "newDevelopment",
              "recentlyUpdated",
              "new",
              "live",
              "pending"
            ],
            "type": "string",
            "description": "The current status of the property"
          },
          "saleMode": {
            "enum": [
              "buy",
              "rent",
              "share",
              "sold",
              "leased",
              "archived"
            ],
            "type": "string",
            "description": "Sale method of the property"
          },
          "channel": {
            "enum": [
              "residential",
              "commercial",
              "business"
            ],
            "type": "string",
            "description": "Listing channel"
          },
          "addressParts": {
            "$ref": "#/components/schemas/Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingAddressParts"
          },
          "advertiserIdentifiers": {
            "$ref": "#/components/schemas/Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingAdvertiserIdentifiers"
          },
          "apmIdentifiers": {
            "$ref": "#/components/schemas/Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingAustralianPropertyMonitorsIdentifiers"
          },
          "bathrooms": {
            "type": "number",
            "description": "Total number of bathrooms in the property",
            "format": "float"
          },
          "bedrooms": {
            "type": "number",
            "description": "Total number of bedrooms in the property; Studio apartments have a value of \\\"0\\\"",
            "format": "float"
          },
          "buildingArea": {
            "type": "string",
            "description": "The building area display value of the property e.g. 160 ha"
          },
          "buildingAreaSqm": {
            "type": "number",
            "description": "The properties building area in square meters",
            "format": "double"
          },
          "carspaces": {
            "type": "number",
            "description": "Total number of car spaces in the property.",
            "format": "float"
          },
          "dateAvailable": {
            "type": "string",
            "description": "The date the property is available",
            "format": "date-time"
          },
          "dateCreated": {
            "type": "string",
            "description": "The date/time the listing was created",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "description": "The date/time the listing had major update",
            "format": "date-time"
          },
          "dateMinorUpdated": {
            "type": "string",
            "description": "When minor update applied to listing",
            "format": "date-time"
          },
          "dateListed": {
            "type": "string",
            "description": "The date/time the listing was first listed",
            "format": "date-time"
          },
          "datePurged": {
            "type": "string",
            "description": "The date/time the listing was purged.",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "The long description of the property provided by the advertiser"
          },
          "devProjectId": {
            "type": "integer",
            "description": "The ID of the development project - null if no associated project",
            "format": "int32"
          },
          "energyEfficiencyRating": {
            "type": "integer",
            "description": "Energy Efficiency Rating value for ACT properties",
            "format": "int32"
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The property features specified by the advertiser"
          },
          "geoLocation": {
            "$ref": "#/components/schemas/Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingGeoLocation"
          },
          "headline": {
            "type": "string",
            "description": "The short description of the property provided by the advertiser"
          },
          "id": {
            "type": "integer",
            "description": "The identifier which uniquely identifies the listing",
            "format": "int32"
          },
          "inspectionDetails": {
            "$ref": "#/components/schemas/Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingPropertyInspections"
          },
          "isNewDevelopment": {
            "type": "boolean",
            "description": "Indicates whether the property is a new development"
          },
          "landArea": {
            "type": "string",
            "description": "The land area display string for the property e.g. 160 sqm"
          },
          "landAreaSqm": {
            "type": "number",
            "description": "The properties land area in square meters",
            "format": "double"
          },
          "media": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingListingMedia"
            },
            "description": "The media associated with the property provided by the advertiser"
          },
          "priceDetails": {
            "$ref": "#/components/schemas/Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingPriceDetails"
          },
          "propertyId": {
            "type": "string",
            "description": "The identifier which uniquely identifies the property being advertised.                   This may be empty if the Address of property is poorly described"
          },
          "providerDetails": {
            "$ref": "#/components/schemas/Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingProviderDetails"
          },
          "rentalDetails": {
            "$ref": "#/components/schemas/Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingRentalDetails"
          },
          "saleDetails": {
            "$ref": "#/components/schemas/Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingSaleDetails"
          },
          "isWithdrawn": {
            "type": "boolean",
            "description": "Indicates if the property has been withdrawn               from the market"
          },
          "seoUrl": {
            "type": "string",
            "description": "listing SEO Url"
          },
          "errorMessage": {
            "type": "string",
            "description": "In case of a mapping error is used to display error details"
          },
          "virtualTourUrl": {
            "type": "string",
            "description": "The Listing's Surroundpix Url."
          },
          "homepassEnabled": {
            "type": "boolean",
            "description": "If homepass is enabled for the listing (agency)"
          },
          "statementOfInformation": {
            "$ref": "#/components/schemas/Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingStatementOfInformation"
          },
          "numberOfDwellings": {
            "type": "integer",
            "description": "Number of dwellings for current listing",
            "format": "int32"
          },
          "highlights": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Highlight items for the listing"
          }
        },
        "description": "Represents a Property Listing",
        "x-data-access-level-info": {
          "Basic": [
            "Objective",
            "PropertyTypes",
            "Status",
            "SaleMode",
            "Channel",
            "AddressParts",
            "AdvertiserIdentifiers",
            "Bathrooms",
            "Bedrooms",
            "BuildingAreaSqm",
            "Carspaces",
            "DateAvailable",
            "DateUpdated",
            "DateListed",
            "Description",
            "DevProjectId",
            "EnergyEfficiencyRating",
            "Features",
            "GeoLocation",
            "Headline",
            "Id",
            "InspectionDetails",
            "IsNewDevelopment",
            "LandAreaSqm",
            "Media",
            "PriceDetails",
            "SaleDetails",
            "SeoUrl",
            "VirtualTourUrl",
            "StatementOfInformation",
            "Highlights"
          ],
          "Detailed": [
            "Objective",
            "PropertyTypes",
            "Status",
            "SaleMode",
            "Channel",
            "AddressParts",
            "AdvertiserIdentifiers",
            "ApmIdentifiers",
            "Bathrooms",
            "Bedrooms",
            "BuildingAreaSqm",
            "Carspaces",
            "DateAvailable",
            "DateUpdated",
            "DateListed",
            "Description",
            "DevProjectId",
            "EnergyEfficiencyRating",
            "Features",
            "GeoLocation",
            "Headline",
            "Id",
            "InspectionDetails",
            "IsNewDevelopment",
            "LandAreaSqm",
            "Media",
            "PriceDetails",
            "PropertyId",
            "RentalDetails",
            "SaleDetails",
            "SeoUrl",
            "VirtualTourUrl",
            "StatementOfInformation",
            "NumberOfDwellings",
            "Highlights"
          ],
          "Full": [
            "Objective",
            "PropertyTypes",
            "Status",
            "SaleMode",
            "Channel",
            "AddressParts",
            "AdvertiserIdentifiers",
            "ApmIdentifiers",
            "Bathrooms",
            "Bedrooms",
            "BuildingArea",
            "BuildingAreaSqm",
            "Carspaces",
            "DateAvailable",
            "DateCreated",
            "DateUpdated",
            "DateMinorUpdated",
            "DateListed",
            "DatePurged",
            "Description",
            "DevProjectId",
            "EnergyEfficiencyRating",
            "Features",
            "GeoLocation",
            "Headline",
            "Id",
            "InspectionDetails",
            "IsNewDevelopment",
            "LandArea",
            "LandAreaSqm",
            "Media",
            "PriceDetails",
            "PropertyId",
            "ProviderDetails",
            "RentalDetails",
            "SaleDetails",
            "IsWithdrawn",
            "SeoUrl",
            "ErrorMessage",
            "VirtualTourUrl",
            "HomepassEnabled",
            "StatementOfInformation",
            "NumberOfDwellings",
            "Highlights"
          ]
        }
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Statistics": {
        "type": "object",
        "properties": {
          "eventDate": {
            "type": "string",
            "description": "Date of statistics events",
            "format": "date-time"
          },
          "listingId": {
            "type": "integer",
            "description": "Domain Advertisement Id",
            "format": "int64",
            "readOnly": true
          },
          "totalListingViews": {
            "type": "integer",
            "description": "Total number of views for the listing details",
            "format": "int32",
            "readOnly": true
          },
          "totalPhotoViews": {
            "type": "integer",
            "description": "Total number of listing photo views",
            "format": "int32",
            "readOnly": true
          },
          "totalPhotoGalleryViews": {
            "type": "integer",
            "description": "Total number of listing photo gallery views",
            "format": "int32",
            "readOnly": true
          },
          "totalFloorplanViews": {
            "type": "integer",
            "description": "Total number of floorplan views",
            "format": "int32",
            "readOnly": true
          },
          "totalMapViews": {
            "type": "integer",
            "description": "Total number of address map views",
            "format": "int32",
            "readOnly": true
          },
          "totalVideoViews": {
            "type": "integer",
            "description": "Total number of vedio views",
            "format": "int32",
            "readOnly": true
          },
          "totalEbrochureViews": {
            "type": "integer",
            "description": "Total number of Ebrochure views",
            "format": "int32",
            "readOnly": true
          },
          "totalAgentDetailViews": {
            "type": "integer",
            "description": "Total number of agent detail views",
            "format": "int32",
            "readOnly": true
          },
          "totalShortlisted": {
            "type": "integer",
            "description": "Total number of times the listing was shortlisted",
            "format": "int32",
            "readOnly": true
          },
          "totalPrinted": {
            "type": "integer",
            "description": "Total number of time the listing detail was printed",
            "format": "int32",
            "readOnly": true
          },
          "totalAgentPhoneNumberReveals": {
            "type": "integer",
            "description": "Total number of times the agent phone number was revealed for contact",
            "format": "int32",
            "readOnly": true
          },
          "totalEnquiries": {
            "type": "integer",
            "description": "Total number of enquiries",
            "format": "int32",
            "readOnly": true
          },
          "totalEmailToFriend": {
            "type": "integer",
            "description": "Total number of times the listing link was emailed",
            "format": "int32",
            "readOnly": true
          },
          "totalSharedViaSocialMedia": {
            "type": "integer",
            "description": "Total number of shares via social media",
            "format": "int32",
            "readOnly": true
          },
          "totalInspectionTimeSaving": {
            "type": "integer",
            "description": "Total numnber of times when the inspection was saved to calendar",
            "format": "int32",
            "readOnly": true
          },
          "totalCallToAgentFromMobile": {
            "type": "integer",
            "description": "Total number of calls made to agent from inside the listing",
            "format": "int32",
            "readOnly": true
          },
          "percentageWebsiteViews": {
            "type": "number",
            "description": "Percentage of total views from website",
            "format": "double",
            "readOnly": true
          },
          "percentageMobileSiteViews": {
            "type": "number",
            "description": "Percentage of total views from mobile site",
            "format": "double",
            "readOnly": true
          },
          "percentageSmartPhoneViews": {
            "type": "number",
            "description": "Percentage of total views from smart phone apps",
            "format": "double",
            "readOnly": true
          },
          "percentageTabletViews": {
            "type": "number",
            "description": "Percentage of total views from tablets",
            "format": "double",
            "readOnly": true
          }
        },
        "description": "Listing statistics",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.AgencyService.v1.Model.AgencySubscriptionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "ChannelName",
            "SubscriptionName",
            "Id"
          ],
          "Detailed": [
            "ChannelName",
            "SubscriptionName",
            "Id"
          ],
          "Full": [
            "ChannelName",
            "SubscriptionName",
            "Id"
          ]
        }
      },
      "Domain.BookingService.v1.Model.ProductBundleContractDetailsResponse": {
        "type": "object",
        "properties": {
          "bundleDisplayName": {
            "type": "string"
          },
          "bundleDescription": {
            "type": "string"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "BundleDisplayName",
            "BundleDescription"
          ],
          "Detailed": [
            "BundleDisplayName",
            "BundleDescription"
          ],
          "Full": [
            "BundleDisplayName",
            "BundleDescription"
          ]
        }
      },
      "Domain.AgencyService.v2.Model.AgencySummary": {
        "type": "object",
        "properties": {
          "inSuburb": {
            "type": "boolean"
          },
          "querySuburb": {
            "type": "string"
          },
          "hasRecentlySold": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "suburb": {
            "type": "string"
          },
          "logoUrl": {
            "type": "string"
          },
          "baseUrl": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "telephone": {
            "type": "string"
          },
          "rentalTelephone": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "rentalEmail": {
            "type": "string"
          },
          "homePageSearchOptions": {
            "type": "string"
          },
          "accountType": {
            "type": "integer",
            "format": "int32"
          },
          "numberForSale": {
            "type": "integer",
            "format": "int32"
          },
          "numberForRent": {
            "type": "integer",
            "format": "int32"
          },
          "domainUrl": {
            "type": "string"
          },
          "showTabSoldLastYear": {
            "type": "boolean"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "InSuburb",
            "QuerySuburb",
            "HasRecentlySold",
            "Id",
            "Name",
            "Suburb",
            "LogoUrl",
            "BaseUrl",
            "Address1",
            "Address2",
            "Telephone",
            "RentalTelephone",
            "Mobile",
            "Fax",
            "State",
            "Description",
            "Email",
            "RentalEmail",
            "HomePageSearchOptions",
            "AccountType",
            "NumberForSale",
            "NumberForRent",
            "DomainUrl",
            "ShowTabSoldLastYear"
          ],
          "Detailed": [
            "InSuburb",
            "QuerySuburb",
            "HasRecentlySold",
            "Id",
            "Name",
            "Suburb",
            "LogoUrl",
            "BaseUrl",
            "Address1",
            "Address2",
            "Telephone",
            "RentalTelephone",
            "Mobile",
            "Fax",
            "State",
            "Description",
            "Email",
            "RentalEmail",
            "HomePageSearchOptions",
            "AccountType",
            "NumberForSale",
            "NumberForRent",
            "DomainUrl",
            "ShowTabSoldLastYear"
          ],
          "Full": [
            "InSuburb",
            "QuerySuburb",
            "HasRecentlySold",
            "Id",
            "Name",
            "Suburb",
            "LogoUrl",
            "BaseUrl",
            "Address1",
            "Address2",
            "Telephone",
            "RentalTelephone",
            "Mobile",
            "Fax",
            "State",
            "Description",
            "Email",
            "RentalEmail",
            "HomePageSearchOptions",
            "AccountType",
            "NumberForSale",
            "NumberForRent",
            "DomainUrl",
            "ShowTabSoldLastYear"
          ]
        }
      },
      "Domain.AgentSearch.v1.Model.AutoSuggestAgentResultDto": {
        "type": "object",
        "properties": {
          "agentId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "agencyName": {
            "type": "string"
          },
          "suburb": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "profileUrl": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.AgencyService.v1.Model.AgentDto": {
        "type": "object",
        "properties": {
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "agencyId": {
            "type": "integer",
            "format": "int32"
          },
          "agentId": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "photo": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "isActiveProfilePage": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "saleActive": {
            "type": "boolean"
          },
          "rentalActive": {
            "type": "boolean"
          },
          "secondaryEmail": {
            "type": "string"
          },
          "facebookUrl": {
            "type": "string"
          },
          "twitterUrl": {
            "type": "string"
          },
          "agentVideo": {
            "type": "string"
          },
          "profileText": {
            "type": "string"
          },
          "isHideSoldLeasedListings": {
            "type": "boolean"
          },
          "googlePlusUrl": {
            "type": "string"
          },
          "personalWebsiteUrl": {
            "type": "string"
          },
          "linkedInUrl": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "mugShotURL": {
            "type": "string"
          },
          "mugShotNew": {
            "type": "string"
          },
          "contactTypeCode": {
            "type": "integer",
            "format": "int32"
          },
          "receivesRequests": {
            "type": "boolean"
          },
          "creAgentVideoURL": {
            "type": "string"
          },
          "receiveScheduledReportEmail": {
            "type": "boolean"
          },
          "profileUrl": {
            "type": "string"
          },
          "jobPosition": {
            "type": "string"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "AgencyId",
            "AgentId",
            "FirstName",
            "Photo",
            "LastName",
            "Phone",
            "FacebookUrl",
            "TwitterUrl",
            "ProfileText",
            "GooglePlusUrl",
            "MugShotURL",
            "MugShotNew",
            "ContactTypeCode",
            "ProfileUrl",
            "JobPosition"
          ],
          "Detailed": [
            "AgencyId",
            "AgentId",
            "Email",
            "FirstName",
            "Mobile",
            "Photo",
            "LastName",
            "Phone",
            "SecondaryEmail",
            "FacebookUrl",
            "TwitterUrl",
            "AgentVideo",
            "ProfileText",
            "GooglePlusUrl",
            "PersonalWebsiteUrl",
            "LinkedInUrl",
            "MugShotURL",
            "MugShotNew",
            "ContactTypeCode",
            "CreAgentVideoURL",
            "ProfileUrl",
            "JobPosition"
          ],
          "Full": [
            "DateUpdated",
            "AgencyId",
            "AgentId",
            "Email",
            "FirstName",
            "Mobile",
            "Photo",
            "LastName",
            "IsActiveProfilePage",
            "Phone",
            "SaleActive",
            "RentalActive",
            "SecondaryEmail",
            "FacebookUrl",
            "TwitterUrl",
            "AgentVideo",
            "ProfileText",
            "IsHideSoldLeasedListings",
            "GooglePlusUrl",
            "PersonalWebsiteUrl",
            "LinkedInUrl",
            "Fax",
            "MugShotURL",
            "MugShotNew",
            "ContactTypeCode",
            "ReceivesRequests",
            "CreAgentVideoURL",
            "ReceiveScheduledReportEmail",
            "ProfileUrl",
            "JobPosition"
          ]
        }
      },
      "Domain.DemographicsService.v1.Model.DemographicsItemModel": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "composition": {
            "type": "string"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.DemographicsService.v1.Model.DemographicsModel": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.DemographicsService.v1.Model.DemographicsItemModel"
            }
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.DemographicsService.v1.Model.DemographicsResultsModel": {
        "type": "object",
        "properties": {
          "demographics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.DemographicsService.v1.Model.DemographicsModel"
            }
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.APMService.v2.Model.APMAPIModelsDisclaimerV2DisclaimerModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "imageurl": {
            "type": "string"
          },
          "authorityname": {
            "type": "string"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.Recipient": {
        "type": "object",
        "properties": {
          "recipientType": {
            "enum": [
              "primary",
              "secondary",
              "hidden"
            ],
            "type": "string",
            "description": "Type of recipient"
          },
          "address": {
            "type": "string",
            "description": "Delivery address ( email address, phone number etc. )              of the recipient"
          }
        },
        "description": "Recipient of an enquiry"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.RecipientDeliveryStatus": {
        "type": "object",
        "properties": {
          "deliveryStatus": {
            "enum": [
              "queued",
              "delivered",
              "failed"
            ],
            "type": "string",
            "description": "Delivery status of the enquiry for the recipient"
          },
          "recipient": {
            "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.Recipient"
          },
          "date": {
            "type": "string",
            "description": "Date of the Action. Delivery or failure",
            "format": "date-time"
          }
        },
        "description": "Used for reporting enquiry delivery statusses to recipients",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.Sender": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "Sender first name"
          },
          "lastName": {
            "type": "string",
            "description": "Sender lastname/surname"
          },
          "email": {
            "type": "string",
            "description": "Sender email address"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Sender phone number"
          },
          "postcode": {
            "pattern": "^\\d*$",
            "type": "string",
            "description": "Postcode of sender's location"
          }
        },
        "description": "Contains enquiry sender details",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.EnquiryReport": {
        "type": "object",
        "properties": {
          "recipientsDeliveryStatus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.RecipientDeliveryStatus"
            },
            "description": "Recipients of the delivery"
          },
          "deliveryMethod": {
            "enum": [
              "email",
              "sms"
            ],
            "type": "string",
            "description": "Delivery method of the enquiry"
          },
          "enquiryType": {
            "enum": [
              "listing",
              "devProject",
              "newDevLanding",
              "agencyProfile",
              "agentProfile",
              "contractRequest",
              "vendorEnquiry",
              "prePortalListing"
            ],
            "type": "string",
            "description": "Type of enquiry"
          },
          "referenceId": {
            "type": "integer",
            "description": "Listing identifier",
            "format": "int32"
          },
          "id": {
            "type": "string",
            "description": "Enquiry identifier"
          },
          "sender": {
            "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.Sender"
          },
          "subject": {
            "type": "string",
            "description": "Enquiry subject"
          },
          "message": {
            "type": "string",
            "description": "Enquiry message"
          },
          "metaData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "MetaData of the enquiry",
            "x-data-access-level-info": {
              "Basic": [
                "*"
              ],
              "Detailed": [
                "*"
              ],
              "Full": [
                "*"
              ]
            }
          }
        },
        "description": "An enquiry with delivery status information",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.Enquiry": {
        "type": "object",
        "properties": {
          "deliveryMethod": {
            "enum": [
              "email",
              "sms"
            ],
            "type": "string",
            "description": "Delivery method of the enquiry"
          },
          "enquiryType": {
            "enum": [
              "listing",
              "devProject",
              "newDevLanding",
              "agencyProfile",
              "agentProfile",
              "contractRequest",
              "vendorEnquiry",
              "prePortalListing"
            ],
            "type": "string",
            "description": "Type of enquiry"
          },
          "referenceId": {
            "type": "integer",
            "description": "Listing identifier",
            "format": "int32"
          },
          "id": {
            "type": "string",
            "description": "Enquiry identifier"
          },
          "sender": {
            "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Enquiries.Sender"
          },
          "subject": {
            "type": "string",
            "description": "Enquiry subject"
          },
          "message": {
            "type": "string",
            "description": "Enquiry message"
          },
          "metaData": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "MetaData of the enquiry",
            "x-data-access-level-info": {
              "Basic": [
                "*"
              ],
              "Detailed": [
                "*"
              ],
              "Full": [
                "*"
              ]
            }
          }
        },
        "description": "An enquiry with associated reference (eg. listing)"
      },
      "Domain.EnquiryService.v1.Model.GroupEnquiryServiceModelsEnquiryResponse": {
        "type": "object",
        "properties": {
          "s3Key": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "enquiryReceiptTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "warnings": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsSearchLocation": {
        "type": "object",
        "properties": {
          "state": {
            "enum": [
              "ACT",
              "NSW",
              "QLD",
              "VIC",
              "SA",
              "WA",
              "NT",
              "TAS"
            ],
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "area": {
            "type": "string"
          },
          "suburb": {
            "type": "string"
          },
          "postCode": {
            "type": "string"
          },
          "includeSurroundingSuburbs": {
            "type": "boolean"
          },
          "surroundingRadiusInMeters": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsSchoolCatchment": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          }
        }
      },
      "Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsCustomSortElement": {
        "type": "object",
        "properties": {
          "field": {
            "enum": [
              "AdId",
              "PromoLevelScore",
              "FreshnessLevel",
              "ProductBoost",
              "DateUpdated",
              "DateListed",
              "SuburbName",
              "PriceDisplayOption",
              "SoldDate",
              "Price",
              "EarliestInspectionOpenTime",
              "EarliestAuctionTime",
              "DateAvailable"
            ],
            "type": "string"
          },
          "direction": {
            "enum": [
              "Ascending",
              "Descending"
            ],
            "type": "string"
          }
        }
      },
      "Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsCustomSort": {
        "type": "object",
        "properties": {
          "elements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsCustomSortElement"
            }
          },
          "boostPrimarySuburbs": {
            "type": "boolean"
          }
        }
      },
      "Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsGeoPoint": {
        "type": "object",
        "properties": {
          "lat": {
            "type": "number",
            "format": "double"
          },
          "lon": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "Domain.SearchService.v2.Model.SystemNullableDomainSearchWebApiV2ModelsSortBy": {
        "type": "object",
        "properties": {
          "sortKey": {
            "enum": [
              "Default",
              "Suburb",
              "Price",
              "DateUpdated",
              "InspectionTime",
              "AuctionTime",
              "Proximity",
              "SoldDate",
              "DefaultThenDateUpdated",
              "DateAvailable",
              "DateListed"
            ],
            "type": "string"
          },
          "direction": {
            "enum": [
              "Ascending",
              "Descending"
            ],
            "type": "string"
          },
          "proximityTo": {
            "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsGeoPoint"
          }
        }
      },
      "Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsBox": {
        "type": "object",
        "properties": {
          "topLeft": {
            "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsGeoPoint"
          },
          "bottomRight": {
            "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsGeoPoint"
          }
        }
      },
      "Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsCircle": {
        "type": "object",
        "properties": {
          "center": {
            "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsGeoPoint"
          },
          "radiusInMeters": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsPolygon": {
        "type": "object",
        "properties": {
          "points": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsGeoPoint"
            }
          }
        }
      },
      "Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsGeoWindow": {
        "type": "object",
        "properties": {
          "box": {
            "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsBox"
          },
          "circle": {
            "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsCircle"
          },
          "polygon": {
            "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsPolygon"
          }
        }
      },
      "Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsTagQuery": {
        "type": "object",
        "properties": {
          "criteria": {
            "enum": [
              "Include",
              "Exclude"
            ],
            "type": "string"
          },
          "tag": {
            "type": "string"
          }
        }
      },
      "Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsSearchParameters": {
        "type": "object",
        "properties": {
          "listingType": {
            "enum": [
              "Sale",
              "Rent",
              "Share",
              "Sold",
              "NewHomes"
            ],
            "type": "string"
          },
          "propertyTypes": {
            "type": "array",
            "items": {
              "enum": [
                "AcreageSemiRural",
                "ApartmentUnitFlat",
                "Aquaculture",
                "BlockOfUnits",
                "CarSpace",
                "DairyFarming",
                "DevelopmentSite",
                "Duplex",
                "Farm",
                "FishingForestry",
                "NewHomeDesigns",
                "House",
                "NewHouseLand",
                "IrrigationServices",
                "NewLand",
                "Livestock",
                "NewApartments",
                "Penthouse",
                "RetirementVillage",
                "Rural",
                "SemiDetached",
                "SpecialistFarm",
                "Studio",
                "Terrace",
                "Townhouse",
                "VacantLand",
                "Villa",
                "Cropping",
                "Viticulture",
                "MixedFarming",
                "Grazing",
                "Horticulture",
                "Equine",
                "Farmlet",
                "Orchard",
                "RuralLifestyle"
              ],
              "type": "string"
            }
          },
          "propertyFeatures": {
            "type": "array",
            "items": {
              "enum": [
                "AirConditioning",
                "BuiltInWardrobes",
                "CableOrSatellite",
                "Ensuite",
                "Floorboards",
                "Gas",
                "InternalLaundry",
                "PetsAllowed",
                "SecureParking",
                "SwimmingPool",
                "Furnished",
                "GroundFloor",
                "WaterViews",
                "NorthFacing",
                "CityViews",
                "IndoorSpa",
                "Gym",
                "AlarmSystem",
                "Intercom",
                "BroadbandInternetAccess",
                "Bath",
                "Fireplace",
                "SeparateDiningRoom",
                "Heating",
                "Dishwasher",
                "Study",
                "TennisCourt",
                "Shed",
                "FullyFenced",
                "BalconyDeck",
                "GardenCourtyard",
                "OutdoorSpa",
                "DoubleGlazedWindows",
                "EnergyEfficientAppliances",
                "WaterEfficientAppliances",
                "WallCeilingInsulation",
                "RainwaterStorageTank",
                "GreywaterSystem",
                "WaterEfficientFixtures",
                "SolarHotWater",
                "SolarPanels"
              ],
              "type": "string"
            }
          },
          "listingAttributes": {
            "type": "array",
            "items": {
              "enum": [
                "HasPhotos",
                "HasPrice",
                "NotUpForAuction",
                "NotUnderContract",
                "MarkedAsNew"
              ],
              "type": "string"
            }
          },
          "propertyEstablishedType": {
            "enum": [
              "Any",
              "New",
              "Established"
            ],
            "type": "string"
          },
          "minBedrooms": {
            "type": "number",
            "format": "float"
          },
          "maxBedrooms": {
            "type": "number",
            "format": "float"
          },
          "minBathrooms": {
            "type": "number",
            "format": "float"
          },
          "maxBathrooms": {
            "type": "number",
            "format": "float"
          },
          "minCarspaces": {
            "type": "integer",
            "format": "int32"
          },
          "maxCarspaces": {
            "type": "integer",
            "format": "int32"
          },
          "minPrice": {
            "type": "integer",
            "format": "int32"
          },
          "maxPrice": {
            "type": "integer",
            "format": "int32"
          },
          "minLandArea": {
            "type": "integer",
            "format": "int32"
          },
          "maxLandArea": {
            "type": "integer",
            "format": "int32"
          },
          "advertiserIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "adIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "excludeAdIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsSearchLocation"
            }
          },
          "schoolCatchments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsSchoolCatchment"
            }
          },
          "locationTerms": {
            "type": "string"
          },
          "keywords": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "newDevOnly": {
            "type": "boolean"
          },
          "inspectionFrom": {
            "type": "string",
            "format": "date-time"
          },
          "inspectionTo": {
            "type": "string",
            "format": "date-time"
          },
          "auctionFrom": {
            "type": "string",
            "format": "date-time"
          },
          "auctionTo": {
            "type": "string",
            "format": "date-time"
          },
          "dateAvailableFrom": {
            "type": "string",
            "format": "date-time"
          },
          "dateAvailableTo": {
            "type": "string",
            "format": "date-time"
          },
          "ruralOnly": {
            "type": "boolean"
          },
          "excludePriceWithheld": {
            "type": "boolean"
          },
          "excludeDepositTaken": {
            "type": "boolean"
          },
          "topspotKeywords": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "customSort": {
            "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsCustomSort"
          },
          "sort": {
            "$ref": "#/components/schemas/Domain.SearchService.v2.Model.SystemNullableDomainSearchWebApiV2ModelsSortBy"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "geoWindow": {
            "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsGeoWindow"
          },
          "updatedSince": {
            "type": "string",
            "format": "date-time"
          },
          "listedSince": {
            "type": "string",
            "format": "date-time"
          },
          "includeInspectionAggregations": {
            "type": "boolean"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsTagQuery"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Domain.SearchService.v2.Model.DomainSearchContractsV2Contact": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "photoUrl": {
            "type": "string"
          }
        }
      },
      "Domain.SearchService.v2.Model.DomainSearchContractsV2Advertiser": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Agency",
              "Private"
            ],
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "logoUrl": {
            "type": "string"
          },
          "preferredColourHex": {
            "type": "string"
          },
          "bannerUrl": {
            "type": "string"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchContractsV2Contact"
            }
          }
        }
      },
      "Domain.SearchService.v2.Model.DomainSearchContractsV2PriceDetails": {
        "type": "object",
        "properties": {
          "price": {
            "type": "integer",
            "format": "int32"
          },
          "priceFrom": {
            "type": "integer",
            "format": "int32"
          },
          "priceTo": {
            "type": "integer",
            "format": "int32"
          },
          "displayPrice": {
            "type": "string"
          }
        }
      },
      "Domain.SearchService.v2.Model.DomainSearchContractsV2Media": {
        "type": "object",
        "properties": {
          "category": {
            "enum": [
              "Image"
            ],
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "Domain.SearchService.v2.Model.DomainSearchContractsV2PropertyDetails": {
        "type": "object",
        "properties": {
          "state": {
            "enum": [
              "ACT",
              "NSW",
              "QLD",
              "VIC",
              "SA",
              "WA",
              "NT",
              "TAS"
            ],
            "type": "string"
          },
          "features": {
            "type": "array",
            "items": {
              "enum": [
                "Unrecognised",
                "AirConditioning",
                "BuiltInWardrobes",
                "CableOrSatellite",
                "Ensuite",
                "Floorboards",
                "Gas",
                "InternalLaundry",
                "PetsAllowed",
                "SecureParking",
                "SwimmingPool",
                "Furnished",
                "GroundFloor",
                "WaterViews",
                "NorthFacing",
                "CityViews",
                "IndoorSpa",
                "Gym",
                "AlarmSystem",
                "Intercom",
                "BroadbandInternetAccess",
                "Bath",
                "Fireplace",
                "SeparateDiningRoom",
                "Heating",
                "Dishwasher",
                "Study",
                "TennisCourt",
                "Shed",
                "FullyFenced",
                "BalconyDeck",
                "GardenCourtyard",
                "OutdoorSpa",
                "DoubleGlazedWindows",
                "EnergyEfficientAppliances",
                "WaterEfficientAppliances",
                "WallCeilingInsulation",
                "RainwaterStorageTank",
                "GreywaterSystem",
                "WaterEfficientFixtures",
                "SolarHotWater",
                "SolarPanels"
              ],
              "type": "string"
            }
          },
          "propertyType": {
            "enum": [
              "Unknown",
              "AcreageSemiRural",
              "ApartmentUnitFlat",
              "Aquaculture",
              "BlockOfUnits",
              "CarSpace",
              "DairyFarming",
              "DevelopmentSite",
              "Duplex",
              "Farm",
              "FishingForestry",
              "NewHomeDesigns",
              "House",
              "NewHouseLand",
              "IrrigationServices",
              "NewLand",
              "Livestock",
              "NewApartments",
              "Penthouse",
              "RetirementVillage",
              "Rural",
              "SemiDetached",
              "SpecialistFarm",
              "Studio",
              "Terrace",
              "Townhouse",
              "VacantLand",
              "Villa",
              "Cropping",
              "Viticulture",
              "MixedFarming",
              "Grazing",
              "Horticulture",
              "Equine",
              "Farmlet",
              "Orchard",
              "RuralLifestyle"
            ],
            "type": "string"
          },
          "allPropertyTypes": {
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "AcreageSemiRural",
                "ApartmentUnitFlat",
                "Aquaculture",
                "BlockOfUnits",
                "CarSpace",
                "DairyFarming",
                "DevelopmentSite",
                "Duplex",
                "Farm",
                "FishingForestry",
                "NewHomeDesigns",
                "House",
                "NewHouseLand",
                "IrrigationServices",
                "NewLand",
                "Livestock",
                "NewApartments",
                "Penthouse",
                "RetirementVillage",
                "Rural",
                "SemiDetached",
                "SpecialistFarm",
                "Studio",
                "Terrace",
                "Townhouse",
                "VacantLand",
                "Villa",
                "Cropping",
                "Viticulture",
                "MixedFarming",
                "Grazing",
                "Horticulture",
                "Equine",
                "Farmlet",
                "Orchard",
                "RuralLifestyle"
              ],
              "type": "string"
            }
          },
          "bathrooms": {
            "type": "number",
            "format": "float"
          },
          "bedrooms": {
            "type": "number",
            "format": "float"
          },
          "carspaces": {
            "type": "integer",
            "format": "int32"
          },
          "unitNumber": {
            "type": "string"
          },
          "streetNumber": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "area": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "suburb": {
            "type": "string"
          },
          "suburbId": {
            "type": "integer",
            "format": "int32"
          },
          "postcode": {
            "type": "string"
          },
          "displayableAddress": {
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "format": "float"
          },
          "longitude": {
            "type": "number",
            "format": "float"
          },
          "mapCertainty": {
            "type": "integer",
            "format": "int32"
          },
          "landArea": {
            "type": "number",
            "format": "double"
          },
          "buildingArea": {
            "type": "number",
            "format": "double"
          },
          "onlyShowProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "displayAddressType": {
            "type": "string"
          },
          "isRural": {
            "type": "boolean"
          },
          "topSpotKeywords": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isNew": {
            "type": "boolean"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Domain.SearchService.v2.Model.DomainSearchContractsV2AuctionSchedule": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "auctionLocation": {
            "type": "string"
          }
        }
      },
      "Domain.SearchService.v2.Model.DomainSearchContractsV2Inspection": {
        "type": "object",
        "properties": {
          "openingTime": {
            "type": "string",
            "format": "date-time"
          },
          "closingTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Domain.SearchService.v2.Model.DomainSearchContractsV2InspectionSchedule": {
        "type": "object",
        "properties": {
          "byAppointment": {
            "type": "boolean"
          },
          "recurring": {
            "type": "boolean"
          },
          "times": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchContractsV2Inspection"
            }
          }
        }
      },
      "Domain.SearchService.v2.Model.DomainSearchContractsV2SoldData": {
        "type": "object",
        "properties": {
          "source": {
            "enum": [
              "Agency",
              "Apm"
            ],
            "type": "string"
          },
          "saleMethod": {
            "enum": [
              "NotStated",
              "SoldByAuction",
              "SoldByPrivateTreaty",
              "Withdrawn",
              "SoldPriorToAuction"
            ],
            "type": "string"
          },
          "soldDate": {
            "type": "string",
            "format": "date-time"
          },
          "soldPrice": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Domain.SearchService.v2.Model.DomainSearchContractsV2PropertyListing": {
        "type": "object",
        "properties": {
          "promoLevel": {
            "enum": [
              "Standard",
              "StandardPP",
              "Elite",
              "ElitePP",
              "PremiumPlus"
            ],
            "type": "string"
          },
          "listingType": {
            "enum": [
              "Sale",
              "Rent",
              "Share",
              "Sold",
              "NewHomes"
            ],
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "projectId": {
            "type": "integer",
            "format": "int32"
          },
          "advertiser": {
            "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchContractsV2Advertiser"
          },
          "priceDetails": {
            "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchContractsV2PriceDetails"
          },
          "media": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchContractsV2Media"
            }
          },
          "propertyDetails": {
            "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchContractsV2PropertyDetails"
          },
          "headline": {
            "type": "string"
          },
          "summaryDescription": {
            "type": "string"
          },
          "hasFloorplan": {
            "type": "boolean"
          },
          "hasVideo": {
            "type": "boolean"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "auctionSchedule": {
            "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchContractsV2AuctionSchedule"
          },
          "dateAvailable": {
            "type": "string",
            "format": "date-time"
          },
          "dateListed": {
            "type": "string",
            "format": "date-time"
          },
          "inspectionSchedule": {
            "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchContractsV2InspectionSchedule"
          },
          "soldData": {
            "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchContractsV2SoldData"
          },
          "listingSlug": {
            "type": "string"
          }
        }
      },
      "Domain.SearchService.v2.Model.DomainSearchContractsV2Project": {
        "type": "object",
        "properties": {
          "promoLevel": {
            "enum": [
              "Standard",
              "Premium"
            ],
            "type": "string"
          },
          "state": {
            "enum": [
              "ACT",
              "NSW",
              "QLD",
              "VIC",
              "SA",
              "WA",
              "NT",
              "TAS"
            ],
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "bannerUrl": {
            "type": "string"
          },
          "preferredColorHex": {
            "type": "string"
          },
          "logoUrl": {
            "type": "string"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "displayableAddress": {
            "type": "string"
          },
          "suburb": {
            "type": "string"
          },
          "suburbId": {
            "type": "integer",
            "format": "int32"
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "media": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchContractsV2Media"
            }
          },
          "projectSlug": {
            "type": "string"
          }
        }
      },
      "Domain.SearchService.v2.Model.DomainSearchContractsV2SearchResult": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "PropertyListing",
              "Project"
            ],
            "type": "string"
          },
          "listing": {
            "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchContractsV2PropertyListing"
          },
          "listings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchContractsV2PropertyListing"
            }
          },
          "project": {
            "$ref": "#/components/schemas/Domain.SearchService.v2.Model.DomainSearchContractsV2Project"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "Type",
            "Listing",
            "Listings",
            "Project"
          ],
          "Detailed": [
            "Type",
            "Listing",
            "Listings",
            "Project"
          ],
          "Full": [
            "Type",
            "Listing",
            "Listings",
            "Project"
          ]
        }
      },
      "Domain.ListingAdminService.v1.Model.Auction": {
        "type": "object",
        "properties": {
          "dateTime": {
            "type": "string",
            "description": "Date of the auction. format: yyyy-MM-ddTHH:mm:ss",
            "format": "date-time"
          },
          "location": {
            "type": "string",
            "description": "Optional. Venue for the Auction. String max 100 characters. If the Location is omitted, or included but empty, the Venue will default to \\\"On Site\\\"."
          },
          "url": {
            "type": "string",
            "description": "Optional on-line auction URL. Must be a valid URL and maximum 255 characters. If an empty string is received, the property will be re-set."
          }
        },
        "description": "Auction Details"
      },
      "Domain.ListingAdminService.v1.Model.ParkingDetails": {
        "type": "object",
        "properties": {
          "parkingType": {
            "enum": [
              "onSite",
              "onStreet",
              "noParking",
              "garage",
              "carport",
              "outdoor"
            ],
            "type": "string",
            "description": "Can have the value \\\"OnSite\\\", \\\"OnStreet\\\", \\\"NoParking\\\". Default: \\\"NoParking\\\""
          },
          "numberOfSpaces": {
            "type": "integer",
            "description": "Number of parking spaces on site",
            "format": "int32"
          }
        },
        "description": "Parking Details"
      },
      "Domain.ListingAdminService.v1.Model.ParkingInfo": {
        "type": "object",
        "properties": {
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ParkingDetails"
            },
            "description": "Details for available parking spaces"
          },
          "information": {
            "type": "string",
            "description": "Additional information regarding the parking condition"
          }
        },
        "description": "Parking Details"
      },
      "Domain.ListingAdminService.v1.Model.PropertyPdf": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "commercialPdf",
              "newDevBrochurePdf",
              "floorplanPdf",
              "devProjectPdf"
            ],
            "type": "string",
            "description": "Type of the PDF"
          },
          "url": {
            "type": "string",
            "description": "Url of the PDF"
          },
          "description": {
            "type": "string",
            "description": "Description of the PDF"
          }
        },
        "description": "PDF file related to the listing"
      },
      "Domain.ListingAdminService.v1.Model.PropertyMedia": {
        "type": "object",
        "properties": {
          "resourceType": {
            "enum": [
              "photograph",
              "floorPlan",
              "video",
              "virtualTour",
              "webLink"
            ],
            "type": "string",
            "description": "Type of the resource"
          },
          "url": {
            "type": "string",
            "description": "shows the place from where file can be downloaded"
          }
        },
        "description": "Resource related to the listing"
      },
      "Domain.ListingAdminService.v1.Model.GeoLocation": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "description": "Latitude",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "description": "Longitude",
            "format": "double"
          }
        },
        "description": "Contains geocoding of an address"
      },
      "Domain.ListingAdminService.v1.Model.Address": {
        "type": "object",
        "properties": {
          "displayOption": {
            "enum": [
              "unspecified",
              "fullAddress",
              "streetAndSuburb",
              "suburbOnly",
              "regionOnly",
              "areaOnly",
              "stateOnly"
            ],
            "type": "string",
            "description": "What granularity to display the properties location at"
          },
          "state": {
            "enum": [
              "nsw",
              "vic",
              "act",
              "sa",
              "wa",
              "tas",
              "qld",
              "nt"
            ],
            "type": "string",
            "description": "State"
          },
          "unitNumber": {
            "type": "string",
            "description": "Unit number for apartments, maximum 30 characters"
          },
          "street": {
            "type": "string",
            "description": "Street name, maximum 100 characters"
          },
          "suggestedGeoLocation": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.GeoLocation"
          },
          "streetNumber": {
            "type": "string",
            "description": "Street number, maximum 20 characters"
          },
          "suburb": {
            "type": "string",
            "description": "Suburb name , maximum 50 characters"
          },
          "postcode": {
            "type": "string",
            "description": "Postcode"
          }
        },
        "description": "Address structure for property"
      },
      "Domain.ListingAdminService.v1.Model.Area": {
        "type": "object",
        "properties": {
          "unit": {
            "enum": [
              "squareMetres",
              "acres",
              "hectares",
              "squareFeet",
              "squareYards",
              "squares"
            ],
            "type": "string",
            "description": "Unit of measure, defaults to SquareMetres if not provided."
          },
          "value": {
            "type": "number",
            "description": "Area. Will be rounded to 2 decimals.",
            "format": "double"
          },
          "from": {
            "type": "number",
            "description": "Minimum area",
            "format": "double"
          },
          "to": {
            "type": "number",
            "description": "Maximum area",
            "format": "double"
          }
        },
        "description": "Area information, Either single value or from and To must be provided"
      },
      "Domain.ListingAdminService.v1.Model.LandArea": {
        "type": "object",
        "properties": {
          "unit": {
            "enum": [
              "squareMetres",
              "acres",
              "hectares",
              "squareFeet",
              "squareYards",
              "squares"
            ],
            "type": "string",
            "description": "Unit of measure"
          },
          "value": {
            "type": "number",
            "description": "Area. Will be rounded to 2 decimals.",
            "format": "double"
          },
          "from": {
            "type": "number",
            "description": "Minimum area",
            "format": "double"
          },
          "to": {
            "type": "number",
            "description": "Maximum area",
            "format": "double"
          }
        },
        "description": "Area information, Either single value or from and To must be provided"
      },
      "Domain.ListingAdminService.v1.Model.ResidentialProperty": {
        "type": "object",
        "properties": {
          "propertyType": {
            "type": "array",
            "items": {
              "enum": [
                "acreageSemiRural",
                "apartmentUnitFlat",
                "aquaculture",
                "blockOfUnits",
                "carSpace",
                "dairyFarming",
                "developmentSite",
                "duplex",
                "farm",
                "fishingForestry",
                "newHomeDesigns",
                "house",
                "newHouseLand",
                "irrigationServices",
                "newLand",
                "livestock",
                "newApartments",
                "penthouse",
                "retirement",
                "rural",
                "semiDetached",
                "specialistFarm",
                "studio",
                "terrace",
                "townhouse",
                "vacantLand",
                "villa",
                "cropping",
                "viticulture",
                "mixedFarming",
                "grazing",
                "horticulture",
                "equine",
                "farmlet",
                "orchard",
                "ruralLifestyle"
              ],
              "type": "string"
            },
            "description": "'Retirement' requires at least one more property type to be specified with it (for example: \\\"Retirement\\\", \\\"ApartmentUnitFlat\\\") ['acreageSemiRural', 'apartmentUnitFlat', 'aquaculture', 'blockOfUnits', 'carSpace', 'dairyFarming', 'developmentSite', 'duplex', 'farm', 'fishingForestry', 'newHomeDesigns', 'house', 'newHouseLand', 'irrigationServices', 'newLand', 'livestock', 'newApartments', 'penthouse', 'retirement', 'rural', 'semiDetached', 'specialistFarm', 'studio', 'terrace', 'townhouse', 'vacantLand', 'villa', 'cropping', 'viticulture', 'mixedFarming', 'grazing', 'horticulture', 'equine', 'farmlet', 'orchard', 'ruralLifestyle']."
          },
          "bedRooms": {
            "type": "integer",
            "description": "Number of bedrooms",
            "format": "int32"
          },
          "bathRooms": {
            "type": "integer",
            "description": "Number of bathrooms",
            "format": "int32"
          },
          "parkingInfo": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ParkingInfo"
          },
          "energyEfficiencyRating": {
            "type": "number",
            "description": "Optional, although must be set for ACT dwellings for sale. Valid values range from 0 to 10 inclusive, in increments of 0.5",
            "format": "double"
          },
          "pdfs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.PropertyPdf"
            },
            "description": "List of PDF files related to the listing"
          },
          "isMarkedForLiveability": {
            "type": "boolean",
            "description": "Is the property liveability compliant"
          },
          "propertyName": {
            "type": "string",
            "description": "Name of the property up to 70 characters"
          },
          "location": {
            "type": "string",
            "description": "Short location information up to 30 character, e.g.: Greenhills Beach"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.PropertyMedia"
            },
            "description": "List of image files, photos or floor plans related to the listing."
          },
          "address": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.Address"
          },
          "area": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.Area"
          },
          "landArea": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.LandArea"
          }
        },
        "description": "Residential Property"
      },
      "Domain.ListingAdminService.v1.Model.BasicPrice": {
        "type": "object",
        "properties": {
          "from": {
            "type": "integer",
            "description": "Lowest price the property is expected to sell/rent for to set search price. For a fixed price, set this value the same as To",
            "format": "int32"
          },
          "to": {
            "type": "integer",
            "description": "Highest price the property is expected to sell/rent for to set search price.   For a fixed price, set this value the same as From",
            "format": "int32"
          }
        },
        "description": "Basic price information"
      },
      "Domain.ListingAdminService.v1.Model.PastSaleAddress": {
        "type": "object",
        "properties": {
          "state": {
            "enum": [
              "nsw",
              "vic",
              "act",
              "sa",
              "wa",
              "tas",
              "qld",
              "nt"
            ],
            "type": "string",
            "description": "State"
          },
          "unitNumber": {
            "type": "string",
            "description": "Unit number for apartments, maximum 30 characters"
          },
          "streetNumber": {
            "type": "string",
            "description": "Street number, maximum 20 characters"
          },
          "street": {
            "type": "string",
            "description": "Street name, maximum 100 characters"
          },
          "suburb": {
            "type": "string",
            "description": "Suburb name , maximum 50 characters"
          },
          "postcode": {
            "type": "string",
            "description": "Postcode"
          }
        },
        "description": "Address for past sold listing"
      },
      "Domain.ListingAdminService.v1.Model.PastSaleData": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.PastSaleAddress"
          },
          "dateOfSale": {
            "type": "string",
            "description": "Registered date of the sale",
            "format": "date-time"
          },
          "soldPrice": {
            "type": "integer",
            "description": "Price property has been sold",
            "format": "int32"
          }
        },
        "description": "Information for past property sales"
      },
      "Domain.ListingAdminService.v1.Model.ComparableData": {
        "type": "object",
        "properties": {
          "comparableProperty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.PastSaleData"
            },
            "description": "To be comparable, property must be Of a similar standard or condition to the property for sale  And Sold in the last six months and be within two kilometres of the property for sale (if the property for sale is in the Melbourne metropolitan area)  Or Sold in the last 18 months and be within five kilometres of the property for sale (if the property for sale is outside the Melbourne metropolitan area)."
          },
          "declarationText": {
            "type": "string",
            "description": "Text description should be provided   If you reasonably believe that there are less than three comparable sales within the prescribed period outlined above  for ComparableProperty {Domain.Listing.Admin.Model.Entities.ComparableData.ComparableProperty}  Required when no past sale property data   was provided"
          }
        },
        "description": "Information regarding past comparable   property sales that influenced the setting of teh estimationPrice"
      },
      "Domain.ListingAdminService.v1.Model.MedianPriceData": {
        "type": "object",
        "properties": {
          "priceType": {
            "enum": [
              "house",
              "apartmentUnitFlat",
              "vacantLand"
            ],
            "type": "string",
            "description": "Type of property this median price is based on ."
          },
          "suburb": {
            "type": "string",
            "description": "Name of the suburb median price is based on."
          },
          "postcode": {
            "type": "string",
            "description": "Postcode of the suburb"
          },
          "medianPrice": {
            "type": "integer",
            "description": "Median price for the suburb .",
            "format": "int32"
          },
          "source": {
            "type": "string",
            "description": "Where the Median Price come from"
          },
          "sourceDateFrom": {
            "type": "string",
            "description": "Median Price Source Data From Date",
            "format": "date-time"
          },
          "sourceDateTo": {
            "type": "string",
            "description": "Median Price Source Data To Date",
            "format": "date-time"
          },
          "declarationText": {
            "type": "string",
            "description": "Declaration text should be provided when no median price data available"
          }
        },
        "description": "Information regarding median house/unit price   for the suburb"
      },
      "Domain.ListingAdminService.v1.Model.StatementOfInformation": {
        "type": "object",
        "properties": {
          "estimatedPrice": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.BasicPrice"
          },
          "comparableData": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ComparableData"
          },
          "suburbMedianPrice": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.MedianPriceData"
          },
          "documentationUrl": {
            "type": "string",
            "description": "Link to the statement of information documentation file.  Must be a PDF file.  File should be less than 10 MB in size  The Statement of Information must be updated if there is a change in the indicative selling price."
          }
        },
        "description": "Statement of Information  Regarding sale listing"
      },
      "Domain.ListingAdminService.v1.Model.Price": {
        "type": "object",
        "properties": {
          "displayText": {
            "type": "string",
            "description": "When provided this will be shown instead of the price range, e.g.: \\\"Offers over $450K considered\\\""
          },
          "from": {
            "type": "integer",
            "description": "Lowest price the property is expected to sell/rent for to set search price. For a fixed price, set this value the same as To",
            "format": "int32"
          },
          "to": {
            "type": "integer",
            "description": "Highest price the property is expected to sell/rent for to set search price.   For a fixed price, set this value the same as From",
            "format": "int32"
          }
        },
        "description": "Pricing Information"
      },
      "Domain.ListingAdminService.v1.Model.Inspection": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "description": "Format: yyyy-mm-dd HH:mm:ss eg: 2015-10-20 13:30:00",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "description": "Format: yyyy-mm-dd HH:mm:ss, eg: 2015-10-20 14:30:00",
            "format": "date-time"
          },
          "repeat": {
            "type": "boolean",
            "description": "Specifies if the inspection is recurring weekly"
          }
        },
        "description": "Inspection times"
      },
      "Domain.ListingAdminService.v1.Model.InspectionDetails": {
        "type": "object",
        "properties": {
          "inspectionDescription": {
            "type": "string",
            "description": "Free text field for inspections"
          },
          "inspections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.Inspection"
            },
            "description": "Inspection times of the listing"
          }
        },
        "description": "Inspection details"
      },
      "Domain.ListingAdminService.v1.Model.Contact": {
        "type": "object",
        "properties": {
          "domainAgentId": {
            "type": "integer",
            "description": "Domain ID of the contact person at the agency",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "description": "First name. Maximum 50 characters."
          },
          "lastName": {
            "type": "string",
            "description": "Last name. Maximum 50 characters."
          },
          "phone": {
            "type": "string",
            "description": "Phone. Maximum 20 characters."
          },
          "fax": {
            "type": "string",
            "description": "Fax. Maximum 20 characters."
          },
          "mobile": {
            "type": "string",
            "description": "Mobile. Maximum 20 characters."
          },
          "email": {
            "type": "string",
            "description": "Email. Maximum 100 characters."
          },
          "receiveEmails": {
            "type": "boolean",
            "description": "Indicates whether the contact person should receive emails for the listing"
          }
        },
        "description": "Contact domain model"
      },
      "Domain.ListingAdminService.v1.Model.SupplementaryMetadata": {
        "type": "object",
        "properties": {
          "measurementUnit": {
            "enum": [
              "squareMetres",
              "hectares",
              "millimetres",
              "dse"
            ],
            "type": "string",
            "description": "Measurement unit"
          },
          "name": {
            "type": "string",
            "description": "Name"
          },
          "description": {
            "type": "string",
            "description": "Description"
          },
          "measurement": {
            "type": "number",
            "description": "Measurement",
            "format": "double"
          }
        },
        "description": "Supplementary metadata"
      },
      "Domain.ListingAdminService.v1.Model.ListingSupplementary": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name"
          },
          "description": {
            "type": "string",
            "description": "Description"
          },
          "types": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Types"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.SupplementaryMetadata"
            },
            "description": "Metadata"
          }
        },
        "description": "Listing supplementary"
      },
      "Domain.ListingAdminService.v1.Model.ResidentialListing": {
        "type": "object",
        "properties": {
          "lifeStyleType": {
            "enum": [
              "firstHome",
              "investment",
              "retirement",
              "seaChange",
              "treeChange",
              "youngFamilies"
            ],
            "type": "string",
            "description": "Lifestyle type"
          },
          "listingAction": {
            "enum": [
              "sale",
              "rent",
              "saleAndLease"
            ],
            "type": "string",
            "description": "Sale or Rent"
          },
          "contactPreference": {
            "enum": [
              "byPhone"
            ],
            "type": "string",
            "description": "Indicates the listing preferred contact method. Default by both phone and email if not provided."
          },
          "underOfferOrContract": {
            "type": "boolean",
            "description": "Set for Sale listings only"
          },
          "auction": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.Auction"
          },
          "bond": {
            "type": "integer",
            "description": "Optional.  Ignored for sale listings",
            "format": "int32"
          },
          "availableFrom": {
            "type": "string",
            "description": "Optional. Sets the Date from which a Rental or Share property is available. Date format: yyyy-mm-dd",
            "format": "date-time"
          },
          "propertyDetails": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ResidentialProperty"
          },
          "isNewDevelopment": {
            "type": "boolean",
            "description": "True if the property is a new development"
          },
          "statementOfInformation": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.StatementOfInformation"
          },
          "price": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.Price"
          },
          "domainAdId": {
            "type": "integer",
            "description": "Domain Advertisement Id, not applicable for creating new ads.  Mandatory when updating a listing that belongs to an agency that  is in the process of being migrated between listing providers.",
            "format": "int32"
          },
          "domainAgencyID": {
            "type": "integer",
            "description": "The Domain Agency Id number",
            "format": "int32"
          },
          "providerAdId": {
            "type": "string",
            "description": "External Advertisement Id of up to 50 characters will be stored.&lt;br /&gt;  This value is used to identify an Advertisement for updates and should be unique for listing provider.&lt;br /&gt;  This value is case-insensitive (meaning AAAA will update aaaa)."
          },
          "features": {
            "type": "string",
            "description": "Comma-separated list of features. 1000 characters in length. Select as appropriate or write your own.  INSIDE: Air conditioning, Ensuite, Floorboards, Indoor Spa, Gym, Alarm System, Intercom, Built in wardrobes, Furnished, Internal Laundry, Pets allowed, Cable or Satellite, Gas, Broadband internet access, Bath, Fireplace(s), Separate Dining Room, Heating, Dishwasher, Study.  OUTSIDE: Tennis Court, Secure Parking, Shed, Fully fenced, Balcony / Deck, Garden / Courtyard, Swimming Pool, Outdoor Spa.  LOCATION: Ground floor, Water Views, North Facing, City Views.  ECO FRIENDLY: Double glazed windows, Energy efficient appliances, Water efficient appliances, Wall / ceiling insulation, Rainwater storage tank, Greywater system, Water efficient fixtures, Solar hot water, Solar panels"
          },
          "description": {
            "type": "string",
            "description": "Description of the property.  6000 characters in length. The following HTML elements are permitted: &amp;lt;br /&amp;gt;, &amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;, &amp;amp;nbsp;. HTML must be well-formed.  Carriage Returns are interpreted as line breaks. Foreign characters must be HTML encoded, e.g., façade for façade.  Unicode characters which are unsupported by Latin-1 (ISO-8859-1 range from U+0080 to U+00FF), will be removed https://en.wikipedia.org/wiki/ISO/IEC_8859-1"
          },
          "summary": {
            "type": "string",
            "description": "'Headline' Any HTML stripped out.  If the Summary is less than 80 characters long then the description is concatenated to it and the total trimmed to 250 characters."
          },
          "inspectionDetails": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.InspectionDetails"
          },
          "media": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.PropertyMedia"
            },
            "description": "Links to VideoURL, virtual tour or weblink. Maximum length of media URLs is 255 characters."
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.Contact"
            },
            "description": "Minimum required attributes: First name, last name and E-mail.  If the DomainAgentId is provided, contact information will be based on the existing agent found for that id.  Otherwise first name, last name and email will be used to find the matching contact. A new contact will be created if no contact can be found."
          },
          "otherEnquiryEmail": {
            "type": "string",
            "description": "Sets an additional Email Address to which enquiries on the Listing will be sent"
          },
          "receiveEmailsToDefaultAddress": {
            "type": "boolean",
            "description": "Send email enquiries to the default address for this listing type"
          },
          "isRural": {
            "type": "boolean",
            "description": "True if the property is rural"
          },
          "supplementary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingSupplementary"
            },
            "description": "Rural attributes    *Improvements* (optional)    Available `types` (fixed list, optional):  * Machinery Shed  * Shearing Shed  * Workshop  * Shearers Quarters  * Silos  * Other Housing  * Managers Accommodation    *Fencing* (optional)    `description` (string, optional): free text fencing description, maximum 250 characters.    *Yards* (optional)    Available `types` (fixed list, optional):  * Sheep  * Cattle    *Homestead* (optional)    `description` (string, optional): description of the homestead and construction, maximum 250 characters.    `metadata` (optional)  * `area` (decimal, optional): homestead area in square metres.    Available `types` (fixed list, optional):  * Office  * Ensuite  * Tennis Court  * Mains Gas  * Floorboards  * Internal Laundry    *Water* (optional)    `description` (string, optional): water comments, maximum 250 characters.    Available `types` (fixed list, optional):  * Tank  * Well  * Reticulated  * Bores  * Springs  * Creeks  * Dams  * River    *Crops* (optional)    `description` (string, optional): description of the crops, maximum 250 characters.    `metadata` (optional)  * `croppedAnnually` (decimal, optional): average annual area cropped in hectares.  * `fallowAnnually` (decimal, optional): average annual fallow area in hectares.  * `pastures` (string, optional): description of pastures available, maximum 250 characters.    *Livestock* (optional)    `description` (string, optional): additional comments, maximum 250 characters.    `metadata` (optional)  * `capacity` (decimal, optional): property carrying capacity in DSE (unit of carry capacity).    Available `types` (fixed list, optional):  * Sheep  * Pigs  * Cattle  * Poultry  * Horses  * Exotic  * Goats  * Stud    *Inclusions* (optional)    `description` (string, optional): description of plant and machinery included in sale, maximum 250 characters.    `metadata` (optional)  * `livestock` (string, optional): description of livestock included in sale, maximum 250 characters.  * `crop` (string, optional): description of crops included in sale, maximum 250 characters.    *Irrigation* (optional)    `description` (string, optional): irrigation comments, maximum 250 characters    `metadata` (optional)  * `rainfall` (decimal, optional): annual rainfall in millimetres."
          }
        },
        "description": "Residential Listing"
      },
      "Domain.ListingAdminService.v1.Model.ListingResponse": {
        "type": "object",
        "properties": {
          "processStatus": {
            "enum": [
              "queued",
              "processing",
              "processed",
              "searchable",
              "failed",
              "error"
            ],
            "type": "string",
            "description": "Status of listing been processed"
          },
          "id": {
            "type": "string",
            "description": "The listing job Id.   This job will eventually be processed."
          },
          "agencyId": {
            "type": "integer",
            "description": "Agency Id from Domain.",
            "format": "int32"
          },
          "providerId": {
            "type": "string",
            "description": "Provider Id for the agency."
          },
          "providerAdId": {
            "type": "string",
            "description": "Listing identifier provided by CRM."
          },
          "versionId": {
            "type": "string",
            "description": "Version Id"
          }
        },
        "description": "Represent the listing job.",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.PriceSearch": {
        "type": "object",
        "properties": {
          "min": {
            "type": "integer",
            "description": "Minimum price. null - no minimum price limit",
            "format": "int32"
          },
          "max": {
            "type": "integer",
            "description": "Maximum price. null - no maximum price limit",
            "format": "int32"
          },
          "type": {
            "enum": [
              "totalAmount",
              "perSqm"
            ],
            "type": "string",
            "description": "Price type"
          }
        },
        "description": "Search criteria. Price"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.LocationSearch": {
        "type": "object",
        "properties": {
          "area": {
            "type": "string",
            "description": "Location area"
          },
          "postcode": {
            "type": "string",
            "description": "Location postcode"
          },
          "region": {
            "type": "string",
            "description": "Location region"
          },
          "state": {
            "enum": [
              "act",
              "nsw",
              "qld",
              "vic",
              "sa",
              "wa",
              "nt",
              "tas"
            ],
            "type": "string",
            "description": "State"
          },
          "street": {
            "type": "string",
            "description": "Street address"
          },
          "suburb": {
            "type": "string",
            "description": "Suburb"
          }
        },
        "description": "Search request location details"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.GeoPoint": {
        "type": "object",
        "properties": {
          "lat": {
            "type": "number",
            "description": "Location latitude",
            "format": "double"
          },
          "long": {
            "type": "number",
            "description": "Location longitude",
            "format": "double"
          }
        },
        "description": "Geographic coordinate"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.GeoWindow": {
        "type": "object",
        "properties": {
          "polygon": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.GeoPoint"
            },
            "description": "List of points making polygon"
          },
          "boundingBox": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.GeoPoint"
            },
            "description": "Bounding box. Not used"
          }
        },
        "description": "Polygon which specifies geographical area for listing search"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.ParkingSearch": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "onSite",
              "onStreet",
              "noParking"
            ],
            "type": "string",
            "description": "Parking type"
          },
          "carspaces": {
            "type": "integer",
            "description": "Minimum carspace count",
            "format": "int32"
          }
        },
        "description": "Listing search. Parking search criteria"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.SearchRequest": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "advertiserId": {
            "type": "integer",
            "description": "Agency ID",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "description": "Search results page size",
            "format": "int32"
          },
          "propertyTypes": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "accessoriesParts",
                "accommodationTourism",
                "accounting",
                "acreageSemiRural",
                "adult",
                "advertisingMarketing",
                "aerial",
                "aeronautical",
                "agedCare",
                "agricultural",
                "air",
                "aircraft",
                "alarms",
                "alcoholLiquor",
                "amusements",
                "animalRelated",
                "apartmentUnitFlat",
                "aquaculture",
                "aquaticMarineMarinaBerth",
                "artsCrafts",
                "autoElectrical",
                "automotive",
                "backpackerHostel",
                "bakery",
                "barsNightclubs",
                "beautyHealth",
                "beautyProducts",
                "beautySalon",
                "bedAndBreakfast",
                "bikeAndMotorcycle",
                "blockOfUnits",
                "boardingKennels",
                "boatsMarineMarinaBerth",
                "bookkeeping",
                "brokerage",
                "builder",
                "buildingAndConstruction",
                "bus",
                "butcher",
                "cafeCoffeeShop",
                "car",
                "carBusTruck",
                "carDealership",
                "carRental",
                "carSpace",
                "carWash",
                "caravanPark",
                "carpenter",
                "catering",
                "childCare",
                "civil",
                "cleaning",
                "cleaningAndMaintenance",
                "clinicalPractice",
                "clothingAccessories",
                "clothingFootwear",
                "communication",
                "communications",
                "computerIT",
                "computerAndInternet",
                "construction",
                "convenienceStore",
                "copyLaminate",
                "courier",
                "cropHarvesting",
                "customs",
                "dairyFarming",
                "deli",
                "dental",
                "detailing",
                "developmentLand",
                "developmentSite",
                "distributors",
                "drivingSchools",
                "duplex",
                "educationTraining",
                "educational",
                "electrical",
                "employmentRecruitment",
                "entertainment",
                "entertainmentTechnology",
                "export",
                "farm",
                "farming",
                "fertiliser",
                "finance",
                "financialServices",
                "fishingForestry",
                "floristNursery",
                "foodBeverage",
                "foodBeverageHospitality",
                "franchiseBusinessOpportunities",
                "freight",
                "fruitVegFreshProduce",
                "fruitPicking",
                "functionCentre",
                "furnitureTimber",
                "gambling",
                "gardenHousehold",
                "gardenNurseries",
                "gardening",
                "glassCeramic",
                "guestHouseBB",
                "guesthouse",
                "hairdresser",
                "healthBeauty",
                "healthSpa",
                "hire",
                "homeGarden",
                "homeBased",
                "newHomeDesigns",
                "homewareHardware",
                "hospital",
                "hotel",
                "hotelLeisure",
                "hotelMotelPub",
                "house",
                "newHouseLand",
                "huntingTrap",
                "import",
                "importExportWholesale",
                "industrialManufacturing",
                "industrialWarehouse",
                "insemination",
                "insurance",
                "internationalNewDevelopment",
                "internet",
                "irrigationServices",
                "juiceBar",
                "landClearing",
                "newLand",
                "landscaping",
                "laundryDryCleaning",
                "legal",
                "leisureEntertainment",
                "limousineTaxi",
                "livestock",
                "internationalCommercial",
                "machinery",
                "machineryMetal",
                "managementRights",
                "manufacturers",
                "manufacturingEngineering",
                "marine",
                "massage",
                "mechanicalRepair",
                "media",
                "medical",
                "medicalConsulting",
                "medicalPractice",
                "miningEarthMoving",
                "mobileServices",
                "motel",
                "motorcycle",
                "musicRelated",
                "mustering",
                "nails",
                "naturalTherapies",
                "newApartments",
                "newsagency",
                "nursery",
                "nursingHome",
                "offices",
                "officeSupplies",
                "oilGas",
                "onStreet",
                "panelBeating",
                "paperPrinting",
                "parkingCarSpace",
                "penthouse",
                "pestRelated",
                "pharmacies",
                "plastic",
                "plumbing",
                "poolWater",
                "postOffices",
                "printPhoto",
                "professional",
                "propertyRealEstate",
                "rail",
                "recreationSport",
                "recruitment",
                "repair",
                "resort",
                "restaurant",
                "retail",
                "retailer",
                "retirementVillage",
                "road",
                "rural",
                "ruralCommercialFarming",
                "scientific",
                "sea",
                "security",
                "semiDetached",
                "serviceStation",
                "serviced",
                "services",
                "shearing",
                "showroomsBulkyGoods",
                "specialistFarm",
                "sportsComplexGym",
                "studio",
                "supermarket",
                "takeawayFood",
                "taxi",
                "terrace",
                "themePark",
                "tours",
                "townhouse",
                "training",
                "transportDistribution",
                "travel",
                "truck",
                "vacantLand",
                "vending",
                "villa",
                "water",
                "welding",
                "wholesale",
                "wholesalers",
                "withShowroomWarehouse",
                "withinShoppingComplex",
                "woolClassing",
                "wreckers",
                "tattersalls",
                "servicedOffices",
                "other",
                "alcoholGrocery",
                "cafeRestaurant",
                "discountStore",
                "ecoFriendly",
                "green",
                "grocery",
                "specialityRetail",
                "storage",
                "travelAgency",
                "varietyStore",
                "franchiseNew",
                "business"
              ],
              "type": "string"
            },
            "description": "Listing property types"
          },
          "price": {
            "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.PriceSearch"
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.LocationSearch"
            },
            "description": "Location search criteria"
          },
          "keywords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Search listings by keyword"
          },
          "geoWindow": {
            "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.GeoWindow"
          },
          "landAreaMin": {
            "type": "integer",
            "description": "Minimum land area",
            "format": "int32"
          },
          "landAreaMax": {
            "type": "integer",
            "description": "Maximum land area",
            "format": "int32"
          },
          "buildingSizeMin": {
            "type": "integer",
            "description": "Minimum building area",
            "format": "int32"
          },
          "buildingSizeMax": {
            "type": "integer",
            "description": "Maximum building area",
            "format": "int32"
          },
          "searchMode": {
            "enum": [
              "forSale",
              "forLease",
              "sold",
              "leased"
            ],
            "type": "string",
            "description": "Search mode"
          },
          "occupancy": {
            "type": "string",
            "description": "Occupancy"
          },
          "sort": {
            "enum": [
              "default",
              "newestFirst",
              "cheapestTotalFirst",
              "cheapestPerSqmFirst",
              "mostExpensiveTotalFirst",
              "mostExpensivePerSqmFirst",
              "suburbAsc",
              "suburbDesc",
              "buildingSizeAsc",
              "buildingSizeDesc"
            ],
            "type": "string",
            "description": "Sorting order"
          },
          "saleType": {
            "enum": [
              "standardSale",
              "auction",
              "expressionOfInterest",
              "tender"
            ],
            "type": "string",
            "description": "Sale type"
          },
          "propertyTitle": {
            "enum": [
              "freehold",
              "strata",
              "noBuilding"
            ],
            "type": "string",
            "description": "Property title"
          },
          "parking": {
            "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.ParkingSearch"
          },
          "exclusionTypes": {
            "type": "array",
            "items": {
              "enum": [
                "surroundingSuburbs",
                "withoutPrice"
              ],
              "type": "string"
            },
            "description": "Exclusion Types"
          },
          "annualReturn": {
            "type": "integer",
            "description": "Minimum annual return (in percents)",
            "format": "int32"
          }
        },
        "description": "Listing search criteria"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.Ad": {
        "type": "object",
        "properties": {
          "adType": {
            "type": "string",
            "description": "Product type"
          },
          "url": {
            "type": "string",
            "description": "URL of property details page on CRE website"
          }
        },
        "description": "Listing details"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.AdvertiserImages": {
        "type": "object",
        "properties": {
          "agencyBannerImageUrl": {
            "type": "string",
            "description": "Agency branding banner image URL"
          },
          "agencyBannerWideImageUrl": {
            "type": "string",
            "description": "Not used"
          },
          "logoUrl": {
            "type": "string",
            "description": "Agency logo. Note: CRE has two logo sizes."
          }
        },
        "description": "Agency images (logos, banners)"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.PhoneNumber": {
        "type": "object",
        "properties": {
          "displayLabel": {
            "type": "string",
            "description": "Diplay label"
          },
          "type": {
            "type": "string",
            "description": "Type: \\\"fax\\\", \\\"mobile\\\", \\\"telephone\\\""
          },
          "number": {
            "type": "string",
            "description": "Phone number"
          }
        },
        "description": "Phone number details"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.Contact": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Agent identifier",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "description": "First name. Not available in CRE"
          },
          "lastName": {
            "type": "string",
            "description": "Last name. Not available in CRE"
          },
          "imageUrl": {
            "type": "string",
            "description": "Image URL"
          },
          "displayFullName": {
            "type": "string",
            "description": "Full name"
          },
          "phoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.PhoneNumber"
            },
            "description": "Phone numbers"
          },
          "emailAddress": {
            "type": "string",
            "description": "E-mail address"
          },
          "address": {
            "type": "string",
            "description": "Full address"
          }
        },
        "description": "Contact"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.Advertiser": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "agency address"
          },
          "id": {
            "type": "integer",
            "description": "Agency ID",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Agency Name"
          },
          "preferredColorHex": {
            "type": "string",
            "description": "Agency color"
          },
          "images": {
            "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.AdvertiserImages"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.Contact"
            },
            "description": "Agency contacts"
          },
          "isConjunctional": {
            "type": "boolean",
            "description": "Checks whether advertiser is conjunctional or not"
          }
        },
        "description": "Agency details"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.GeoLocation": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "description": "Latitude",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "description": "Longitude",
            "format": "double"
          }
        },
        "description": "Geographic coordinate"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.Media": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "description": "Not used",
            "format": "date-time"
          },
          "imageUrl": {
            "type": "string",
            "description": "Resource URL"
          },
          "mediaType": {
            "type": "string",
            "description": "Media type: \\\"image\\\", \\\"video\\\""
          },
          "type": {
            "type": "string",
            "description": "Type: \\\"youtube\\\", \\\"vimeo\\\", \\\"mp4\\\""
          },
          "videoUrl": {
            "type": "string",
            "description": "Video URL"
          }
        },
        "description": "Listing media"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.AddressComponents": {
        "type": "object",
        "properties": {
          "area": {
            "type": "string",
            "description": "Listing Area"
          },
          "district": {
            "type": "string",
            "description": "Not used"
          },
          "postcode": {
            "type": "string",
            "description": "Postcode"
          },
          "region": {
            "type": "string",
            "description": "Listing Region"
          },
          "stateShort": {
            "type": "string",
            "description": "AUS State. 2 or 3 characters"
          },
          "street": {
            "type": "string",
            "description": "Street address"
          },
          "streetNumber": {
            "type": "string",
            "description": "Street number"
          },
          "suburb": {
            "type": "string",
            "description": "Suburb"
          },
          "unitNumber": {
            "type": "string",
            "description": "Unit number"
          }
        },
        "description": "Address components"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.Metadata": {
        "type": "object",
        "properties": {
          "addressComponents": {
            "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.AddressComponents"
          }
        },
        "description": "Listing metadata"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.Listing": {
        "type": "object",
        "properties": {
          "ad": {
            "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.Ad"
          },
          "price": {
            "type": "string",
            "description": "Formatted listing price"
          },
          "advertiser": {
            "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.Advertiser"
          },
          "geoLocation": {
            "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.GeoLocation"
          },
          "propertyArea": {
            "type": "string",
            "description": "Building size"
          },
          "propertyType": {
            "type": "string",
            "description": "Property type"
          },
          "address": {
            "type": "string",
            "description": "Full address"
          },
          "headline": {
            "type": "string",
            "description": "Headline"
          },
          "hasVideo": {
            "type": "boolean",
            "description": "Has video?"
          },
          "media": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.Media"
            },
            "description": "Media resources for listing (images, video, floor plans)"
          },
          "auctionDate": {
            "type": "string",
            "description": "Auction date"
          },
          "id": {
            "type": "integer",
            "description": "AdID",
            "format": "int32"
          },
          "metadata": {
            "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Commercial.Metadata"
          },
          "carspaceCount": {
            "type": "integer",
            "description": "Car parking spaces count",
            "format": "int32"
          }
        },
        "description": "Listing details for univesal app",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.ListingAdminService.v1.Model.CommercialPrice": {
        "type": "object",
        "properties": {
          "priceUnitType": {
            "enum": [
              "totalAmount",
              "perSqm"
            ],
            "type": "string",
            "description": "Price Unit type. Can have the values \\\"TotalAmount\\\", \\\"PerSqm\\\". Default = \\\"TotalAmount\\\""
          },
          "priceType": {
            "enum": [
              "gross",
              "net"
            ],
            "type": "string",
            "description": "Type can have the values \\\"Gross\\\", \\\"Net\\\". Default \\\"Net\\\""
          },
          "gstOptionType": {
            "enum": [
              "na",
              "inc",
              "ex"
            ],
            "type": "string",
            "description": "GST Option Type. Can have the values \\\"NA\\\", \\\"Inc\\\", \\\"Ex\\\". Default = \\\"NA\\\""
          },
          "priceReduction": {
            "type": "boolean",
            "description": "Indicates if this property is under price reduction"
          },
          "displayText": {
            "type": "string",
            "description": "When provided this will be shown instead of the price range, e.g.: \\\"Offers over $450K considered\\\""
          },
          "from": {
            "type": "integer",
            "description": "Lowest price the property is expected to sell/rent for to set search price. For a fixed price, set this value the same as To",
            "format": "int32"
          },
          "to": {
            "type": "integer",
            "description": "Highest price the property is expected to sell/rent for to set search price.   For a fixed price, set this value the same as From",
            "format": "int32"
          }
        },
        "description": "Commercial component for price"
      },
      "Domain.ListingAdminService.v1.Model.Lease": {
        "type": "object",
        "properties": {
          "termOfLeaseFrom": {
            "type": "integer",
            "description": "Integer value of lease term range from",
            "format": "int32"
          },
          "termOfLeaseTo": {
            "type": "integer",
            "description": "Integer value of lease term range to",
            "format": "int32"
          },
          "leaseOutgoings": {
            "type": "integer",
            "description": "Outgoing cost of current lease",
            "format": "int32"
          }
        },
        "description": "Properties for lease listings"
      },
      "Domain.ListingAdminService.v1.Model.EOI": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "Street address, up to 100 characters"
          },
          "endDate": {
            "type": "string",
            "description": "End date of EOI",
            "format": "date-time"
          },
          "recipientName": {
            "type": "string",
            "description": "The recipient name of the EOI, up to 50 characters"
          }
        },
        "description": "Express of Interest"
      },
      "Domain.ListingAdminService.v1.Model.Tenant": {
        "type": "object",
        "properties": {
          "leaseStart": {
            "type": "string",
            "description": "The date on which the tenants lease began, or is due to begin.",
            "format": "date-time"
          },
          "leaseEnd": {
            "type": "string",
            "description": "The date on which the tenants lease is due to end",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "description": "Name of the current tenant of the property, up to 100 characters"
          },
          "rentalDetails": {
            "type": "string",
            "description": "Information regarding current rental, up to 100 characters"
          },
          "leaseOptions": {
            "type": "string",
            "description": "Leasing options available to a prospective tenant, up to 100 characters"
          },
          "tenantInfoTermOfLeaseFrom": {
            "type": "integer",
            "description": "The from range of the tenant's current lease",
            "format": "int32"
          },
          "tenantInfoTermOfLeaseTo": {
            "type": "integer",
            "description": "The to range of the tenant's current lease",
            "format": "int32"
          },
          "leaseDateVariable": {
            "type": "boolean",
            "description": "Is tenant lease date variable"
          }
        },
        "description": "Tenant Information"
      },
      "Domain.ListingAdminService.v1.Model.Tender": {
        "type": "object",
        "properties": {
          "recipientName": {
            "type": "string",
            "description": "The recipient name of the tender, up to 50 characters"
          },
          "address": {
            "type": "string",
            "description": "Street address, up to 100 characters."
          },
          "endDate": {
            "type": "string",
            "description": "Closing Date",
            "format": "date-time"
          }
        },
        "description": "Tender Information"
      },
      "Domain.ListingAdminService.v1.Model.SpecificUnitDetail": {
        "type": "object",
        "properties": {
          "occupancy": {
            "enum": [
              "tenanted",
              "vacant"
            ],
            "type": "string",
            "description": "Occupancy type"
          },
          "priceUnit": {
            "enum": [
              "totalAmount",
              "perSqm"
            ],
            "type": "string",
            "description": "Price unit type"
          },
          "name": {
            "type": "string",
            "description": "Unit number"
          },
          "size": {
            "type": "integer",
            "description": "Unit size",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "description": "Unit price",
            "format": "double"
          },
          "notes": {
            "type": "string",
            "description": "Additional notes"
          },
          "isSoldOrLeased": {
            "type": "boolean",
            "description": "Is it available?"
          },
          "leasePriceForSaleorLease": {
            "type": "number",
            "description": "Lease price for sale or lease",
            "format": "double"
          }
        },
        "description": "offered units details"
      },
      "Domain.ListingAdminService.v1.Model.CommercialAuction": {
        "type": "object",
        "properties": {
          "auctionTerms": {
            "type": "string",
            "description": "Terms for the auctions, up to 200 characters. Example: \\\"10% deposit, balance 60 days\\\""
          },
          "dateTime": {
            "type": "string",
            "description": "Date of the auction. format: yyyy-MM-ddTHH:mm:ss",
            "format": "date-time"
          },
          "location": {
            "type": "string",
            "description": "Optional. Venue for the Auction. String max 100 characters. If the Location is omitted, or included but empty, the Venue will default to \\\"On Site\\\"."
          },
          "url": {
            "type": "string",
            "description": "Optional on-line auction URL. Must be a valid URL and maximum 255 characters. If an empty string is received, the property will be re-set."
          }
        },
        "description": "Commercial Auction Details"
      },
      "Domain.ListingAdminService.v1.Model.Parking": {
        "type": "object",
        "properties": {
          "parkingType": {
            "enum": [
              "onSite",
              "onStreet",
              "noParking"
            ],
            "type": "string",
            "description": "Can have the value \\\"OnSite\\\", \\\"OnStreet\\\", \\\"NoParking\\\". Default \\\"NoParking\\\""
          },
          "numberOnSite": {
            "type": "integer",
            "description": "Number On Site",
            "format": "int32"
          },
          "information": {
            "type": "string",
            "description": "Additional information regarding the parking condition"
          }
        },
        "description": "Parking Details"
      },
      "Domain.ListingAdminService.v1.Model.CommercialProperty": {
        "type": "object",
        "properties": {
          "propertyType": {
            "type": "array",
            "items": {
              "enum": [
                "aquaculture",
                "dairyFarming",
                "developmentLand",
                "fishingForestry",
                "hotelLeisure",
                "industrialWarehouse",
                "irrigationServices",
                "livestock",
                "internationalCommercial",
                "medicalConsulting",
                "offices",
                "parkingCarSpace",
                "retail",
                "ruralCommercialFarming",
                "showroomsBulkyGoods",
                "servicedOffices",
                "other",
                "cropping",
                "viticulture",
                "mixedFarming",
                "grazing",
                "horticulture",
                "equine",
                "farmlet",
                "orchard",
                "ruralLifestyle"
              ],
              "type": "string"
            },
            "description": "Commercial property types ['aquaculture', 'dairyFarming', 'developmentLand', 'fishingForestry', 'hotelLeisure', 'industrialWarehouse', 'irrigationServices', 'livestock', 'internationalCommercial', 'medicalConsulting', 'offices', 'parkingCarSpace', 'retail', 'ruralCommercialFarming', 'showroomsBulkyGoods', 'servicedOffices', 'other', 'cropping', 'viticulture', 'mixedFarming', 'grazing', 'horticulture', 'equine', 'farmlet', 'orchard', 'ruralLifestyle']."
          },
          "buildingType": {
            "enum": [
              "whole",
              "part",
              "na"
            ],
            "type": "string",
            "description": "Building Type"
          },
          "parking": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.Parking"
          },
          "pdfs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.PropertyPdf"
            },
            "description": "List of PDF files related to the listing"
          },
          "isMarkedForLiveability": {
            "type": "boolean",
            "description": "Is the property liveability compliant"
          },
          "propertyName": {
            "type": "string",
            "description": "Name of the property up to 70 characters"
          },
          "location": {
            "type": "string",
            "description": "Short location information up to 30 character, e.g.: Greenhills Beach"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.PropertyMedia"
            },
            "description": "List of image files, photos or floor plans related to the listing."
          },
          "address": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.Address"
          },
          "area": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.Area"
          },
          "landArea": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.LandArea"
          }
        },
        "description": "Commercial Property"
      },
      "Domain.ListingAdminService.v1.Model.AgentContact": {
        "type": "object",
        "properties": {
          "agencyId": {
            "type": "integer",
            "description": "Conjunction agent's agency",
            "format": "int32"
          },
          "domainAgentId": {
            "type": "integer",
            "description": "Domain ID of the contact person at the agency",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "description": "First name. Maximum 50 characters."
          },
          "lastName": {
            "type": "string",
            "description": "Last name. Maximum 50 characters."
          },
          "phone": {
            "type": "string",
            "description": "Phone. Maximum 20 characters."
          },
          "fax": {
            "type": "string",
            "description": "Fax. Maximum 20 characters."
          },
          "mobile": {
            "type": "string",
            "description": "Mobile. Maximum 20 characters."
          },
          "email": {
            "type": "string",
            "description": "Email. Maximum 100 characters."
          },
          "receiveEmails": {
            "type": "boolean",
            "description": "Indicates whether the contact person should receive emails for the listing"
          }
        },
        "description": "Represents a agent or conjunction agent domain model  The only difference to normal contacts is agent contacts needs to have their agency specified"
      },
      "Domain.ListingAdminService.v1.Model.CommercialListing": {
        "type": "object",
        "properties": {
          "occupancyType": {
            "enum": [
              "tenanted",
              "vacant"
            ],
            "type": "string",
            "description": "Occupancy. Can be 'Tenanted', 'Vacant'"
          },
          "listingAction": {
            "enum": [
              "sale",
              "rent",
              "saleAndLease"
            ],
            "type": "string",
            "description": "Sale or Rent"
          },
          "contactPreference": {
            "enum": [
              "byPhone"
            ],
            "type": "string",
            "description": "Indicates the listing preferred contact method. Default by both phone and email if not provided."
          },
          "price": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.CommercialPrice"
          },
          "lease": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.Lease"
          },
          "eoi": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.EOI"
          },
          "tenant": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.Tenant"
          },
          "tender": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.Tender"
          },
          "annualReturn": {
            "type": "integer",
            "description": "Integer value of percentage return on this property or business.",
            "format": "int32"
          },
          "unitsOffered": {
            "type": "integer",
            "description": "Integer value of units offered for sale or lease",
            "format": "int32"
          },
          "unitDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.SpecificUnitDetail"
            },
            "description": "Units details"
          },
          "nabers": {
            "type": "number",
            "description": "The NABERS Rating is the energy efficiency rating that the property has been measured to have.   This rating is measured in increments of .5 and can range from 0 to 6.   The NABERS rating is required for spaces within office buildings of 1000 square metres or more.  For more information on the NABERS rating system please visit http://www.nabers.gov.au",
            "format": "double"
          },
          "saleTerms": {
            "type": "string",
            "description": "Information relating to aspects of the sale, such as required deposit, settlement time. Up to 50 characters, optional. Ignored for lease listings"
          },
          "auction": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.CommercialAuction"
          },
          "propertyDetails": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.CommercialProperty"
          },
          "conjunctionAgents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.AgentContact"
            },
            "description": "List of conjunction agents"
          },
          "highlights": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Highlight Items"
          },
          "underOfferOrContract": {
            "type": "boolean",
            "description": "Set for Sale listings only"
          },
          "domainAdId": {
            "type": "integer",
            "description": "Domain Advertisement Id, not applicable for creating new ads.  Mandatory when updating a listing that belongs to an agency that  is in the process of being migrated between listing providers.",
            "format": "int32"
          },
          "domainAgencyID": {
            "type": "integer",
            "description": "The Domain Agency Id number",
            "format": "int32"
          },
          "providerAdId": {
            "type": "string",
            "description": "External Advertisement Id of up to 50 characters will be stored.&lt;br /&gt;  This value is used to identify an Advertisement for updates and should be unique for listing provider.&lt;br /&gt;  This value is case-insensitive (meaning AAAA will update aaaa)."
          },
          "features": {
            "type": "string",
            "description": "Comma-separated list of features. 1000 characters in length. Select as appropriate or write your own.  INSIDE: Air conditioning, Ensuite, Floorboards, Indoor Spa, Gym, Alarm System, Intercom, Built in wardrobes, Furnished, Internal Laundry, Pets allowed, Cable or Satellite, Gas, Broadband internet access, Bath, Fireplace(s), Separate Dining Room, Heating, Dishwasher, Study.  OUTSIDE: Tennis Court, Secure Parking, Shed, Fully fenced, Balcony / Deck, Garden / Courtyard, Swimming Pool, Outdoor Spa.  LOCATION: Ground floor, Water Views, North Facing, City Views.  ECO FRIENDLY: Double glazed windows, Energy efficient appliances, Water efficient appliances, Wall / ceiling insulation, Rainwater storage tank, Greywater system, Water efficient fixtures, Solar hot water, Solar panels"
          },
          "description": {
            "type": "string",
            "description": "Description of the property.  6000 characters in length. The following HTML elements are permitted: &amp;lt;br /&amp;gt;, &amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;, &amp;amp;nbsp;. HTML must be well-formed.  Carriage Returns are interpreted as line breaks. Foreign characters must be HTML encoded, e.g., façade for façade.  Unicode characters which are unsupported by Latin-1 (ISO-8859-1 range from U+0080 to U+00FF), will be removed https://en.wikipedia.org/wiki/ISO/IEC_8859-1"
          },
          "summary": {
            "type": "string",
            "description": "'Headline' Any HTML stripped out.  If the Summary is less than 80 characters long then the description is concatenated to it and the total trimmed to 250 characters."
          },
          "inspectionDetails": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.InspectionDetails"
          },
          "media": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.PropertyMedia"
            },
            "description": "Links to VideoURL, virtual tour or weblink. Maximum length of media URLs is 255 characters."
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.Contact"
            },
            "description": "Minimum required attributes: First name, last name and E-mail.  If the DomainAgentId is provided, contact information will be based on the existing agent found for that id.  Otherwise first name, last name and email will be used to find the matching contact. A new contact will be created if no contact can be found."
          },
          "otherEnquiryEmail": {
            "type": "string",
            "description": "Sets an additional Email Address to which enquiries on the Listing will be sent"
          },
          "receiveEmailsToDefaultAddress": {
            "type": "boolean",
            "description": "Send email enquiries to the default address for this listing type"
          },
          "isRural": {
            "type": "boolean",
            "description": "True if the property is rural"
          },
          "supplementary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingSupplementary"
            },
            "description": "Rural attributes    *Improvements* (optional)    Available `types` (fixed list, optional):  * Machinery Shed  * Shearing Shed  * Workshop  * Shearers Quarters  * Silos  * Other Housing  * Managers Accommodation    *Fencing* (optional)    `description` (string, optional): free text fencing description, maximum 250 characters.    *Yards* (optional)    Available `types` (fixed list, optional):  * Sheep  * Cattle    *Homestead* (optional)    `description` (string, optional): description of the homestead and construction, maximum 250 characters.    `metadata` (optional)  * `area` (decimal, optional): homestead area in square metres.    Available `types` (fixed list, optional):  * Office  * Ensuite  * Tennis Court  * Mains Gas  * Floorboards  * Internal Laundry    *Water* (optional)    `description` (string, optional): water comments, maximum 250 characters.    Available `types` (fixed list, optional):  * Tank  * Well  * Reticulated  * Bores  * Springs  * Creeks  * Dams  * River    *Crops* (optional)    `description` (string, optional): description of the crops, maximum 250 characters.    `metadata` (optional)  * `croppedAnnually` (decimal, optional): average annual area cropped in hectares.  * `fallowAnnually` (decimal, optional): average annual fallow area in hectares.  * `pastures` (string, optional): description of pastures available, maximum 250 characters.    *Livestock* (optional)    `description` (string, optional): additional comments, maximum 250 characters.    `metadata` (optional)  * `capacity` (decimal, optional): property carrying capacity in DSE (unit of carry capacity).    Available `types` (fixed list, optional):  * Sheep  * Pigs  * Cattle  * Poultry  * Horses  * Exotic  * Goats  * Stud    *Inclusions* (optional)    `description` (string, optional): description of plant and machinery included in sale, maximum 250 characters.    `metadata` (optional)  * `livestock` (string, optional): description of livestock included in sale, maximum 250 characters.  * `crop` (string, optional): description of crops included in sale, maximum 250 characters.    *Irrigation* (optional)    `description` (string, optional): irrigation comments, maximum 250 characters    `metadata` (optional)  * `rainfall` (decimal, optional): annual rainfall in millimetres."
          }
        },
        "description": "Commercial Listing V1"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.LocationSearch": {
        "type": "object",
        "properties": {
          "area": {
            "type": "string",
            "description": "Location area"
          },
          "postcode": {
            "type": "string",
            "description": "Location postcode"
          },
          "region": {
            "type": "string",
            "description": "Location region"
          },
          "state": {
            "enum": [
              "act",
              "nsw",
              "qld",
              "vic",
              "sa",
              "wa",
              "nt",
              "tas"
            ],
            "type": "string",
            "description": "State"
          },
          "suburb": {
            "type": "string",
            "description": "Suburb"
          }
        },
        "description": "Search request location details"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.PriceSearch": {
        "type": "object",
        "properties": {
          "min": {
            "type": "integer",
            "description": "Minimum price. null - no minimum price limit",
            "format": "int32"
          },
          "max": {
            "type": "integer",
            "description": "Maximum price. null - no maximum price limit",
            "format": "int32"
          }
        },
        "description": "Search criteria. Price"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.SearchRequest": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "advertiserId": {
            "type": "integer",
            "description": "AdvertiserId e.g. An Agency ID",
            "format": "int32"
          },
          "propertyTypes": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "accessoriesParts",
                "accommodationTourism",
                "accounting",
                "acreageSemiRural",
                "adult",
                "advertisingMarketing",
                "aerial",
                "aeronautical",
                "agedCare",
                "agricultural",
                "air",
                "aircraft",
                "alarms",
                "alcoholLiquor",
                "amusements",
                "animalRelated",
                "apartmentUnitFlat",
                "aquaculture",
                "aquaticMarineMarinaBerth",
                "artsCrafts",
                "autoElectrical",
                "automotive",
                "backpackerHostel",
                "bakery",
                "barsNightclubs",
                "beautyHealth",
                "beautyProducts",
                "beautySalon",
                "bedAndBreakfast",
                "bikeAndMotorcycle",
                "blockOfUnits",
                "boardingKennels",
                "boatsMarineMarinaBerth",
                "bookkeeping",
                "brokerage",
                "builder",
                "buildingAndConstruction",
                "bus",
                "butcher",
                "cafeCoffeeShop",
                "car",
                "carBusTruck",
                "carDealership",
                "carRental",
                "carSpace",
                "carWash",
                "caravanPark",
                "carpenter",
                "catering",
                "childCare",
                "civil",
                "cleaning",
                "cleaningAndMaintenance",
                "clinicalPractice",
                "clothingAccessories",
                "clothingFootwear",
                "communication",
                "communications",
                "computerIT",
                "computerAndInternet",
                "construction",
                "convenienceStore",
                "copyLaminate",
                "courier",
                "cropHarvesting",
                "customs",
                "dairyFarming",
                "deli",
                "dental",
                "detailing",
                "developmentLand",
                "developmentSite",
                "distributors",
                "drivingSchools",
                "duplex",
                "educationTraining",
                "educational",
                "electrical",
                "employmentRecruitment",
                "entertainment",
                "entertainmentTechnology",
                "export",
                "farm",
                "farming",
                "fertiliser",
                "finance",
                "financialServices",
                "fishingForestry",
                "floristNursery",
                "foodBeverage",
                "foodBeverageHospitality",
                "franchiseBusinessOpportunities",
                "freight",
                "fruitVegFreshProduce",
                "fruitPicking",
                "functionCentre",
                "furnitureTimber",
                "gambling",
                "gardenHousehold",
                "gardenNurseries",
                "gardening",
                "glassCeramic",
                "guestHouseBB",
                "guesthouse",
                "hairdresser",
                "healthBeauty",
                "healthSpa",
                "hire",
                "homeGarden",
                "homeBased",
                "newHomeDesigns",
                "homewareHardware",
                "hospital",
                "hotel",
                "hotelLeisure",
                "hotelMotelPub",
                "house",
                "newHouseLand",
                "huntingTrap",
                "import",
                "importExportWholesale",
                "industrialManufacturing",
                "industrialWarehouse",
                "insemination",
                "insurance",
                "internationalNewDevelopment",
                "internet",
                "irrigationServices",
                "juiceBar",
                "landClearing",
                "newLand",
                "landscaping",
                "laundryDryCleaning",
                "legal",
                "leisureEntertainment",
                "limousineTaxi",
                "livestock",
                "internationalCommercial",
                "machinery",
                "machineryMetal",
                "managementRights",
                "manufacturers",
                "manufacturingEngineering",
                "marine",
                "massage",
                "mechanicalRepair",
                "media",
                "medical",
                "medicalConsulting",
                "medicalPractice",
                "miningEarthMoving",
                "mobileServices",
                "motel",
                "motorcycle",
                "musicRelated",
                "mustering",
                "nails",
                "naturalTherapies",
                "newApartments",
                "newsagency",
                "nursery",
                "nursingHome",
                "offices",
                "officeSupplies",
                "oilGas",
                "onStreet",
                "panelBeating",
                "paperPrinting",
                "parkingCarSpace",
                "penthouse",
                "pestRelated",
                "pharmacies",
                "plastic",
                "plumbing",
                "poolWater",
                "postOffices",
                "printPhoto",
                "professional",
                "propertyRealEstate",
                "rail",
                "recreationSport",
                "recruitment",
                "repair",
                "resort",
                "restaurant",
                "retail",
                "retailer",
                "retirementVillage",
                "road",
                "rural",
                "ruralCommercialFarming",
                "scientific",
                "sea",
                "security",
                "semiDetached",
                "serviceStation",
                "serviced",
                "services",
                "shearing",
                "showroomsBulkyGoods",
                "specialistFarm",
                "sportsComplexGym",
                "studio",
                "supermarket",
                "takeawayFood",
                "taxi",
                "terrace",
                "themePark",
                "tours",
                "townhouse",
                "training",
                "transportDistribution",
                "travel",
                "truck",
                "vacantLand",
                "vending",
                "villa",
                "water",
                "welding",
                "wholesale",
                "wholesalers",
                "withShowroomWarehouse",
                "withinShoppingComplex",
                "woolClassing",
                "wreckers",
                "tattersalls",
                "servicedOffices",
                "other",
                "alcoholGrocery",
                "cafeRestaurant",
                "discountStore",
                "ecoFriendly",
                "green",
                "grocery",
                "specialityRetail",
                "storage",
                "travelAgency",
                "varietyStore",
                "franchiseNew",
                "business"
              ],
              "type": "string"
            },
            "description": "Listing property types"
          },
          "keywords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Search listings by keyword"
          },
          "brandId": {
            "type": "integer",
            "description": "The franchise brand ID",
            "format": "int32"
          },
          "franchiseGroupId": {
            "type": "integer",
            "description": "The franchise group ID. A franchise group owns multiple franchise brands.",
            "format": "int32"
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.LocationSearch"
            },
            "description": "Location search criteria"
          },
          "pageSize": {
            "type": "integer",
            "description": "Search results page size",
            "format": "int32"
          },
          "price": {
            "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.PriceSearch"
          },
          "sort": {
            "enum": [
              "default",
              "newestFirst",
              "lowTotalPriceFirst",
              "hightTotalPriceFirst",
              "suburbAsc",
              "suburbDesc"
            ],
            "type": "string",
            "description": "Sorting order"
          },
          "searchMode": {
            "enum": [
              "forSale",
              "franchiseOpportunity",
              "franchiseBrand"
            ],
            "type": "string",
            "description": "Search mode"
          }
        },
        "description": "Represents a CRE Business Search Request"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.Ad": {
        "type": "object",
        "properties": {
          "adType": {
            "type": "string",
            "description": "Product type"
          },
          "url": {
            "type": "string",
            "description": "URL of property details page on CRE website"
          }
        },
        "description": "Listing details"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.AdvertiserImages": {
        "type": "object",
        "properties": {
          "agencyBannerImageUrl": {
            "type": "string",
            "description": "Agency branding banner image URL"
          },
          "agencyBannerWideImageUrl": {
            "type": "string",
            "description": "Not used"
          },
          "logoUrl": {
            "type": "string",
            "description": "Agency logo. Note: CRE has two logo sizes."
          }
        },
        "description": "Agency images (logos, banners)"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.PhoneNumber": {
        "type": "object",
        "properties": {
          "displayLabel": {
            "type": "string",
            "description": "Diplay label"
          },
          "type": {
            "type": "string",
            "description": "Type: \\\"fax\\\", \\\"mobile\\\", \\\"telephone\\\""
          },
          "number": {
            "type": "string",
            "description": "Phone number"
          }
        },
        "description": "Phone number details"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.Contact": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Agent identifier",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "description": "First name. Not available in CRE"
          },
          "lastName": {
            "type": "string",
            "description": "Last name. Not available in CRE"
          },
          "imageUrl": {
            "type": "string",
            "description": "Image URL"
          },
          "displayFullName": {
            "type": "string",
            "description": "Full name"
          },
          "phoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.PhoneNumber"
            },
            "description": "Phone numbers"
          },
          "emailAddress": {
            "type": "string",
            "description": "E-mail address"
          },
          "address": {
            "type": "string",
            "description": "Full address"
          }
        },
        "description": "Contact"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.Advertiser": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "agency address"
          },
          "id": {
            "type": "integer",
            "description": "Agency ID",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Agency Name"
          },
          "preferredColorHex": {
            "type": "string",
            "description": "Agency color"
          },
          "images": {
            "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.AdvertiserImages"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.Contact"
            },
            "description": "Agency contacts"
          },
          "isConjunctional": {
            "type": "boolean",
            "description": "Checks whether advertiser is conjunctional or not"
          }
        },
        "description": "Agency details"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.GeoLocation": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "description": "Latitude",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "description": "Longitude",
            "format": "double"
          }
        },
        "description": "Geographic coordinate"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.Media": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "description": "Not used",
            "format": "date-time"
          },
          "imageUrl": {
            "type": "string",
            "description": "Resource URL"
          },
          "mediaType": {
            "type": "string",
            "description": "Media type: \\\"image\\\", \\\"video\\\""
          },
          "type": {
            "type": "string",
            "description": "Type: \\\"youtube\\\", \\\"vimeo\\\", \\\"mp4\\\""
          },
          "videoUrl": {
            "type": "string",
            "description": "Video URL"
          }
        },
        "description": "Listing media"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.AddressComponents": {
        "type": "object",
        "properties": {
          "area": {
            "type": "string",
            "description": "Listing Area"
          },
          "district": {
            "type": "string",
            "description": "Not used"
          },
          "postcode": {
            "type": "string",
            "description": "Postcode"
          },
          "region": {
            "type": "string",
            "description": "Listing Region"
          },
          "stateShort": {
            "type": "string",
            "description": "AUS State. 2 or 3 characters"
          },
          "street": {
            "type": "string",
            "description": "Street address"
          },
          "streetNumber": {
            "type": "string",
            "description": "Street number"
          },
          "suburb": {
            "type": "string",
            "description": "Suburb"
          },
          "unitNumber": {
            "type": "string",
            "description": "Unit number"
          }
        },
        "description": "Address components"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.Metadata": {
        "type": "object",
        "properties": {
          "addressComponents": {
            "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.AddressComponents"
          }
        },
        "description": "Listing metadata"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.Listing": {
        "type": "object",
        "properties": {
          "ad": {
            "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.Ad"
          },
          "price": {
            "type": "string",
            "description": "Formatted listing price"
          },
          "advertiser": {
            "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.Advertiser"
          },
          "geoLocation": {
            "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.GeoLocation"
          },
          "propertyArea": {
            "type": "string",
            "description": "Building size"
          },
          "propertyType": {
            "type": "string",
            "description": "Property type"
          },
          "address": {
            "type": "string",
            "description": "Full address"
          },
          "headline": {
            "type": "string",
            "description": "Headline"
          },
          "hasVideo": {
            "type": "boolean",
            "description": "Has video?"
          },
          "media": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.Media"
            },
            "description": "Media resources for listing (images, video, floor plans)"
          },
          "auctionDate": {
            "type": "string",
            "description": "Auction date"
          },
          "id": {
            "type": "integer",
            "description": "AdID",
            "format": "int32"
          },
          "metadata": {
            "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.Metadata"
          },
          "carspaceCount": {
            "type": "integer",
            "description": "Car parking spaces count",
            "format": "int32"
          }
        },
        "description": "Listing details for univesal app",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.ListingAdminService.v1.Model.BusinessProperty": {
        "type": "object",
        "properties": {
          "propertyType": {
            "type": "array",
            "items": {
              "enum": [
                "accessoriesParts",
                "accommodationTourism",
                "accounting",
                "adult",
                "advertisingMarketing",
                "aerial",
                "aeronautical",
                "agedCare",
                "agricultural",
                "air",
                "aircraft",
                "alarms",
                "alcoholLiquor",
                "amusements",
                "animalRelated",
                "aquaculture",
                "aquaticMarineMarinaBerth",
                "artsCrafts",
                "autoElectrical",
                "automotive",
                "backpackerHostel",
                "bakery",
                "barsNightclubs",
                "beautyHealth",
                "beautyProducts",
                "beautySalon",
                "bikeAndMotorcycle",
                "boardingKennels",
                "boatsMarineMarinaBerth",
                "bookkeeping",
                "brokerage",
                "builder",
                "buildingAndConstruction",
                "bus",
                "butcher",
                "cafeCoffeeShop",
                "car",
                "carBusTruck",
                "carDealership",
                "carRental",
                "carWash",
                "caravanPark",
                "carpenter",
                "catering",
                "childCare",
                "civil",
                "cleaning",
                "cleaningAndMaintenance",
                "clinicalPractice",
                "clothingAccessories",
                "clothingFootwear",
                "communication",
                "communications",
                "computerIT",
                "computerAndInternet",
                "construction",
                "convenienceStore",
                "copyLaminate",
                "courier",
                "cropHarvesting",
                "customs",
                "dairyFarming",
                "deli",
                "dental",
                "detailing",
                "distributors",
                "drivingSchools",
                "educationTraining",
                "educational",
                "electrical",
                "employmentRecruitment",
                "entertainment",
                "entertainmentTechnology",
                "export",
                "farming",
                "fertiliser",
                "finance",
                "financialServices",
                "fishingForestry",
                "floristNursery",
                "foodBeverage",
                "foodBeverageHospitality",
                "franchiseBusinessOpportunities",
                "freight",
                "fruitVegFreshProduce",
                "fruitPicking",
                "functionCentre",
                "furnitureTimber",
                "gambling",
                "gardenHousehold",
                "gardenNurseries",
                "gardening",
                "glassCeramic",
                "guestHouseBB",
                "hairdresser",
                "healthBeauty",
                "healthSpa",
                "hire",
                "homeGarden",
                "homeBased",
                "homewareHardware",
                "hospital",
                "hotel",
                "huntingTrap",
                "import",
                "importExportWholesale",
                "industrialManufacturing",
                "insemination",
                "insurance",
                "internet",
                "irrigationServices",
                "juiceBar",
                "landClearing",
                "landscaping",
                "laundryDryCleaning",
                "legal",
                "leisureEntertainment",
                "limousineTaxi",
                "livestock",
                "machinery",
                "machineryMetal",
                "managementRights",
                "manufacturers",
                "manufacturingEngineering",
                "marine",
                "massage",
                "mechanicalRepair",
                "media",
                "medical",
                "medicalPractice",
                "miningEarthMoving",
                "mobileServices",
                "motel",
                "motorcycle",
                "musicRelated",
                "mustering",
                "nails",
                "naturalTherapies",
                "newsagency",
                "nursery",
                "nursingHome",
                "officeSupplies",
                "oilGas",
                "panelBeating",
                "paperPrinting",
                "parkingCarSpace",
                "pestRelated",
                "pharmacies",
                "plastic",
                "plumbing",
                "poolWater",
                "postOffices",
                "printPhoto",
                "professional",
                "propertyRealEstate",
                "rail",
                "recreationSport",
                "recruitment",
                "repair",
                "resort",
                "restaurant",
                "retail",
                "retailer",
                "retirement",
                "retirementVillage",
                "road",
                "rural",
                "scientific",
                "sea",
                "security",
                "serviceStation",
                "services",
                "shearing",
                "sportsComplexGym",
                "supermarket",
                "takeawayFood",
                "taxi",
                "themePark",
                "tours",
                "training",
                "transportDistribution",
                "travel",
                "truck",
                "vending",
                "water",
                "welding",
                "wholesale",
                "wholesalers",
                "woolClassing",
                "wreckers",
                "alcoholGrocery",
                "cafeRestaurants",
                "discountStore",
                "ecoFriendly",
                "green",
                "grocery",
                "specialityRetail",
                "storage",
                "travelAgency",
                "varietyStore",
                "chickenShop",
                "seafoodShop",
                "deliCafe",
                "cropping",
                "viticulture",
                "grazing",
                "horticulture",
                "equine",
                "farmlet",
                "orchard",
                "ruralLifestyle",
                "onlineBusiness"
              ],
              "type": "string"
            },
            "description": "Business property types ['accessoriesParts', 'accommodationTourism', 'accounting', 'adult', 'advertisingMarketing', 'aerial', 'aeronautical', 'agedCare', 'agricultural', 'air', 'aircraft', 'alarms', 'alcoholLiquor', 'amusements', 'animalRelated', 'aquaculture', 'aquaticMarineMarinaBerth', 'artsCrafts', 'autoElectrical', 'automotive', 'backpackerHostel', 'bakery', 'barsNightclubs', 'beautyHealth', 'beautyProducts', 'beautySalon', 'bikeAndMotorcycle', 'boardingKennels', 'boatsMarineMarinaBerth', 'bookkeeping', 'brokerage', 'builder', 'buildingAndConstruction', 'bus', 'butcher', 'cafeCoffeeShop', 'car', 'carBusTruck', 'carDealership', 'carRental', 'carWash', 'caravanPark', 'carpenter', 'catering', 'childCare', 'civil', 'cleaning', 'cleaningAndMaintenance', 'clinicalPractice', 'clothingAccessories', 'clothingFootwear', 'communication', 'communications', 'computerIT', 'computerAndInternet', 'construction', 'convenienceStore', 'copyLaminate', 'courier', 'cropHarvesting', 'customs', 'dairyFarming', 'deli', 'dental', 'detailing', 'distributors', 'drivingSchools', 'educationTraining', 'educational', 'electrical', 'employmentRecruitment', 'entertainment', 'entertainmentTechnology', 'export', 'farming', 'fertiliser', 'finance', 'financialServices', 'fishingForestry', 'floristNursery', 'foodBeverage', 'foodBeverageHospitality', 'franchiseBusinessOpportunities', 'freight', 'fruitVegFreshProduce', 'fruitPicking', 'functionCentre', 'furnitureTimber', 'gambling', 'gardenHousehold', 'gardenNurseries', 'gardening', 'glassCeramic', 'guestHouseBB', 'hairdresser', 'healthBeauty', 'healthSpa', 'hire', 'homeGarden', 'homeBased', 'homewareHardware', 'hospital', 'hotel', 'huntingTrap', 'import', 'importExportWholesale', 'industrialManufacturing', 'insemination', 'insurance', 'internet', 'irrigationServices', 'juiceBar', 'landClearing', 'landscaping', 'laundryDryCleaning', 'legal', 'leisureEntertainment', 'limousineTaxi', 'livestock', 'machinery', 'machineryMetal', 'managementRights', 'manufacturers', 'manufacturingEngineering', 'marine', 'massage', 'mechanicalRepair', 'media', 'medical', 'medicalPractice', 'miningEarthMoving', 'mobileServices', 'motel', 'motorcycle', 'musicRelated', 'mustering', 'nails', 'naturalTherapies', 'newsagency', 'nursery', 'nursingHome', 'officeSupplies', 'oilGas', 'panelBeating', 'paperPrinting', 'parkingCarSpace', 'pestRelated', 'pharmacies', 'plastic', 'plumbing', 'poolWater', 'postOffices', 'printPhoto', 'professional', 'propertyRealEstate', 'rail', 'recreationSport', 'recruitment', 'repair', 'resort', 'restaurant', 'retail', 'retailer', 'retirement', 'retirementVillage', 'road', 'rural', 'scientific', 'sea', 'security', 'serviceStation', 'services', 'shearing', 'sportsComplexGym', 'supermarket', 'takeawayFood', 'taxi', 'themePark', 'tours', 'training', 'transportDistribution', 'travel', 'truck', 'vending', 'water', 'welding', 'wholesale', 'wholesalers', 'woolClassing', 'wreckers', 'alcoholGrocery', 'cafeRestaurants', 'discountStore', 'ecoFriendly', 'green', 'grocery', 'specialityRetail', 'storage', 'travelAgency', 'varietyStore', 'chickenShop', 'seafoodShop', 'deliCafe', 'cropping', 'viticulture', 'grazing', 'horticulture', 'equine', 'farmlet', 'orchard', 'ruralLifestyle', 'onlineBusiness']."
          },
          "landArea": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.LandArea"
          },
          "parking": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.Parking"
          },
          "pdfs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.PropertyPdf"
            },
            "description": "List of PDF files related to the listing"
          },
          "isMarkedForLiveability": {
            "type": "boolean",
            "description": "Is the property liveability compliant"
          },
          "propertyName": {
            "type": "string",
            "description": "Name of the property up to 70 characters"
          },
          "location": {
            "type": "string",
            "description": "Short location information up to 30 character, e.g.: Greenhills Beach"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.PropertyMedia"
            },
            "description": "List of image files, photos or floor plans related to the listing."
          },
          "address": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.Address"
          },
          "area": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.Area"
          }
        },
        "description": "Business Property"
      },
      "Domain.ListingAdminService.v1.Model.LeaseHoldDetail": {
        "type": "object",
        "properties": {
          "leaseholdRentPeriod": {
            "enum": [
              "perMonth",
              "perAnnum"
            ],
            "type": "string",
            "description": "Rent period for the existing lease, can be: ['perMonth', 'perAnnum']"
          },
          "leaseholdPriceUnit": {
            "enum": [
              "totalAmount",
              "perSqm"
            ],
            "type": "string",
            "description": "Price unit for the existing lease, can be:  ['totalAmount', 'perSqm']"
          },
          "leaseholdTerm": {
            "type": "integer",
            "description": "Term of existing lease",
            "format": "int32"
          },
          "leaseholdStart": {
            "type": "string",
            "description": "Start of existing lease",
            "format": "date-time"
          },
          "leaseholdRent": {
            "type": "number",
            "description": "Rent amount for the existing lease",
            "format": "double"
          }
        },
        "description": "Contains additional details about a business listing"
      },
      "Domain.ListingAdminService.v1.Model.SaleInfo": {
        "type": "object",
        "properties": {
          "annualSales": {
            "type": "number",
            "description": "Annual sales amount for the business",
            "format": "double"
          },
          "annualProfit": {
            "type": "number",
            "description": "Annual profit amount for the business",
            "format": "double"
          },
          "stockValue": {
            "type": "number",
            "description": "Stock value of the business",
            "format": "double"
          }
        },
        "description": "Contains details about a business sales info"
      },
      "Domain.ListingAdminService.v1.Model.BusinessListing": {
        "type": "object",
        "properties": {
          "listingAction": {
            "enum": [
              "sale",
              "rent",
              "saleAndLease"
            ],
            "type": "string",
            "description": "Sale or Rent"
          },
          "contactPreference": {
            "enum": [
              "byPhone"
            ],
            "type": "string",
            "description": "Indicates the listing preferred contact method. Default by both phone and email if not provided."
          },
          "underOfferOrContract": {
            "type": "boolean",
            "description": "Set for Sale listings only"
          },
          "nabers": {
            "type": "number",
            "description": "The NABERS Rating is the energy efficiency rating that the property has been measured to have.   This rating is measured in increments of .5 and can range from 0 to 6.   The NABERS rating is required for spaces within office buildings of 1000 square metres or more.  For more information on the NABERS rating system please visit http://www.nabers.gov.au",
            "format": "double"
          },
          "propertyDetails": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.BusinessProperty"
          },
          "leaseHoldDetails": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.LeaseHoldDetail"
          },
          "saleInfo": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.SaleInfo"
          },
          "freeholdCommercialAdId": {
            "type": "integer",
            "description": "The ad id of the commercial property with a freehold that the business belongs to.   Leasehold and freehold are mutually exclusive properties, only specify one",
            "format": "int32"
          },
          "price": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.Price"
          },
          "domainAdId": {
            "type": "integer",
            "description": "Domain Advertisement Id, not applicable for creating new ads.  Mandatory when updating a listing that belongs to an agency that  is in the process of being migrated between listing providers.",
            "format": "int32"
          },
          "domainAgencyID": {
            "type": "integer",
            "description": "The Domain Agency Id number",
            "format": "int32"
          },
          "providerAdId": {
            "type": "string",
            "description": "External Advertisement Id of up to 50 characters will be stored.&lt;br /&gt;  This value is used to identify an Advertisement for updates and should be unique for listing provider.&lt;br /&gt;  This value is case-insensitive (meaning AAAA will update aaaa)."
          },
          "features": {
            "type": "string",
            "description": "Comma-separated list of features. 1000 characters in length. Select as appropriate or write your own.  INSIDE: Air conditioning, Ensuite, Floorboards, Indoor Spa, Gym, Alarm System, Intercom, Built in wardrobes, Furnished, Internal Laundry, Pets allowed, Cable or Satellite, Gas, Broadband internet access, Bath, Fireplace(s), Separate Dining Room, Heating, Dishwasher, Study.  OUTSIDE: Tennis Court, Secure Parking, Shed, Fully fenced, Balcony / Deck, Garden / Courtyard, Swimming Pool, Outdoor Spa.  LOCATION: Ground floor, Water Views, North Facing, City Views.  ECO FRIENDLY: Double glazed windows, Energy efficient appliances, Water efficient appliances, Wall / ceiling insulation, Rainwater storage tank, Greywater system, Water efficient fixtures, Solar hot water, Solar panels"
          },
          "description": {
            "type": "string",
            "description": "Description of the property.  6000 characters in length. The following HTML elements are permitted: &amp;lt;br /&amp;gt;, &amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;, &amp;amp;nbsp;. HTML must be well-formed.  Carriage Returns are interpreted as line breaks. Foreign characters must be HTML encoded, e.g., façade for façade.  Unicode characters which are unsupported by Latin-1 (ISO-8859-1 range from U+0080 to U+00FF), will be removed https://en.wikipedia.org/wiki/ISO/IEC_8859-1"
          },
          "summary": {
            "type": "string",
            "description": "'Headline' Any HTML stripped out.  If the Summary is less than 80 characters long then the description is concatenated to it and the total trimmed to 250 characters."
          },
          "inspectionDetails": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.InspectionDetails"
          },
          "media": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.PropertyMedia"
            },
            "description": "Links to VideoURL, virtual tour or weblink. Maximum length of media URLs is 255 characters."
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.Contact"
            },
            "description": "Minimum required attributes: First name, last name and E-mail.  If the DomainAgentId is provided, contact information will be based on the existing agent found for that id.  Otherwise first name, last name and email will be used to find the matching contact. A new contact will be created if no contact can be found."
          },
          "otherEnquiryEmail": {
            "type": "string",
            "description": "Sets an additional Email Address to which enquiries on the Listing will be sent"
          },
          "receiveEmailsToDefaultAddress": {
            "type": "boolean",
            "description": "Send email enquiries to the default address for this listing type"
          },
          "isRural": {
            "type": "boolean",
            "description": "True if the property is rural"
          },
          "supplementary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ListingSupplementary"
            },
            "description": "Rural attributes    *Improvements* (optional)    Available `types` (fixed list, optional):  * Machinery Shed  * Shearing Shed  * Workshop  * Shearers Quarters  * Silos  * Other Housing  * Managers Accommodation    *Fencing* (optional)    `description` (string, optional): free text fencing description, maximum 250 characters.    *Yards* (optional)    Available `types` (fixed list, optional):  * Sheep  * Cattle    *Homestead* (optional)    `description` (string, optional): description of the homestead and construction, maximum 250 characters.    `metadata` (optional)  * `area` (decimal, optional): homestead area in square metres.    Available `types` (fixed list, optional):  * Office  * Ensuite  * Tennis Court  * Mains Gas  * Floorboards  * Internal Laundry    *Water* (optional)    `description` (string, optional): water comments, maximum 250 characters.    Available `types` (fixed list, optional):  * Tank  * Well  * Reticulated  * Bores  * Springs  * Creeks  * Dams  * River    *Crops* (optional)    `description` (string, optional): description of the crops, maximum 250 characters.    `metadata` (optional)  * `croppedAnnually` (decimal, optional): average annual area cropped in hectares.  * `fallowAnnually` (decimal, optional): average annual fallow area in hectares.  * `pastures` (string, optional): description of pastures available, maximum 250 characters.    *Livestock* (optional)    `description` (string, optional): additional comments, maximum 250 characters.    `metadata` (optional)  * `capacity` (decimal, optional): property carrying capacity in DSE (unit of carry capacity).    Available `types` (fixed list, optional):  * Sheep  * Pigs  * Cattle  * Poultry  * Horses  * Exotic  * Goats  * Stud    *Inclusions* (optional)    `description` (string, optional): description of plant and machinery included in sale, maximum 250 characters.    `metadata` (optional)  * `livestock` (string, optional): description of livestock included in sale, maximum 250 characters.  * `crop` (string, optional): description of crops included in sale, maximum 250 characters.    *Irrigation* (optional)    `description` (string, optional): irrigation comments, maximum 250 characters    `metadata` (optional)  * `rainfall` (decimal, optional): annual rainfall in millimetres."
          }
        },
        "description": "Business Listing"
      },
      "Domain.ListingAdminService.v1.Model.SoldDetails": {
        "type": "object",
        "properties": {
          "soldType": {
            "enum": [
              "auction",
              "privateTreaty",
              "priorToAuction"
            ],
            "type": "string",
            "description": "Sold Type"
          },
          "soldPrice": {
            "type": "integer",
            "description": "Price property was sold for",
            "format": "int32"
          },
          "displaySoldPrice": {
            "type": "boolean",
            "description": "Indicates how the price will be displayed for free to the general public, default to true if value not provided"
          }
        },
        "description": "Sold Details"
      },
      "Domain.ListingAdminService.v1.Model.LeasedDetails": {
        "type": "object",
        "properties": {
          "leasedPrice": {
            "type": "integer",
            "description": "Optional. The weekly rental price.",
            "format": "int32"
          },
          "leasedDuration": {
            "type": "integer",
            "description": "The duration of the lease in weeks.",
            "format": "int32"
          }
        },
        "description": "Leased Details"
      },
      "Domain.ListingAdminService.v1.Model.OffMarketDetails": {
        "type": "object",
        "properties": {
          "listingAction": {
            "enum": [
              "sale",
              "rent"
            ],
            "type": "string",
            "description": "Sale or Rent. Optional if Domain Ad ID is provided."
          },
          "offMarketAction": {
            "enum": [
              "withDrawn",
              "sold",
              "leased"
            ],
            "type": "string",
            "description": "Off Market Action"
          },
          "listingProvider": {
            "type": "string",
            "description": "A string identifying the data provider"
          },
          "domainAgencyID": {
            "type": "integer",
            "description": "Domain Agency ID. Optional if Domain Ad ID is provided.",
            "format": "int32"
          },
          "providerAdId": {
            "type": "string",
            "description": "External Advertisement ID. Optional if Domain Ad ID is provided."
          },
          "actionDate": {
            "type": "string",
            "description": "The date property was sold, leased or withdrawn",
            "format": "date-time"
          },
          "soldDetails": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.SoldDetails"
          },
          "leasedDetails": {
            "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.LeasedDetails"
          },
          "comment": {
            "type": "string",
            "description": "Extra details for off market action"
          }
        },
        "description": "Shows offmarket info"
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.StatisticsReport": {
        "type": "object",
        "properties": {
          "summary": {
            "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Statistics"
          },
          "dailyBreakdown": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Listings.Statistics"
            },
            "description": "Listing statistic breakdown for the period"
          }
        },
        "description": "Statistics report for single listing",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.ListingAdminService.v1.Model.ModelEvent": {
        "type": "object",
        "properties": {
          "severity": {
            "enum": [
              "Info",
              "Warning",
              "Error"
            ],
            "type": "string",
            "description": "Severity of the Event"
          },
          "issueType": {
            "enum": [
              "Internal",
              "External"
            ],
            "type": "string",
            "description": "Type of the issue"
          },
          "message": {
            "type": "string",
            "description": "Message associated with the event"
          }
        },
        "description": "Processing Event, use to show information, warnings or Errors",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.ListingAdminService.v1.Model.ReportVersion": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Operations performed on a completed version ['none', 'dataReceived', 'processStarted', 'priceValidated', 'geoCoded', 'pdfsProcessed', 'primaryImagesProcessed', 'allImagesProcessed', 'listingDataSaved', 'listingDeleted', 'reportEmailSent', 'offMarketProcessed', 'listingIndexed', 'propertyTypesProcessed', 'contactsProcessed', 'messagesPublished', 'listingSentLive', 'listingUpdated', 'listingRestored', 'allImageSizesProcessed', 'patchProcessed', 'externalSaleProcessed', 'soiProcessed', 'duplicateDetection', 'listingMerged', 'supplementaryProcessed', 'listingHeldInMigration', 'linkedProjectsProcessed', 'linkedListingsProcessed', 'allMediaProcessed', 'projectProcessed', 'projectDeleted']."
          },
          "versionId": {
            "type": "string",
            "description": "Version Id"
          },
          "processedDate": {
            "type": "string",
            "description": "Date this version of data been processed",
            "format": "date-time"
          },
          "dataUrl": {
            "type": "string",
            "description": "Url to access s3 file"
          },
          "processCount": {
            "type": "integer",
            "description": "Retry count",
            "format": "int32"
          }
        },
        "description": "Report Version",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.ListingAdminService.v1.Model.ListingReport": {
        "type": "object",
        "properties": {
          "processStatus": {
            "enum": [
              "queued",
              "processing",
              "processed",
              "searchable",
              "failed",
              "error"
            ],
            "type": "string",
            "description": "Status of listing been processed  * Queued - We received request  * Processing - Request been processed  * Processed - Successful processed request  * Failed - Processing failed  * Error - Individual errors encountered"
          },
          "agencyId": {
            "type": "integer",
            "description": "AgencyId from Domain",
            "format": "int64"
          },
          "providerId": {
            "type": "string",
            "description": "ProviderId for the agency"
          },
          "providerAdId": {
            "type": "string",
            "description": "Listing identifier provided by CRM"
          },
          "adId": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "Advertisement Id from domain"
          },
          "qualityScore": {
            "type": "integer",
            "description": "Quality score of the listing, based on data completeness",
            "format": "int32"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ModelEvent"
            },
            "description": "All Events associated with this processing request"
          },
          "versions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.ListingAdminService.v1.Model.ReportVersion"
            },
            "description": "version list"
          }
        },
        "description": "Represent current listing status and aggregation of status messages",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Listings.ListingLocation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name"
          },
          "state": {
            "type": "string",
            "description": "State"
          },
          "postcode": {
            "type": "string",
            "description": "Postcode"
          },
          "area": {
            "type": "string",
            "description": "Area"
          },
          "region": {
            "type": "string",
            "description": "Region"
          },
          "type": {
            "type": "string",
            "description": "Type"
          }
        },
        "description": "Listing location",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Me.V1.MyDetails": {
        "type": "object",
        "properties": {
          "authenticated": {
            "type": "boolean",
            "description": "True if the current request was successfully authenticated"
          },
          "clientId": {
            "type": "string",
            "description": "The Client ID or API Key used to authenticated this request",
            "nullable": true
          },
          "subjectId": {
            "type": "string",
            "description": "A unique user id, only if this request is authenticated as a user context.",
            "nullable": true
          },
          "subjectEmail": {
            "type": "string",
            "description": "The users email address if available",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-data-access-level-info": {
          "Basic": [
            "Authenticated",
            "ClientId",
            "SubjectId",
            "SubjectEmail"
          ],
          "Detailed": [
            "Authenticated",
            "ClientId",
            "SubjectId",
            "SubjectEmail"
          ],
          "Full": [
            "Authenticated",
            "ClientId",
            "SubjectId",
            "SubjectEmail"
          ]
        }
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {},
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Me.V1.AgencySummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "admin": {
            "type": "boolean",
            "description": "True if this user is an admin of this agency",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-data-access-level-info": {
          "Basic": [
            "Id",
            "Name"
          ],
          "Detailed": [
            "Id",
            "Name"
          ],
          "Full": [
            "Id",
            "Name",
            "Admin"
          ]
        }
      },
      "Me.V1.ProviderSummary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Provider identifier - this will map to the username",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "description": "Company name",
            "nullable": true
          },
          "contactNameTechnical": {
            "type": "string",
            "description": "Contact person's name for technical related enquiries",
            "nullable": true
          },
          "emailTechnical": {
            "type": "string",
            "description": "Email address to receive technical related emails",
            "nullable": true
          },
          "phoneTechnical": {
            "type": "string",
            "description": "Phone to be contact for technical related enquiries",
            "nullable": true
          },
          "contactNameBusiness": {
            "type": "string",
            "description": "Contact person's name for business related enquiries",
            "nullable": true
          },
          "emailBusiness": {
            "type": "string",
            "description": "Email address to receive business related emails",
            "nullable": true
          },
          "phoneBusiness": {
            "type": "string",
            "description": "Phone to be contact for business related enquiries",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Create provider response",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Listings.v1.PropertyType": {
        "enum": [
          "unknown",
          "acreageSemiRural",
          "duplex",
          "house",
          "rural",
          "farm",
          "specialistFarm",
          "carspace",
          "developmentLand",
          "developmentSite",
          "newHouseLand",
          "villa",
          "townhouse",
          "semiDetached",
          "terrace",
          "penthouse",
          "studio",
          "apartmentUnitFlat",
          "blockOfUnits",
          "vacantLand",
          "newHomeDesigns",
          "hotelLeisure",
          "industrialWarehouse",
          "newLand",
          "international",
          "medicalConsulting",
          "newApartments",
          "offices",
          "parkingCarSpace",
          "retail",
          "retirement",
          "ruralCommercialFarming",
          "showroomsBulkyGoods",
          "servicedOffices",
          "other",
          "chickenShop",
          "seafoodShop",
          "deliCafe",
          "cropping",
          "viticulture",
          "mixedFarming",
          "grazing",
          "horticulture",
          "equine",
          "farmlet",
          "orchard",
          "ruralLifestyle",
          "irrigationServices",
          "dairyFarming",
          "livestock",
          "aquaculture",
          "fishingForestry",
          "onlineBusiness",
          "homeBased"
        ],
        "type": "string",
        "description": "Available types of Properties  * `Unknown` - Unknown * `AcreageSemiRural` - Acreage-SemiRural * `ApartmentUnitFlat` - Apartment Unit Flat * `Aquaculture` - Aquaculture             commercial/rural type * `BlockOfUnits` - Block Of Units * `Carspace` - Carspace * `DairyFarming` - Dairy Farming             commercial/rural type * `DevelopmentLand` - Development / Land * `DevelopmentSite` - Development site * `Duplex` - Duplex * `Farm` - Farm * `FishingForestry` - Fishing / Forestry             commercial/rural type * `HomeBased` - Home Based * `NewHomeDesigns` - New Home Designs * `HotelLeisure` - Hotel / Leisure             commercial type * `House` - House * `NewHouseLand` - New House And Land * `IndustrialWarehouse` - Industrial / Warehouse             commercial type * `IrrigationServices` - Irrigation Services             commercial/rural type * `NewLand` - New Land * `Livestock` - Livestock             commercial/rural type * `International` - International             commercial type * `MedicalConsulting` - Medical / Consulting             commercial type * `NewApartments` - New Apartments / Off the Plan * `Offices` - Offices             commercial type * `ParkingCarSpace` - Parking / Car Space             commercial type * `Penthouse` - Penthouse * `Retail` - Retail             commercial type * `Retirement` - Retirement * `Rural` - Rural * `RuralCommercialFarming` - Rural / Commercial Farming              commercial type * `SemiDetached` - Semi Detached * `ShowroomsBulkyGoods` - Showrooms / Bulky Goods             commercial type * `SpecialistFarm` - The specialist farm * `Studio` - Studio * `Terrace` - Terrace * `Townhouse` - The townhouse * `VacantLand` - Vacant Land * `Villa` - Villa * `ServicedOffices` - Serviced Offices             commercial type * `Other` - Other             commercial type * `ChickenShop` - Chicken Shop             commercial type * `SeafoodShop` - Seafood Shop             commercial type * `DeliCafe` - Deli Cafe             commercial type * `Cropping` - Cropping             commercial/rural type * `Viticulture` - Viticulture             commercial/rural type * `MixedFarming` - Mixed Farming             commercial type * `Grazing` - Grazing             commercial/rural type * `Horticulture` - Horticulture             commercial/rural type * `Equine` - Equine             commercial/rural type * `Farmlet` - Farmlet             commercial/rural type * `Orchard` - Orchard             commercial/rural type * `RuralLifestyle` - Rural Lifestyle             commercial/rural type * `OnlineBusiness` - Online Business"
      },
      "Listings.v1.Objective": {
        "enum": [
          "sale",
          "rent"
        ],
        "type": "string",
        "description": "The advertisement's objective  * `Sale` - Residential Advertisement for Sale * `Rent` - Residential Advertisement for Rent"
      },
      "Listings.v1.Channel": {
        "enum": [
          "residential",
          "commercial",
          "business"
        ],
        "type": "string",
        "description": "Channel  * `Residential` - Residential * `Commercial` - Commercial * `Business` - Business"
      },
      "Bookings.V2.RateForNewListingRequest": {
        "required": [
          "agencyId",
          "agentEmail",
          "agentFirstName",
          "agentLastName",
          "channel",
          "isNewDevelopment",
          "listingType",
          "postcode",
          "price",
          "propertyType",
          "state",
          "suburb"
        ],
        "type": "object",
        "properties": {
          "agencyId": {
            "type": "integer",
            "description": "Id of the agency for whom rates are to be calculated.",
            "format": "int32"
          },
          "agentFirstName": {
            "type": "string",
            "description": "The first name of the primary agent associated with the listing."
          },
          "agentLastName": {
            "type": "string",
            "description": "The last name of the primary agent associated with the listing"
          },
          "agentEmail": {
            "type": "string",
            "description": "The email of the primary agent associated with the listing."
          },
          "suburb": {
            "type": "string",
            "description": "Suburb for which rates are to be calculated."
          },
          "postcode": {
            "type": "string",
            "description": "Postcode for which rates are to be calculated."
          },
          "state": {
            "type": "string",
            "description": "State for which rates are to be calculated"
          },
          "propertyType": {
            "$ref": "#/components/schemas/Listings.v1.PropertyType"
          },
          "isNewDevelopment": {
            "type": "boolean",
            "description": "Whether to return the normal or new development rates"
          },
          "listingType": {
            "$ref": "#/components/schemas/Listings.v1.Objective"
          },
          "price": {
            "type": "number",
            "description": "The value of the listing",
            "format": "double"
          },
          "channel": {
            "$ref": "#/components/schemas/Listings.v1.Channel"
          },
          "bookingStartDate": {
            "type": "string",
            "description": "Date at which the booking will start. Defaults to today. Allows for returning future contracts/price changes.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Provide a summary of the intended listing for which to calculate a rate.",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Bookings.V2.RateForNewListing": {
        "type": "object",
        "properties": {
          "costExGst": {
            "type": "number",
            "description": "Gets or Sets CostExGst",
            "format": "double"
          },
          "costIncGst": {
            "type": "number",
            "description": "Gets or Sets CostIncGst",
            "format": "double"
          },
          "contractEndDate": {
            "type": "string",
            "description": "Gets or Sets ContractEndDate",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "NewListingRateResponse",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.LocationProfilesService.v1.Model.LocationSurroundingSuburbs": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "urlSlug": {
            "type": "string"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.LocationProfilesService.v1.Model.LocationDataSalesGrowthList": {
        "type": "object",
        "properties": {
          "medianSoldPrice": {
            "type": "number",
            "format": "double"
          },
          "annualGrowth": {
            "type": "number",
            "format": "double"
          },
          "numberSold": {
            "type": "integer",
            "format": "int32"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.LocationProfilesService.v1.Model.LocationDataPropertyCategories": {
        "type": "object",
        "properties": {
          "luxuryLevelPrice": {
            "type": "number",
            "format": "double"
          },
          "numberSold": {
            "type": "integer",
            "format": "int32"
          },
          "estimatedRepayments": {
            "type": "number",
            "format": "double"
          },
          "forSale": {
            "type": "integer",
            "format": "int32"
          },
          "medianSoldPrice": {
            "type": "number",
            "format": "double"
          },
          "medianRentPrice": {
            "type": "number",
            "format": "double"
          },
          "daysOnMarket": {
            "type": "number",
            "format": "double"
          },
          "bedrooms": {
            "type": "integer",
            "format": "int32"
          },
          "forRent": {
            "type": "integer",
            "format": "int32"
          },
          "entryLevelPrice": {
            "type": "number",
            "format": "double"
          },
          "salesGrowthList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.LocationProfilesService.v1.Model.LocationDataSalesGrowthList"
            }
          },
          "auctionClearanceRate": {
            "type": "number",
            "format": "double"
          },
          "propertyCategory": {
            "type": "string"
          },
          "mostRecentSale": {
            "type": "string"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.LocationProfilesService.v1.Model.LocationData": {
        "type": "object",
        "properties": {
          "studiosForRent": {
            "type": "integer",
            "format": "int32"
          },
          "terracedHousesForSale": {
            "type": "integer",
            "format": "int32"
          },
          "semiDetachedHousesForSale": {
            "type": "integer",
            "format": "int32"
          },
          "townhousesForRent": {
            "type": "integer",
            "format": "int32"
          },
          "apartmentsAndUnitsForSale": {
            "type": "integer",
            "format": "int32"
          },
          "apartmentsAndUnitsForRent": {
            "type": "integer",
            "format": "int32"
          },
          "villasForSale": {
            "type": "integer",
            "format": "int32"
          },
          "duplexesForSale": {
            "type": "integer",
            "format": "int32"
          },
          "semiDetachedHousesForRent": {
            "type": "integer",
            "format": "int32"
          },
          "studiosForSale": {
            "type": "integer",
            "format": "int32"
          },
          "singlePercentage": {
            "type": "number",
            "format": "double"
          },
          "mostCommonAgeBracket": {
            "type": "string"
          },
          "renterPercentage": {
            "type": "number",
            "format": "double"
          },
          "penthousesForSale": {
            "type": "integer",
            "format": "int32"
          },
          "villasForRent": {
            "type": "integer",
            "format": "int32"
          },
          "duplexesForRent": {
            "type": "integer",
            "format": "int32"
          },
          "housesForSale": {
            "type": "integer",
            "format": "int32"
          },
          "ownerOccupierPercentage": {
            "type": "number",
            "format": "double"
          },
          "propertyCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.LocationProfilesService.v1.Model.LocationDataPropertyCategories"
            }
          },
          "population": {
            "type": "number",
            "format": "double"
          },
          "penthousesForRent": {
            "type": "integer",
            "format": "int32"
          },
          "townhousesForSale": {
            "type": "integer",
            "format": "int32"
          },
          "terracedHousesForRent": {
            "type": "integer",
            "format": "int32"
          },
          "marriedPercentage": {
            "type": "number",
            "format": "double"
          },
          "housesForRent": {
            "type": "integer",
            "format": "int32"
          },
          "blockOfUnitsForSale": {
            "type": "integer",
            "format": "int32"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.LocationProfilesService.v1.Model.Location": {
        "type": "object",
        "properties": {
          "domainLocationId": {
            "type": "integer",
            "format": "int32"
          },
          "postcode": {
            "type": "string"
          },
          "pfLocationId": {
            "type": "string"
          },
          "surroundingSuburbs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.LocationProfilesService.v1.Model.LocationSurroundingSuburbs"
            }
          },
          "urlSlug": {
            "type": "string"
          },
          "suburbName": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/Domain.LocationProfilesService.v1.Model.LocationData"
          },
          "apmLocationId": {
            "type": "integer",
            "format": "int32"
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "areaName": {
            "type": "string"
          },
          "regionName": {
            "type": "string"
          },
          "state": {
            "type": "string"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Listings.v2.ProjectProfileType": {
        "enum": [
          "noProfile",
          "projectProfileStandard",
          "projectProfilePremium"
        ],
        "type": "string",
        "description": "Project Profile Type  * `NoProfile` - No Profile * `ProjectProfileStandard` - Profile Standard * `ProjectProfilePremium` - Profile Premium"
      },
      "Listings.v2.StateAbbreviation": {
            "enum": [
              "nsw",
              "vic",
              "sa",
              "nt",
              "tas",
              "act",
              "qld",
              "wa"
            ],
        "type": "string",
        "description": "Australian states  * `NSW` - NSW * `VIC` - VIC * `SA` - SA * `NT` - NT * `TAS` - TAS * `ACT` - ACT * `QLD` - QLD * `WA` - WA"
          },
      "Listings.v2.DisplayAddressType": {
            "enum": [
              "fullAddress",
              "streetAndSuburb",
              "suburbOnly",
              "regionOnly",
              "areaOnly",
              "stateOnly"
            ],
        "type": "string",
        "description": "Advertiser's preference in displaying their listings address  * `FullAddress` - Display the entire address * `StreetAndSuburb` - Display only the street address and suburb * `SuburbOnly` - Display only the suburb * `RegionOnly` - Display only state * `AreaOnly` - Display only state * `StateOnly` - Display only state"
      },
      "Listings.v2.ProjectAddressParts": {
        "type": "object",
        "properties": {
          "stateAbbreviation": {
            "$ref": "#/components/schemas/Listings.v2.StateAbbreviation"
          },
          "displayType": {
            "$ref": "#/components/schemas/Listings.v2.DisplayAddressType"
          },
          "street2": {
            "type": "string",
            "description": "Street 2",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "description": "Latitude",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "description": "Longitude",
            "format": "double",
            "nullable": true
          },
          "streetNumber": {
            "type": "string",
            "description": "Street number",
            "nullable": true
          },
          "unitNumber": {
            "type": "string",
            "description": "Unit number.",
            "nullable": true
          },
          "street": {
            "type": "string",
            "description": "Street address",
            "nullable": true
          },
          "suburb": {
            "type": "string",
            "description": "Suburb of the address",
            "nullable": true
          },
          "suburbId": {
            "type": "integer",
            "description": "Domain suburb identifier for address lookup via the domain location api",
            "format": "int32",
            "nullable": true
          },
          "postcode": {
            "type": "string",
            "description": "Postcode of the address",
            "nullable": true
          },
          "displayAddress": {
            "type": "string",
            "description": "Advertiser's preference in displaying their listing's address",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Project address parts",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Listings.v2.PropertyType": {
        "enum": [
          "unknown",
          "acreageSemiRural",
          "duplex",
          "house",
          "rural",
          "farm",
          "specialistFarm",
          "carspace",
          "developmentLand",
          "developmentSite",
          "newHouseLand",
          "villa",
          "townhouse",
          "semiDetached",
          "terrace",
          "penthouse",
          "studio",
          "apartmentUnitFlat",
          "blockOfUnits",
          "vacantLand",
          "newHomeDesigns",
          "hotelLeisure",
          "industrialWarehouse",
          "newLand",
          "international",
          "medicalConsulting",
          "newApartments",
          "offices",
          "parkingCarSpace",
          "retail",
          "retirement",
          "ruralCommercialFarming",
          "showroomsBulkyGoods",
          "servicedOffices",
          "other",
          "chickenShop",
          "seafoodShop",
          "deliCafe",
          "cropping",
          "viticulture",
          "mixedFarming",
          "grazing",
          "horticulture",
          "equine",
          "farmlet",
          "orchard",
          "ruralLifestyle",
          "irrigationServices",
          "dairyFarming",
          "livestock",
          "aquaculture",
          "fishingForestry",
          "onlineBusiness",
          "homeBased"
        ],
        "type": "string",
        "description": "Available types of Properties  * `Unknown` - Unknown * `AcreageSemiRural` - Acreage-SemiRural * `ApartmentUnitFlat` - Apartment Unit Flat * `Aquaculture` - Aquaculture             commercial/rural type * `BlockOfUnits` - Block Of Units * `Carspace` - Carspace * `DairyFarming` - Dairy Farming             commercial/rural type * `DevelopmentLand` - Development / Land * `DevelopmentSite` - Development site * `Duplex` - Duplex * `Farm` - Farm * `FishingForestry` - Fishing / Forestry             commercial/rural type * `HomeBased` - Home Based * `NewHomeDesigns` - New Home Designs * `HotelLeisure` - Hotel / Leisure             commercial type * `House` - House * `NewHouseLand` - New House And Land * `IndustrialWarehouse` - Industrial / Warehouse             commercial type * `IrrigationServices` - Irrigation Services             commercial/rural type * `NewLand` - New Land * `Livestock` - Livestock             commercial/rural type * `International` - International             commercial type * `MedicalConsulting` - Medical / Consulting             commercial type * `NewApartments` - New Apartments / Off the Plan * `Offices` - Offices             commercial type * `ParkingCarSpace` - Parking / Car Space             commercial type * `Penthouse` - Penthouse * `Retail` - Retail             commercial type * `Retirement` - Retirement * `Rural` - Rural * `RuralCommercialFarming` - Rural / Commercial Farming              commercial type * `SemiDetached` - Semi Detached * `ShowroomsBulkyGoods` - Showrooms / Bulky Goods             commercial type * `SpecialistFarm` - The specialist farm * `Studio` - Studio * `Terrace` - Terrace * `Townhouse` - The townhouse * `VacantLand` - Vacant Land * `Villa` - Villa * `ServicedOffices` - Serviced Offices             commercial type * `Other` - Other             commercial type * `ChickenShop` - Chicken Shop             commercial type * `SeafoodShop` - Seafood Shop             commercial type * `DeliCafe` - Deli Cafe             commercial type * `Cropping` - Cropping             commercial/rural type * `Viticulture` - Viticulture             commercial/rural type * `MixedFarming` - Mixed Farming             commercial type * `Grazing` - Grazing             commercial/rural type * `Horticulture` - Horticulture             commercial/rural type * `Equine` - Equine             commercial/rural type * `Farmlet` - Farmlet             commercial/rural type * `Orchard` - Orchard             commercial/rural type * `RuralLifestyle` - Rural Lifestyle             commercial/rural type * `OnlineBusiness` - Online Business"
      },
      "Listings.v2.AdvertiserType": {
            "enum": [
              "agency",
              "private"
            ],
        "type": "string",
        "description": "Listing Advertiser types  * `Agency` - Listing Advertised by an agency * `Private` - Listing Advertised by a private advertiser"
      },
      "Listings.V2.AdvertiserIdentifiers": {
        "type": "object",
        "properties": {
          "advertiserType": {
            "$ref": "#/components/schemas/Listings.v2.AdvertiserType"
          },
          "advertiserId": {
            "type": "integer",
            "description": "Advertiser's identifier",
            "format": "int32",
            "nullable": true
          },
          "contactIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Identifier of each contact the advertiser has associated with the listing",
            "nullable": true
          },
          "agentIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Identifier of each agent the advertiser has associated with the listing",
            "nullable": true
          },
          "conjunctionContactIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Identifier of each conjunctional contact associated with the listing",
            "nullable": true
          },
          "conjunctionAgentIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Identifier of each conjunctional agent associated with the listing",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Encapsulates the listing's advertiser identifiers",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Listings.V2.ProviderDetails": {
        "type": "object",
        "properties": {
          "providerSystem": {
            "type": "string",
            "description": "Feed provider ID",
            "nullable": true
          },
          "providerAdID": {
            "type": "string",
            "description": "Unique ID within provider system",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Information for the listing provider. e.g. bulkuploader information",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Listings.v2.ListingMediaCategory": {
            "enum": [
              "image",
              "video",
              "others"
            ],
        "type": "string",
        "description": "Available media associated with a Listing  * `Image` - Image media type * `Video` - Video media type * `Others` - Other media type"
          },
      "Listings.v2.ProjectMediaType": {
            "enum": [
              "photo",
              "poster",
              "video",
              "virtualTour",
              "webLink"
            ],
        "type": "string",
        "description": "Media types  * `Photo` - Project gallery photo * `Poster` - The 300x600 poster ad banner * `Video` - Video * `VirtualTour` - virtual tour type * `WebLink` - Web link type"
      },
      "Listings.v2.ProjectMedia": {
        "type": "object",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/Listings.v2.ListingMediaCategory"
          },
          "type": {
            "$ref": "#/components/schemas/Listings.v2.ProjectMediaType"
          },
          "url": {
            "type": "string",
            "description": "Url",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Optional description",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Project Media",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Listings.v2.PdfType": {
            "enum": [
              "commercialPdf",
              "newDevBrochurePdf",
              "floorplanPdf",
              "devProjectPdf"
            ],
        "type": "string",
        "description": "PDF types  * `CommercialPdf` - Commercial PDF * `NewDevBrochurePdf` - NewDevBrochure PDF * `FloorplanPdf` - Floorplan PDF * `DevProjectPdf` - DevProject PDF"
      },
      "Listings.V2.PdfUpload": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/Listings.v2.PdfType"
          },
          "url": {
            "type": "string",
            "description": "Url of the PDF",
            "nullable": true
          },
          "filename": {
            "type": "string",
            "description": "Original file name of the PDF",
            "nullable": true
          },
          "fileDescription": {
            "type": "string",
            "description": "Description of the PDF",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "PDF file",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Listings.v2.InspectionRecurrence": {
            "enum": [
              "none",
              "weekly"
            ],
        "type": "string",
        "description": "Indicates how often an inspection recurs.  * `None` - Once-off inspection * `Weekly` - Weekly inspection"
      },
      "Listings.V2.Inspection": {
        "type": "object",
        "properties": {
          "recurrence": {
            "$ref": "#/components/schemas/Listings.v2.InspectionRecurrence"
          },
          "openingDateTime": {
            "type": "string",
            "description": "Opening date and time of the inspection. e.g. 2015-01-01T12:00:00.  Not provided by bulk uploaded listings, in these cases refer to the  inspection description field. DateTime is in AEST (Australian Eastern Standard Time) timezone.",
            "format": "date-time",
            "nullable": true
          },
          "closingDateTime": {
            "type": "string",
            "description": "Closing date and time of the inspection. e.g. 2015-01-01T12:00:00  Not provided by bulk uploaded listings, in these cases refer to the  inspection description field. DateTime is in AEST (Australian Eastern Standard Time) timezone.",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description of the inspection provided by the Advertiser.  When listings are bulk uploaded, inspection times are provided as a string.  Other inspection details will not be provided",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Encapsulates the details of a Listing's Inspection",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Listings.V2.PropertyInspections": {
        "type": "object",
        "properties": {
          "inspections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Listings.V2.Inspection"
            },
            "description": "Inspection details for the property. e.g. opening and closing times",
            "nullable": true
          },
          "pastInspections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Listings.V2.Inspection"
            },
            "description": "Inspection details for the property. e.g. opening and closing times",
            "nullable": true
          },
          "isByAppointmentOnly": {
            "type": "boolean",
            "description": "True or False indicating whether the inspection is by appointment only"
          }
        },
        "additionalProperties": false,
        "description": "Property Inspection(s) details",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Listings.V2.Project": {
        "type": "object",
        "properties": {
          "projectProfileType": {
            "$ref": "#/components/schemas/Listings.v2.ProjectProfileType"
          },
          "id": {
            "type": "integer",
            "description": "Project ID",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Project Name",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Start date. DateTime is in AEST (Australian Eastern Standard Time) timezone.",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "End date.DateTime is in AEST (Australian Eastern Standard Time) timezone.",
            "format": "date-time",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/Listings.v2.ProjectAddressParts"
          },
          "viewingAddress": {
            "$ref": "#/components/schemas/Listings.v2.ProjectAddressParts"
          },
          "propertyTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Listings.v2.PropertyType"
            },
            "description": "Property types available at the project.",
            "nullable": true
          },
          "displayableAddress": {
            "$ref": "#/components/schemas/Listings.v2.ProjectAddressParts"
          },
          "enquiryEmailAddress": {
            "type": "string",
            "description": "Enquiry email address",
            "nullable": true
          },
          "advertiserIdentifiers": {
            "$ref": "#/components/schemas/Listings.V2.AdvertiserIdentifiers"
          },
          "providerDetails": {
            "$ref": "#/components/schemas/Listings.V2.ProviderDetails"
          },
          "media": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Listings.v2.ProjectMedia"
            },
            "description": "Images and videos",
            "nullable": true
          },
          "projectUrl": {
            "type": "string",
            "description": "Project URL",
            "nullable": true
          },
          "headline": {
            "type": "string",
            "description": "Headline",
            "nullable": true
          },
          "tagline": {
            "type": "string",
            "description": "Tag line",
            "nullable": true
          },
          "displayAsLastUpdated": {
            "type": "string",
            "description": "The 'last updated' date to show to customers. DateTime is in AEST (Australian Eastern Standard Time) timezone.",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "description": "Last updated by",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Last updated, used for auditing. DateTime is in AEST (Australian Eastern Standard Time) timezone.",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "description": "Created by",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "description": "Created date. DateTime is in AEST (Australian Eastern Standard Time) timezone.",
            "format": "date-time"
          },
          "backgroundColour": {
            "type": "string",
            "description": "Background colour",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "appointmentRequired": {
            "type": "boolean",
            "description": "If inspections require an appointment."
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Features",
            "nullable": true
          },
          "priceFrom": {
            "type": "number",
            "description": "Price from",
            "format": "double",
            "nullable": true
          },
          "priceTo": {
            "type": "number",
            "description": "Price to",
            "format": "double",
            "nullable": true
          },
          "bannerUrl": {
            "type": "string",
            "description": "Banner URL",
            "nullable": true
          },
          "bigBannerUrl": {
            "type": "string",
            "description": "Big banner URL",
            "nullable": true
          },
          "smallBannerUrl": {
            "type": "string",
            "description": "Small banner URL",
            "nullable": true
          },
          "logoUrl": {
            "type": "string",
            "description": "Logo URL",
            "nullable": true
          },
          "pdfs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Listings.V2.PdfUpload"
            },
            "description": "PDF files, such as brochures etc.",
            "nullable": true
          },
          "inspectionDetails": {
            "$ref": "#/components/schemas/Listings.V2.PropertyInspections"
          },
          "numberOfFloors": {
            "type": "integer",
            "description": "Number of floors",
            "format": "int32",
            "nullable": true
          },
          "numberOfApartments": {
            "type": "integer",
            "description": "Number of apartments",
            "format": "int32",
            "nullable": true
          },
          "estimatedCompletionDate": {
            "type": "string",
            "description": "Estimated completion date. DateTime in AEST (Australian Eastern Standard Time) timezone.",
            "format": "date-time",
            "nullable": true
          },
          "startingPrice": {
            "type": "number",
            "description": "Lowest child listing price",
            "format": "double",
            "nullable": true
          },
          "childListingIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Child listing identifiers.",
            "nullable": true
          },
          "linkedProjectIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
          },
            "description": "Linked project identifiers.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A structured representation of a Project",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Properties.GeoCoordinate": {
        "type": "object",
        "properties": {
          "lat": {
            "type": "number",
            "description": "The latitude.",
            "format": "double"
          },
          "lon": {
            "type": "number",
            "description": "The longitude.",
            "format": "double"
          }
        },
        "description": "A geo spatial coordinate",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Properties.Advert": {
        "type": "object",
        "properties": {
          "onMarketTypes": {
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "Rent",
                "Sale",
                "Share"
              ],
              "type": "string"
            },
            "description": "Gets or sets the on market type."
          },
          "advertId": {
            "type": "integer",
            "description": "Gets or sets the advert identifier.",
            "format": "int32"
          },
          "agency": {
            "type": "string",
            "description": "Gets or sets the name of the agency."
          },
          "agencyColour": {
            "type": "string",
            "description": "Gets or sets the agency colour."
          },
          "agencyId": {
            "type": "integer",
            "description": "Gets or sets the Domain Agency identifier.",
            "format": "int32"
          },
          "agencyLogo": {
            "type": "string",
            "description": "Gets or sets the agency logo."
          },
          "url": {
            "type": "string",
            "description": "Gets or sets the URL."
          }
        },
        "description": "A current advert for a {Domain.PropertyId.Model.Models.Property}",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Properties.ClaimData": {
        "type": "object",
        "properties": {
          "claimant": {
            "enum": [
              "Owner",
              "Tenant",
              "Investor"
            ],
            "type": "string",
            "description": "Gets or sets the claimant info."
          }
        },
        "description": "The additional claim data information about the property.",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Properties.GnafId": {
        "type": "object",
        "properties": {
          "monthNo": {
            "type": "integer",
            "description": "PSMA GNAF Edition Month.",
            "format": "int32"
          },
          "yearNo": {
            "type": "integer",
            "description": "PSMA GNAF Edition Year.",
            "format": "int32"
          },
          "gnafPID": {
            "type": "string",
            "description": "PSMA GNAF Pid."
          }
        },
        "description": "PSMA GNAF identifier",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Properties.ActivityBoundary": {
        "type": "object",
        "properties": {
          "listingId": {
            "type": "integer",
            "description": "Gets the listing identifier.",
            "format": "int32"
          },
          "advertisedDate": {
            "type": "string",
            "description": "Gets or sets the advertised date.",
            "format": "date-time"
          },
          "advertisedPrice": {
            "type": "integer",
            "description": "Gets or sets the advertised price.",
            "format": "int32"
          },
          "agency": {
            "type": "string",
            "description": "Gets or sets the name of the Agency."
          },
          "agencyColour": {
            "type": "string",
            "description": "Gets or sets the agency colour."
          },
          "agencyId": {
            "type": "integer",
            "description": "Gets or sets the Domain Agency identifier.",
            "format": "int32"
          },
          "agencyLogo": {
            "type": "string",
            "description": "Gets or sets the agency logo."
          },
          "agencyUrl": {
            "type": "string",
            "description": "Gets or sets the agency url."
          },
          "apmAgencyId": {
            "type": "integer",
            "description": "Gets or sets the APM agency identifier.",
            "format": "int32"
          },
          "source": {
            "type": "string",
            "description": "Gets or sets the source of the Activity"
          },
          "suppressDetails": {
            "type": "boolean",
            "description": "Gets or sets a value to indicate whether all of the activity details should be suppressed."
          },
          "suppressPrice": {
            "type": "boolean",
            "description": "Gets or sets a value to indicate whether the activity price should be suppressed"
          },
          "type": {
            "type": "string",
            "description": "Gets or sets the type of Activity"
          },
          "url": {
            "type": "string",
            "description": "Gets or sets the Advert URL."
          }
        },
        "description": "Represents the start or end of a listing activity cycle",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Properties.RentalActivity": {
        "type": "object",
        "properties": {
          "first": {
            "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Properties.ActivityBoundary"
          },
          "id": {
            "type": "integer",
            "description": "The APM National Activity identifier for the record.",
            "format": "int64"
          },
          "last": {
            "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Properties.ActivityBoundary"
          },
          "propertyType": {
            "type": "string",
            "description": "The type of the property."
          }
        },
        "description": "A historical rental activity.",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Properties.SaleActivity": {
        "type": "object",
        "properties": {
          "listingId": {
            "type": "integer",
            "description": "Gets or sets the listing identifier.",
            "format": "int32"
          },
          "agency": {
            "type": "string",
            "description": "Gets or sets the agency name."
          },
          "agencyColour": {
            "type": "string",
            "description": "Gets or sets the agency colour."
          },
          "agencyId": {
            "type": "integer",
            "description": "Gets or sets the Domain Agency identifier.",
            "format": "int32"
          },
          "agencyLogo": {
            "type": "string",
            "description": "Gets or sets the agency logo."
          },
          "agencyUrl": {
            "type": "string",
            "description": "Gets or sets the agency URL."
          },
          "apmAgencyId": {
            "type": "integer",
            "description": "Gets or sets the APM agency identifier.",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "description": "Gets or sets the date of the sale",
            "format": "date-time"
          },
          "daysOnMarket": {
            "type": "number",
            "description": "Gets the days on market before the property was sold",
            "format": "double",
            "readOnly": true
          },
          "documentedAsSold": {
            "type": "boolean",
            "description": "Gets or sets whether the property was documented as sold."
          },
          "price": {
            "type": "integer",
            "description": "Gets or sets the price.",
            "format": "int32"
          },
          "reportedAsSold": {
            "type": "boolean",
            "description": "Gets or sets whether the property was reported as sold."
          },
          "suppressDetails": {
            "type": "boolean",
            "description": "Gets or sets a value to indicate whether all of the sale details should be suppressed."
          },
          "suppressPrice": {
            "type": "boolean",
            "description": "Gets or sets a value to indicate whether the sale price should be suppressed"
          },
          "type": {
            "type": "string",
            "description": "Gets or sets the type of sale"
          },
          "url": {
            "type": "string",
            "description": "Gets or sets the URL."
          },
          "first": {
            "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Properties.ActivityBoundary"
          },
          "id": {
            "type": "integer",
            "description": "The APM National Activity identifier for the record.",
            "format": "int64"
          },
          "last": {
            "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Properties.ActivityBoundary"
          },
          "propertyType": {
            "type": "string",
            "description": "The type of the property."
          }
        },
        "description": "A historical sale activity",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Properties.History": {
        "type": "object",
        "properties": {
          "rentals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Properties.RentalActivity"
            },
            "description": "The collection of historical rentals."
          },
          "sales": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Properties.SaleActivity"
            },
            "description": "The collection of historical sales."
          },
          "suppress": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this {Domain.PropertyId.Model.Models.History} is suppress."
          }
        },
        "description": "The history of a property",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "Rentals",
            "Sales"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Properties.Photo": {
        "type": "object",
        "properties": {
          "imageType": {
            "enum": [
              "Property",
              "Floorplan",
              "GoogleStreetView"
            ],
            "type": "string",
            "description": "The type of photo."
          },
          "advertId": {
            "type": "integer",
            "description": "Gets or sets the advert identifier from which this photo relates",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "description": "Gets or sets the date of the photo",
            "format": "date-time"
          },
          "fullUrl": {
            "type": "string",
            "description": "The full size photo url."
          },
          "rank": {
            "type": "integer",
            "description": "The rank of the photo. Lower rank = more preferred photo.",
            "format": "int32"
          }
        },
        "description": "A property photo",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Properties.Property": {
        "type": "object",
        "properties": {
          "cadastreType": {
            "enum": [
              "Point",
              "MultiPoint",
              "LineString",
              "MultiLineString",
              "Polygon",
              "MultiPolygon",
              "GeometryCollection",
              "Feature",
              "FeatureCollection"
            ],
            "type": "string",
            "description": "The type of geometry of the Cadastre property."
          },
          "onMarketTypes": {
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "Rent",
                "Sale",
                "Share"
              ],
              "type": "string"
            },
            "description": "The on market types, if the property is on the market"
          },
          "status": {
            "enum": [
              "OffMarket",
              "OnMarket"
            ],
            "type": "string",
            "description": "The current status of the property."
          },
          "address": {
            "type": "string",
            "description": "The full street address of the property",
            "readOnly": true
          },
          "addressCoordinate": {
            "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Properties.GeoCoordinate"
          },
          "addressId": {
            "type": "integer",
            "description": "The address identifier",
            "format": "int32"
          },
          "adverts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Properties.Advert"
            },
            "description": "The current adverts for the property, if on the market"
          },
          "areaSize": {
            "type": "integer",
            "description": "Gets or sets the size of the area of land on which the property resides.",
            "format": "int32"
          },
          "bathrooms": {
            "type": "integer",
            "description": "The number of bathrooms.",
            "format": "int32"
          },
          "bedrooms": {
            "type": "integer",
            "description": "The number of bedrooms.",
            "format": "int32"
          },
          "carSpaces": {
            "type": "integer",
            "description": "The number of car spaces.",
            "format": "int32"
          },
          "claim": {
            "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Properties.ClaimData"
          },
          "condition": {
            "type": "string",
            "description": "The condition of the property."
          },
          "created": {
            "type": "string",
            "description": "The created date of the property document.",
            "format": "date-time"
          },
          "ensuites": {
            "type": "integer",
            "description": "The number of ensuites.",
            "format": "int32"
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of features for the given property"
          },
          "flatNumber": {
            "type": "string",
            "description": "The flat number of the property (if applicable for the property type)."
          },
          "gnafIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Properties.GnafId"
            },
            "description": "Associated PSMA GNAF identifiers"
          },
          "history": {
            "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Properties.History"
          },
          "id": {
            "type": "string",
            "description": "The property id of the property"
          },
          "improvements": {
            "type": "string",
            "description": "The improvements to the property"
          },
          "internalArea": {
            "type": "integer",
            "description": "The floorplan area of the property.",
            "format": "int32"
          },
          "isResidential": {
            "type": "boolean",
            "description": "Indicates whether this property is residential."
          },
          "landUse": {
            "type": "string",
            "description": "The land use."
          },
          "lotNumber": {
            "type": "string",
            "description": "The lot number for the property."
          },
          "photos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Properties.Photo"
            },
            "description": "A collection of photos of the property."
          },
          "planNumber": {
            "type": "string",
            "description": "The plan number."
          },
          "postcode": {
            "type": "string",
            "description": "The postcode of the property"
          },
          "propertyCategory": {
            "type": "string",
            "description": "The property category."
          },
          "propertyCategoryId": {
            "type": "integer",
            "description": "The property category identifier",
            "format": "int32"
          },
          "propertyType": {
            "type": "string",
            "description": "The type of the property."
          },
          "propertyTypeId": {
            "type": "integer",
            "description": "The property type identifier.",
            "format": "int32"
          },
          "rooms": {
            "type": "integer",
            "description": "The number of rooms.",
            "format": "int32"
          },
          "sectionNumber": {
            "type": "string",
            "description": "The section number."
          },
          "state": {
            "type": "string",
            "description": "The state in which the property resides"
          },
          "storeys": {
            "type": "integer",
            "description": "The number of storeys.",
            "format": "int32"
          },
          "streetAddress": {
            "type": "string",
            "description": "Gets the address for search.",
            "readOnly": true
          },
          "streetName": {
            "type": "string",
            "description": "The name of the street in which the property resides."
          },
          "streetNumber": {
            "type": "string",
            "description": "The street number of the property."
          },
          "streetType": {
            "type": "string",
            "description": "The street type name e.g. St."
          },
          "streetTypeLong": {
            "type": "string",
            "description": "The long street type name e.g. Street."
          },
          "suburb": {
            "type": "string",
            "description": "The suburb in which the property resides."
          },
          "suburbId": {
            "type": "integer",
            "description": "The identifier for the suburb in which the property resides.",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "The title for the property."
          },
          "updated": {
            "type": "string",
            "description": "The last time the property document was updated",
            "format": "date-time"
          },
          "urlSlug": {
            "type": "string",
            "description": "Gets the URL slug."
          },
          "urlSlugShort": {
            "type": "string",
            "description": "Gets or sets the URL slug in short form"
          },
          "zone": {
            "type": "string",
            "description": "The property zone."
          },
          "canonicalUrl": {
            "type": "string",
            "description": "Canonical url for this property"
          }
        },
        "description": "A searchable property",
        "x-data-access-level-info": {
          "Basic": [
            "CadastreType",
            "OnMarketTypes",
            "Status",
            "Address",
            "AddressCoordinate",
            "AddressId",
            "AreaSize",
            "Bathrooms",
            "Bedrooms",
            "CarSpaces",
            "Created",
            "Features",
            "FlatNumber",
            "GnafIds",
            "Id",
            "IsResidential",
            "Photos",
            "PlanNumber",
            "Postcode",
            "PropertyCategory",
            "PropertyCategoryId",
            "SectionNumber",
            "State",
            "StreetAddress",
            "StreetName",
            "StreetNumber",
            "StreetType",
            "StreetTypeLong",
            "Suburb",
            "SuburbId",
            "UrlSlug",
            "UrlSlugShort",
            "Zone",
            "CanonicalUrl"
          ],
          "Detailed": [
            "CadastreType",
            "OnMarketTypes",
            "Status",
            "Address",
            "AddressCoordinate",
            "AddressId",
            "Adverts",
            "AreaSize",
            "Bathrooms",
            "Bedrooms",
            "CarSpaces",
            "Claim",
            "Condition",
            "Created",
            "Ensuites",
            "Features",
            "FlatNumber",
            "GnafIds",
            "History",
            "Id",
            "Improvements",
            "InternalArea",
            "IsResidential",
            "LandUse",
            "LotNumber",
            "Photos",
            "PlanNumber",
            "Postcode",
            "PropertyCategory",
            "PropertyCategoryId",
            "PropertyType",
            "PropertyTypeId",
            "Rooms",
            "SectionNumber",
            "State",
            "Storeys",
            "StreetAddress",
            "StreetName",
            "StreetNumber",
            "StreetType",
            "StreetTypeLong",
            "Suburb",
            "SuburbId",
            "Title",
            "Updated",
            "UrlSlug",
            "UrlSlugShort",
            "Zone",
            "CanonicalUrl"
          ],
          "Full": [
            "CadastreType",
            "OnMarketTypes",
            "Status",
            "Address",
            "AddressCoordinate",
            "AddressId",
            "Adverts",
            "AreaSize",
            "Bathrooms",
            "Bedrooms",
            "CarSpaces",
            "Claim",
            "Condition",
            "Created",
            "Ensuites",
            "Features",
            "FlatNumber",
            "GnafIds",
            "History",
            "Id",
            "Improvements",
            "InternalArea",
            "IsResidential",
            "LandUse",
            "LotNumber",
            "Photos",
            "PlanNumber",
            "Postcode",
            "PropertyCategory",
            "PropertyCategoryId",
            "PropertyType",
            "PropertyTypeId",
            "Rooms",
            "SectionNumber",
            "State",
            "Storeys",
            "StreetAddress",
            "StreetName",
            "StreetNumber",
            "StreetType",
            "StreetTypeLong",
            "Suburb",
            "SuburbId",
            "Title",
            "Updated",
            "UrlSlug",
            "UrlSlugShort",
            "Zone",
            "CanonicalUrl"
          ]
        }
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Properties.HistoricalPriceEstimate": {
        "type": "object",
        "properties": {
          "confidence": {
            "enum": [
              "high",
              "medium"
            ],
            "type": "string",
            "description": "The confidence of the valuation."
          },
          "date": {
            "type": "string",
            "description": "The date of the valuation.",
            "format": "date-time"
          },
          "lowerPrice": {
            "type": "integer",
            "description": "The lower price valuation.",
            "format": "int32"
          },
          "upperPrice": {
            "type": "integer",
            "description": "The upper price valuation.",
            "format": "int32"
          }
        },
        "description": "A price estimate at a given point in time",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Properties.PriceEstimate": {
        "type": "object",
        "properties": {
          "priceConfidence": {
            "enum": [
              "high",
              "medium",
              "recentlySold"
            ],
            "type": "string",
            "description": "Gets or sets the confidence."
          },
          "date": {
            "type": "string",
            "description": "Gets or sets the date.",
            "format": "date-time"
          },
          "lowerPrice": {
            "type": "integer",
            "description": "Gets or sets the lower price.",
            "format": "int32"
          },
          "upperPrice": {
            "type": "integer",
            "description": "Gets or sets the upper price.",
            "format": "int32"
          },
          "midPrice": {
            "type": "integer",
            "description": "Mid Price. Average of Upper and Lower",
            "format": "int32",
            "readOnly": true
          },
          "history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Properties.HistoricalPriceEstimate"
            },
            "description": "Gets or sets the historical price estimates"
          }
        },
        "description": "A current price estimate",
        "x-data-access-level-info": {
          "Basic": [
            "PriceConfidence",
            "Date"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "LocationTypeahead.V1.PropertySuggestionChannel": {
        "enum": [
          "all",
          "residential",
          "commercial"
        ],
        "type": "string"
      },
      "LocationTypeahead.V1.AddressComponents": {
        "type": "object",
        "properties": {
          "unitNumber": {
            "type": "string",
            "nullable": true
          },
          "streetNumber": {
            "type": "string",
            "nullable": true
          },
          "streetName": {
            "type": "string",
            "nullable": true
          },
          "streetType": {
            "type": "string",
            "nullable": true
          },
          "streetTypeLong": {
            "type": "string",
            "nullable": true
          },
          "suburb": {
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "LocationTypeahead.V1.PropertySuggestion": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "nullable": true
          },
          "addressComponents": {
            "$ref": "#/components/schemas/LocationTypeahead.V1.AddressComponents"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "relativeScore": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.PropertyReportService.v1.Model.WashedLocation": {
        "type": "object",
        "properties": {
          "unitNumber": {
            "type": "string"
          },
          "streetNumber": {
            "type": "string"
          },
          "streetName": {
            "type": "string"
          },
          "streetType": {
            "type": "string"
          },
          "suburb": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "state": {
            "type": "string"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.PropertyReportService.v1.Model.PropertyReportContainer": {
        "type": "object",
        "properties": {
          "mimeType": {
            "type": "string"
          },
          "content": {
            "type": "string",
            "format": "byte"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.PropertyReportService.v1.Model.PropertyReportGenerationResult": {
        "type": "object",
        "properties": {
          "washedLocation": {
            "$ref": "#/components/schemas/Domain.PropertyReportService.v1.Model.WashedLocation"
          },
          "report": {
            "$ref": "#/components/schemas/Domain.PropertyReportService.v1.Model.PropertyReportContainer"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.SalesResultsService.v1.Model.DomainSalesResultsModelCityResultsDate": {
        "type": "object",
        "properties": {
          "auctionedDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedDateTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.SalesResultsService.v1.Model.DomainSalesResultsModelCityResultsSummary": {
        "type": "object",
        "properties": {
          "numberListedForAuction": {
            "type": "integer",
            "format": "int32"
          },
          "numberWithdrawn": {
            "type": "integer",
            "format": "int32"
          },
          "numberUnreported": {
            "type": "integer",
            "format": "int32"
          },
          "numberAuctioned": {
            "type": "integer",
            "format": "int32"
          },
          "numberSold": {
            "type": "integer",
            "format": "int32"
          },
          "totalSales": {
            "type": "number",
            "format": "double"
          },
          "median": {
            "type": "integer",
            "format": "int32"
          },
          "adjClearanceRate": {
            "type": "number",
            "format": "double"
          },
          "auctionedDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedDateTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.SalesResults.GeoLocation": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "description": "Gets or Sets the Latitude",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "description": "Gets or Sets the Longitude",
            "format": "double"
          }
        },
        "description": "GeoLocation for Listings",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.SalesResults.ListingSummary": {
        "type": "object",
        "properties": {
          "unitNumber": {
            "type": "string",
            "description": "Gets or Sets UnitNumber"
          },
          "streetNumber": {
            "type": "string",
            "description": "Gets or Sets StreetNumber"
          },
          "streetName": {
            "type": "string",
            "description": "Gets or Sets StreetName"
          },
          "streetType": {
            "type": "string",
            "description": "Gets or Sets StreetType"
          },
          "suburb": {
            "type": "string",
            "description": "Gets or Sets Suburb"
          },
          "postcode": {
            "type": "string",
            "description": "Gets or Sets Postcode"
          },
          "state": {
            "type": "string",
            "description": "Gets or Sets State"
          },
          "geoLocation": {
            "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.SalesResults.GeoLocation"
          },
          "propertyType": {
            "type": "string",
            "description": "Gets or Sets PropertyType"
          },
          "bedrooms": {
            "type": "integer",
            "description": "Gets or Sets Bedrooms",
            "format": "int32"
          },
          "bathrooms": {
            "type": "integer",
            "description": "Gets or Sets Bathrooms",
            "format": "int32"
          },
          "carspaces": {
            "type": "integer",
            "description": "Gets or Sets Carspaces",
            "format": "int32"
          },
          "price": {
            "type": "integer",
            "description": "Gets or Sets Price",
            "format": "int32"
          },
          "result": {
            "type": "string",
            "description": "Gets or Sets Result"
          },
          "agent": {
            "type": "string",
            "description": "Gets or Sets Agent"
          },
          "id": {
            "type": "integer",
            "description": "Gets or Sets the listing id",
            "format": "int32"
          },
          "agencyId": {
            "type": "integer",
            "description": "Gets or Sets DomainAgencyId",
            "format": "int32"
          },
          "agencyName": {
            "type": "string",
            "description": "Gets or Sets AgencyName"
          },
          "agencyProfilePageUrl": {
            "type": "string",
            "description": "Gets or Sets AgencyProfilePageUrl"
          },
          "propertyDetailsUrl": {
            "type": "string",
            "description": "Gets or Sets DomainPropertyDetailsUrl"
          }
        },
        "description": "Summary of listing details",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Point": {
        "type": "object",
        "properties": {
          "lat": {
            "type": "number",
            "description": "Latitude",
            "format": "double"
          },
          "lon": {
            "type": "number",
            "description": "Longitude",
            "format": "double"
          }
        },
        "description": "A single geographic coordinate",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Locations.Schools.School": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "School identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "School name"
          },
          "type": {
            "type": "string",
            "description": "School type"
          },
          "state": {
            "type": "string",
            "description": "State"
          },
          "localGovernmentArea": {
            "type": "string",
            "description": "Local government area"
          },
          "district": {
            "type": "string",
            "description": "District"
          },
          "postcode": {
            "type": "string",
            "description": "Postcode"
          },
          "suburb": {
            "type": "string",
            "description": "Suburb"
          },
          "street": {
            "type": "string",
            "description": "Street"
          },
          "displayAddress": {
            "type": "string",
            "description": "Display address",
            "readOnly": true
          },
          "phone": {
            "type": "string",
            "description": "Phone number"
          },
          "fax": {
            "type": "string",
            "description": "Fax number"
          },
          "email": {
            "type": "string",
            "description": "Email"
          },
          "websiteUrl": {
            "type": "string",
            "description": "Website"
          },
          "crestUrl": {
            "type": "string",
            "description": "School crest"
          },
          "educationLevel": {
            "type": "string",
            "description": "Education level"
          },
          "gender": {
            "type": "string",
            "description": "Gender"
          },
          "lowYear": {
            "type": "string",
            "description": "Lower year"
          },
          "highYear": {
            "type": "string",
            "description": "Upper year"
          },
          "displayYear": {
            "type": "string",
            "description": "Year diplay",
            "readOnly": true
          },
          "geolocation": {
            "$ref": "#/components/schemas/Domain.Public.Adapter.Web.Api.Models.v1.Point"
          },
          "distanceFromLocation": {
            "type": "number",
            "description": "Distance from search location in metres",
            "format": "double"
          }
        },
        "description": "School",
        "x-data-access-level-info": {
          "Basic": [
            "Id",
            "Name",
            "Type",
            "State",
            "LocalGovernmentArea",
            "District",
            "Postcode",
            "Suburb",
            "Street",
            "DisplayAddress",
            "Phone",
            "Fax",
            "Email",
            "WebsiteUrl",
            "CrestUrl",
            "EducationLevel",
            "Gender",
            "LowYear",
            "HighYear",
            "DisplayYear",
            "Geolocation",
            "DistanceFromLocation"
          ],
          "Detailed": [
            "Id",
            "Name",
            "Type",
            "State",
            "LocalGovernmentArea",
            "District",
            "Postcode",
            "Suburb",
            "Street",
            "DisplayAddress",
            "Phone",
            "Fax",
            "Email",
            "WebsiteUrl",
            "CrestUrl",
            "EducationLevel",
            "Gender",
            "LowYear",
            "HighYear",
            "DisplayYear",
            "Geolocation",
            "DistanceFromLocation"
          ],
          "Full": [
            "Id",
            "Name",
            "Type",
            "State",
            "LocalGovernmentArea",
            "District",
            "Postcode",
            "Suburb",
            "Street",
            "DisplayAddress",
            "Phone",
            "Fax",
            "Email",
            "WebsiteUrl",
            "CrestUrl",
            "EducationLevel",
            "Gender",
            "LowYear",
            "HighYear",
            "DisplayYear",
            "Geolocation",
            "DistanceFromLocation"
          ]
        }
      },
      "Domain.APMService.v2.Model.APMAPIModelsSuburbV2SeriesHeaderModel": {
        "type": "object",
        "properties": {
          "suburb": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "propertyCategory": {
            "type": "string"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.APMService.v2.Model.APMAPIModelsSuburbV2SeriesInfoModel": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "values": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "x-data-access-level-info": {
                "Basic": [
                  "*"
                ],
                "Detailed": [
                  "*"
                ],
                "Full": [
                  "*"
                ]
              }
            },
            "x-data-access-level-info": {
              "Basic": [
                "*"
              ],
              "Detailed": [
                "*"
              ],
              "Full": [
                "*"
              ]
            }
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.APMService.v2.Model.APMAPIModelsSuburbV2SeriesModel": {
        "type": "object",
        "properties": {
          "seriesInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain.APMService.v2.Model.APMAPIModelsSuburbV2SeriesInfoModel"
            }
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.APMService.v2.Model.APMAPIModelsSuburbV2SuburbPerformanceModel": {
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/Domain.APMService.v2.Model.APMAPIModelsSuburbV2SeriesHeaderModel"
          },
          "series": {
            "$ref": "#/components/schemas/Domain.APMService.v2.Model.APMAPIModelsSuburbV2SeriesModel"
          }
        },
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.Public.Adapter.Web.Api.Models.v1.Subscriptions.Subscription": {
        "type": "object",
        "properties": {
          "resourceType": {
            "type": "string",
            "description": "Gets or Sets ResourceType"
          },
          "created": {
            "type": "string",
            "description": "Gets or Sets Created",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "description": "Gets or Sets CreatedBy"
          },
          "ownerId": {
            "type": "string",
            "description": "Gets or Sets OwnerId"
          },
          "ownerType": {
            "type": "string",
            "description": "Gets or Sets OwnerType"
          },
          "subscriberId": {
            "type": "string",
            "description": "Gets or Sets SubscriberId"
          },
          "id": {
            "type": "string",
            "description": "Gets or Sets Id"
          },
          "updated": {
            "type": "string",
            "description": "Gets or Sets Updated",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "string",
            "description": "Gets or Sets UpdatedBy"
          }
        },
        "description": "Subscription",
        "x-data-access-level-info": {
          "Basic": [
            "*"
          ],
          "Detailed": [
            "*"
          ],
          "Full": [
            "*"
          ]
        }
      },
      "Domain.NotificationPortal.v1.Model.AddSubscriptionRequest": {
        "type": "object",
        "properties": {
          "resourceType": {
            "type": "string"
          },
          "ownerType": {
            "type": "string"
          },
          "ownerId": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "apikey": {
        "type": "apiKey",
        "description": "API Key in Header",
        "name": "x-api-key",
        "in": "header"
      },
      "oauth2": {
        "type": "oauth2",
        "description": "OAuth 2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://auth.domain.com.au/v1/connect/token",
            "scopes": {
              "api_addresslocators_read": "api_addresslocators_read",
              "api_agencies_read": "api_agencies_read",
              "api_agencies_write": "api_agencies_write",
              "api_demographics_read": "api_demographics_read",
              "api_enquiries_read": "api_enquiries_read",
              "api_enquiries_write": "api_enquiries_write",
              "api_listings_read": "api_listings_read",
              "api_listings_write": "api_listings_write",
              "api_locations_read": "api_locations_read",
              "api_properties_read": "api_properties_read",
              "api_propertyreports_read": "api_propertyreports_read",
              "api_salesresults_read": "api_salesresults_read",
              "api_statistics_write": "api_statistics_write",
              "api_suburbperformance_read": "api_suburbperformance_read",
              "api_webhooks_write": "api_webhooks_write"
            }
          },
          "authorizationCode": {
            "authorizationUrl": "https://auth.domain.com.au/v1/connect/authorize",
            "tokenUrl": "https://auth.domain.com.au/v1/connect/token",
            "refreshUrl": "https://auth.domain.com.au/v1/connect/token",
            "scopes": {
              "api_addresslocators_read": "api_addresslocators_read",
              "api_agencies_read": "api_agencies_read",
              "api_agencies_write": "api_agencies_write",
              "api_demographics_read": "api_demographics_read",
              "api_enquiries_read": "api_enquiries_read",
              "api_enquiries_write": "api_enquiries_write",
              "api_listings_read": "api_listings_read",
              "api_listings_write": "api_listings_write",
              "api_locations_read": "api_locations_read",
              "api_properties_read": "api_properties_read",
              "api_propertyreports_read": "api_propertyreports_read",
              "api_salesresults_read": "api_salesresults_read",
              "api_statistics_write": "api_statistics_write",
              "api_suburbperformance_read": "api_suburbperformance_read",
              "api_webhooks_write": "api_webhooks_write"
            }
          }
        }
      }
    }
  }
}
