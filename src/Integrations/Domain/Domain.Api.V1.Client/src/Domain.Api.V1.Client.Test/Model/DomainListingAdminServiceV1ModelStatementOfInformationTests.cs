/*
 * Domain Public API
 *
 * See https://developer.domain.com.au for more information
 *
 * The version of the OpenAPI document: v1
 * Contact: api@domain.com.au
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Domain.Api.V1.Client.Api;
using Domain.Api.V1.Client.Model;
using Domain.Api.V1.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Domain.Api.V1.Client.Test.Model
{
    /// <summary>
    ///  Class for testing DomainListingAdminServiceV1ModelStatementOfInformation
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class DomainListingAdminServiceV1ModelStatementOfInformationTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for DomainListingAdminServiceV1ModelStatementOfInformation
        //private DomainListingAdminServiceV1ModelStatementOfInformation instance;

        public DomainListingAdminServiceV1ModelStatementOfInformationTests()
        {
            // TODO uncomment below to create an instance of DomainListingAdminServiceV1ModelStatementOfInformation
            //instance = new DomainListingAdminServiceV1ModelStatementOfInformation();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DomainListingAdminServiceV1ModelStatementOfInformation
        /// </summary>
        [Fact]
        public void DomainListingAdminServiceV1ModelStatementOfInformationInstanceTest()
        {
            // TODO uncomment below to test "IsType" DomainListingAdminServiceV1ModelStatementOfInformation
            //Assert.IsType<DomainListingAdminServiceV1ModelStatementOfInformation>(instance);
        }


        /// <summary>
        /// Test the property 'EstimatedPrice'
        /// </summary>
        [Fact]
        public void EstimatedPriceTest()
        {
            // TODO unit test for the property 'EstimatedPrice'
        }
        /// <summary>
        /// Test the property 'ComparableData'
        /// </summary>
        [Fact]
        public void ComparableDataTest()
        {
            // TODO unit test for the property 'ComparableData'
        }
        /// <summary>
        /// Test the property 'SuburbMedianPrice'
        /// </summary>
        [Fact]
        public void SuburbMedianPriceTest()
        {
            // TODO unit test for the property 'SuburbMedianPrice'
        }
        /// <summary>
        /// Test the property 'DocumentationUrl'
        /// </summary>
        [Fact]
        public void DocumentationUrlTest()
        {
            // TODO unit test for the property 'DocumentationUrl'
        }

    }

}
