/*
 * Domain Public API
 *
 * See https://developer.domain.com.au for more information
 *
 * The version of the OpenAPI document: v1
 * Contact: api@domain.com.au
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Domain.Api.V1.Client.Client.OpenAPIDateConverter;

namespace Domain.Api.V1.Client.Model
{
    /// <summary>
    /// DomainAPMServiceV3ModelAPMAPIModelsTokenisedSearchV3ApmIdModel
    /// </summary>
    [DataContract(Name = "Domain.APMService.v3.Model.APMAPIModelsTokenisedSearchV3ApmIdModel")]
    public partial class DomainAPMServiceV3ModelAPMAPIModelsTokenisedSearchV3ApmIdModel : IEquatable<DomainAPMServiceV3ModelAPMAPIModelsTokenisedSearchV3ApmIdModel>, IValidatableObject
    {
        /// <summary>
        /// Defines Level
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum LevelEnum
        {
            /// <summary>
            /// Enum Address for value: Address
            /// </summary>
            [EnumMember(Value = "Address")]
            Address = 1,

            /// <summary>
            /// Enum Street for value: Street
            /// </summary>
            [EnumMember(Value = "Street")]
            Street = 2,

            /// <summary>
            /// Enum Suburb for value: Suburb
            /// </summary>
            [EnumMember(Value = "Suburb")]
            Suburb = 3,

            /// <summary>
            /// Enum Postcode for value: Postcode
            /// </summary>
            [EnumMember(Value = "Postcode")]
            Postcode = 4,

            /// <summary>
            /// Enum State for value: State
            /// </summary>
            [EnumMember(Value = "State")]
            State = 5

        }

        /// <summary>
        /// Gets or Sets Level
        /// </summary>
        [DataMember(Name = "level", EmitDefaultValue = false)]
        public LevelEnum? Level { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="DomainAPMServiceV3ModelAPMAPIModelsTokenisedSearchV3ApmIdModel" /> class.
        /// </summary>
        /// <param name="level">level.</param>
        /// <param name="id">id.</param>
        public DomainAPMServiceV3ModelAPMAPIModelsTokenisedSearchV3ApmIdModel(LevelEnum? level = default(LevelEnum?), int id = default(int))
        {
            this.Level = level;
            this.Id = id;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DomainAPMServiceV3ModelAPMAPIModelsTokenisedSearchV3ApmIdModel {\n");
            sb.Append("  Level: ").Append(Level).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DomainAPMServiceV3ModelAPMAPIModelsTokenisedSearchV3ApmIdModel);
        }

        /// <summary>
        /// Returns true if DomainAPMServiceV3ModelAPMAPIModelsTokenisedSearchV3ApmIdModel instances are equal
        /// </summary>
        /// <param name="input">Instance of DomainAPMServiceV3ModelAPMAPIModelsTokenisedSearchV3ApmIdModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DomainAPMServiceV3ModelAPMAPIModelsTokenisedSearchV3ApmIdModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Level == input.Level ||
                    this.Level.Equals(input.Level)
                ) && 
                (
                    this.Id == input.Id ||
                    this.Id.Equals(input.Id)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.Level.GetHashCode();
                hashCode = hashCode * 59 + this.Id.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
