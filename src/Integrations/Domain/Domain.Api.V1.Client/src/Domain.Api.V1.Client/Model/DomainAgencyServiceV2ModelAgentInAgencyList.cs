/*
 * Domain Public API
 *
 * See https://developer.domain.com.au for more information
 *
 * The version of the OpenAPI document: v1
 * Contact: api@domain.com.au
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Domain.Api.V1.Client.Client.OpenAPIDateConverter;

namespace Domain.Api.V1.Client.Model
{
    /// <summary>
    /// DomainAgencyServiceV2ModelAgentInAgencyList
    /// </summary>
    [DataContract(Name = "Domain.AgencyService.v2.Model.AgentInAgencyList")]
    public partial class DomainAgencyServiceV2ModelAgentInAgencyList : IEquatable<DomainAgencyServiceV2ModelAgentInAgencyList>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DomainAgencyServiceV2ModelAgentInAgencyList" /> class.
        /// </summary>
        /// <param name="dateUpdated">dateUpdated.</param>
        /// <param name="agencyId">agencyId.</param>
        /// <param name="id">id.</param>
        /// <param name="email">email.</param>
        /// <param name="firstName">firstName.</param>
        /// <param name="mobile">mobile.</param>
        /// <param name="photo">photo.</param>
        /// <param name="lastName">lastName.</param>
        /// <param name="isActiveProfilePage">isActiveProfilePage.</param>
        /// <param name="phone">phone.</param>
        /// <param name="saleActive">saleActive.</param>
        /// <param name="rentalActive">rentalActive.</param>
        /// <param name="secondaryEmail">secondaryEmail.</param>
        /// <param name="facebookUrl">facebookUrl.</param>
        /// <param name="twitterUrl">twitterUrl.</param>
        /// <param name="agentVideo">agentVideo.</param>
        /// <param name="profileText">profileText.</param>
        /// <param name="isHideSoldLeasedListings">isHideSoldLeasedListings.</param>
        /// <param name="googlePlusUrl">googlePlusUrl.</param>
        /// <param name="personalWebsiteUrl">personalWebsiteUrl.</param>
        /// <param name="linkedInUrl">linkedInUrl.</param>
        /// <param name="fax">fax.</param>
        /// <param name="mugShotNew">mugShotNew.</param>
        /// <param name="contactTypeCode">contactTypeCode.</param>
        /// <param name="receivesRequests">receivesRequests.</param>
        /// <param name="creAgentVideoURL">creAgentVideoURL.</param>
        /// <param name="receiveScheduledReportEmail">receiveScheduledReportEmail.</param>
        public DomainAgencyServiceV2ModelAgentInAgencyList(DateTime dateUpdated = default(DateTime), int agencyId = default(int), int id = default(int), string email = default(string), string firstName = default(string), string mobile = default(string), string photo = default(string), string lastName = default(string), string isActiveProfilePage = default(string), string phone = default(string), bool saleActive = default(bool), bool rentalActive = default(bool), string secondaryEmail = default(string), string facebookUrl = default(string), string twitterUrl = default(string), string agentVideo = default(string), string profileText = default(string), bool isHideSoldLeasedListings = default(bool), string googlePlusUrl = default(string), string personalWebsiteUrl = default(string), string linkedInUrl = default(string), string fax = default(string), string mugShotNew = default(string), int contactTypeCode = default(int), bool receivesRequests = default(bool), string creAgentVideoURL = default(string), bool receiveScheduledReportEmail = default(bool))
        {
            this.DateUpdated = dateUpdated;
            this.AgencyId = agencyId;
            this.Id = id;
            this.Email = email;
            this.FirstName = firstName;
            this.Mobile = mobile;
            this.Photo = photo;
            this.LastName = lastName;
            this.IsActiveProfilePage = isActiveProfilePage;
            this.Phone = phone;
            this.SaleActive = saleActive;
            this.RentalActive = rentalActive;
            this.SecondaryEmail = secondaryEmail;
            this.FacebookUrl = facebookUrl;
            this.TwitterUrl = twitterUrl;
            this.AgentVideo = agentVideo;
            this.ProfileText = profileText;
            this.IsHideSoldLeasedListings = isHideSoldLeasedListings;
            this.GooglePlusUrl = googlePlusUrl;
            this.PersonalWebsiteUrl = personalWebsiteUrl;
            this.LinkedInUrl = linkedInUrl;
            this.Fax = fax;
            this.MugShotNew = mugShotNew;
            this.ContactTypeCode = contactTypeCode;
            this.ReceivesRequests = receivesRequests;
            this.CreAgentVideoURL = creAgentVideoURL;
            this.ReceiveScheduledReportEmail = receiveScheduledReportEmail;
        }

        /// <summary>
        /// Gets or Sets DateUpdated
        /// </summary>
        [DataMember(Name = "dateUpdated", EmitDefaultValue = false)]
        public DateTime DateUpdated { get; set; }

        /// <summary>
        /// Gets or Sets AgencyId
        /// </summary>
        [DataMember(Name = "agencyId", EmitDefaultValue = false)]
        public int AgencyId { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name = "email", EmitDefaultValue = false)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets FirstName
        /// </summary>
        [DataMember(Name = "firstName", EmitDefaultValue = false)]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or Sets Mobile
        /// </summary>
        [DataMember(Name = "mobile", EmitDefaultValue = false)]
        public string Mobile { get; set; }

        /// <summary>
        /// Gets or Sets Photo
        /// </summary>
        [DataMember(Name = "photo", EmitDefaultValue = false)]
        public string Photo { get; set; }

        /// <summary>
        /// Gets or Sets LastName
        /// </summary>
        [DataMember(Name = "lastName", EmitDefaultValue = false)]
        public string LastName { get; set; }

        /// <summary>
        /// Gets or Sets IsActiveProfilePage
        /// </summary>
        [DataMember(Name = "isActiveProfilePage", EmitDefaultValue = false)]
        public string IsActiveProfilePage { get; set; }

        /// <summary>
        /// Gets or Sets Phone
        /// </summary>
        [DataMember(Name = "phone", EmitDefaultValue = false)]
        public string Phone { get; set; }

        /// <summary>
        /// Gets or Sets SaleActive
        /// </summary>
        [DataMember(Name = "saleActive", EmitDefaultValue = false)]
        public bool SaleActive { get; set; }

        /// <summary>
        /// Gets or Sets RentalActive
        /// </summary>
        [DataMember(Name = "rentalActive", EmitDefaultValue = false)]
        public bool RentalActive { get; set; }

        /// <summary>
        /// Gets or Sets SecondaryEmail
        /// </summary>
        [DataMember(Name = "secondaryEmail", EmitDefaultValue = false)]
        public string SecondaryEmail { get; set; }

        /// <summary>
        /// Gets or Sets FacebookUrl
        /// </summary>
        [DataMember(Name = "facebookUrl", EmitDefaultValue = false)]
        public string FacebookUrl { get; set; }

        /// <summary>
        /// Gets or Sets TwitterUrl
        /// </summary>
        [DataMember(Name = "twitterUrl", EmitDefaultValue = false)]
        public string TwitterUrl { get; set; }

        /// <summary>
        /// Gets or Sets AgentVideo
        /// </summary>
        [DataMember(Name = "agentVideo", EmitDefaultValue = false)]
        public string AgentVideo { get; set; }

        /// <summary>
        /// Gets or Sets ProfileText
        /// </summary>
        [DataMember(Name = "profileText", EmitDefaultValue = false)]
        public string ProfileText { get; set; }

        /// <summary>
        /// Gets or Sets IsHideSoldLeasedListings
        /// </summary>
        [DataMember(Name = "isHideSoldLeasedListings", EmitDefaultValue = false)]
        public bool IsHideSoldLeasedListings { get; set; }

        /// <summary>
        /// Gets or Sets GooglePlusUrl
        /// </summary>
        [DataMember(Name = "googlePlusUrl", EmitDefaultValue = false)]
        public string GooglePlusUrl { get; set; }

        /// <summary>
        /// Gets or Sets PersonalWebsiteUrl
        /// </summary>
        [DataMember(Name = "personalWebsiteUrl", EmitDefaultValue = false)]
        public string PersonalWebsiteUrl { get; set; }

        /// <summary>
        /// Gets or Sets LinkedInUrl
        /// </summary>
        [DataMember(Name = "linkedInUrl", EmitDefaultValue = false)]
        public string LinkedInUrl { get; set; }

        /// <summary>
        /// Gets or Sets Fax
        /// </summary>
        [DataMember(Name = "fax", EmitDefaultValue = false)]
        public string Fax { get; set; }

        /// <summary>
        /// Gets or Sets MugShotNew
        /// </summary>
        [DataMember(Name = "mugShotNew", EmitDefaultValue = false)]
        public string MugShotNew { get; set; }

        /// <summary>
        /// Gets or Sets ContactTypeCode
        /// </summary>
        [DataMember(Name = "contactTypeCode", EmitDefaultValue = false)]
        public int ContactTypeCode { get; set; }

        /// <summary>
        /// Gets or Sets ReceivesRequests
        /// </summary>
        [DataMember(Name = "receivesRequests", EmitDefaultValue = false)]
        public bool ReceivesRequests { get; set; }

        /// <summary>
        /// Gets or Sets CreAgentVideoURL
        /// </summary>
        [DataMember(Name = "creAgentVideoURL", EmitDefaultValue = false)]
        public string CreAgentVideoURL { get; set; }

        /// <summary>
        /// Gets or Sets ReceiveScheduledReportEmail
        /// </summary>
        [DataMember(Name = "receiveScheduledReportEmail", EmitDefaultValue = false)]
        public bool ReceiveScheduledReportEmail { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DomainAgencyServiceV2ModelAgentInAgencyList {\n");
            sb.Append("  DateUpdated: ").Append(DateUpdated).Append("\n");
            sb.Append("  AgencyId: ").Append(AgencyId).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  Mobile: ").Append(Mobile).Append("\n");
            sb.Append("  Photo: ").Append(Photo).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  IsActiveProfilePage: ").Append(IsActiveProfilePage).Append("\n");
            sb.Append("  Phone: ").Append(Phone).Append("\n");
            sb.Append("  SaleActive: ").Append(SaleActive).Append("\n");
            sb.Append("  RentalActive: ").Append(RentalActive).Append("\n");
            sb.Append("  SecondaryEmail: ").Append(SecondaryEmail).Append("\n");
            sb.Append("  FacebookUrl: ").Append(FacebookUrl).Append("\n");
            sb.Append("  TwitterUrl: ").Append(TwitterUrl).Append("\n");
            sb.Append("  AgentVideo: ").Append(AgentVideo).Append("\n");
            sb.Append("  ProfileText: ").Append(ProfileText).Append("\n");
            sb.Append("  IsHideSoldLeasedListings: ").Append(IsHideSoldLeasedListings).Append("\n");
            sb.Append("  GooglePlusUrl: ").Append(GooglePlusUrl).Append("\n");
            sb.Append("  PersonalWebsiteUrl: ").Append(PersonalWebsiteUrl).Append("\n");
            sb.Append("  LinkedInUrl: ").Append(LinkedInUrl).Append("\n");
            sb.Append("  Fax: ").Append(Fax).Append("\n");
            sb.Append("  MugShotNew: ").Append(MugShotNew).Append("\n");
            sb.Append("  ContactTypeCode: ").Append(ContactTypeCode).Append("\n");
            sb.Append("  ReceivesRequests: ").Append(ReceivesRequests).Append("\n");
            sb.Append("  CreAgentVideoURL: ").Append(CreAgentVideoURL).Append("\n");
            sb.Append("  ReceiveScheduledReportEmail: ").Append(ReceiveScheduledReportEmail).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DomainAgencyServiceV2ModelAgentInAgencyList);
        }

        /// <summary>
        /// Returns true if DomainAgencyServiceV2ModelAgentInAgencyList instances are equal
        /// </summary>
        /// <param name="input">Instance of DomainAgencyServiceV2ModelAgentInAgencyList to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DomainAgencyServiceV2ModelAgentInAgencyList input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.DateUpdated == input.DateUpdated ||
                    (this.DateUpdated != null &&
                    this.DateUpdated.Equals(input.DateUpdated))
                ) && 
                (
                    this.AgencyId == input.AgencyId ||
                    this.AgencyId.Equals(input.AgencyId)
                ) && 
                (
                    this.Id == input.Id ||
                    this.Id.Equals(input.Id)
                ) && 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) && 
                (
                    this.FirstName == input.FirstName ||
                    (this.FirstName != null &&
                    this.FirstName.Equals(input.FirstName))
                ) && 
                (
                    this.Mobile == input.Mobile ||
                    (this.Mobile != null &&
                    this.Mobile.Equals(input.Mobile))
                ) && 
                (
                    this.Photo == input.Photo ||
                    (this.Photo != null &&
                    this.Photo.Equals(input.Photo))
                ) && 
                (
                    this.LastName == input.LastName ||
                    (this.LastName != null &&
                    this.LastName.Equals(input.LastName))
                ) && 
                (
                    this.IsActiveProfilePage == input.IsActiveProfilePage ||
                    (this.IsActiveProfilePage != null &&
                    this.IsActiveProfilePage.Equals(input.IsActiveProfilePage))
                ) && 
                (
                    this.Phone == input.Phone ||
                    (this.Phone != null &&
                    this.Phone.Equals(input.Phone))
                ) && 
                (
                    this.SaleActive == input.SaleActive ||
                    this.SaleActive.Equals(input.SaleActive)
                ) && 
                (
                    this.RentalActive == input.RentalActive ||
                    this.RentalActive.Equals(input.RentalActive)
                ) && 
                (
                    this.SecondaryEmail == input.SecondaryEmail ||
                    (this.SecondaryEmail != null &&
                    this.SecondaryEmail.Equals(input.SecondaryEmail))
                ) && 
                (
                    this.FacebookUrl == input.FacebookUrl ||
                    (this.FacebookUrl != null &&
                    this.FacebookUrl.Equals(input.FacebookUrl))
                ) && 
                (
                    this.TwitterUrl == input.TwitterUrl ||
                    (this.TwitterUrl != null &&
                    this.TwitterUrl.Equals(input.TwitterUrl))
                ) && 
                (
                    this.AgentVideo == input.AgentVideo ||
                    (this.AgentVideo != null &&
                    this.AgentVideo.Equals(input.AgentVideo))
                ) && 
                (
                    this.ProfileText == input.ProfileText ||
                    (this.ProfileText != null &&
                    this.ProfileText.Equals(input.ProfileText))
                ) && 
                (
                    this.IsHideSoldLeasedListings == input.IsHideSoldLeasedListings ||
                    this.IsHideSoldLeasedListings.Equals(input.IsHideSoldLeasedListings)
                ) && 
                (
                    this.GooglePlusUrl == input.GooglePlusUrl ||
                    (this.GooglePlusUrl != null &&
                    this.GooglePlusUrl.Equals(input.GooglePlusUrl))
                ) && 
                (
                    this.PersonalWebsiteUrl == input.PersonalWebsiteUrl ||
                    (this.PersonalWebsiteUrl != null &&
                    this.PersonalWebsiteUrl.Equals(input.PersonalWebsiteUrl))
                ) && 
                (
                    this.LinkedInUrl == input.LinkedInUrl ||
                    (this.LinkedInUrl != null &&
                    this.LinkedInUrl.Equals(input.LinkedInUrl))
                ) && 
                (
                    this.Fax == input.Fax ||
                    (this.Fax != null &&
                    this.Fax.Equals(input.Fax))
                ) && 
                (
                    this.MugShotNew == input.MugShotNew ||
                    (this.MugShotNew != null &&
                    this.MugShotNew.Equals(input.MugShotNew))
                ) && 
                (
                    this.ContactTypeCode == input.ContactTypeCode ||
                    this.ContactTypeCode.Equals(input.ContactTypeCode)
                ) && 
                (
                    this.ReceivesRequests == input.ReceivesRequests ||
                    this.ReceivesRequests.Equals(input.ReceivesRequests)
                ) && 
                (
                    this.CreAgentVideoURL == input.CreAgentVideoURL ||
                    (this.CreAgentVideoURL != null &&
                    this.CreAgentVideoURL.Equals(input.CreAgentVideoURL))
                ) && 
                (
                    this.ReceiveScheduledReportEmail == input.ReceiveScheduledReportEmail ||
                    this.ReceiveScheduledReportEmail.Equals(input.ReceiveScheduledReportEmail)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DateUpdated != null)
                    hashCode = hashCode * 59 + this.DateUpdated.GetHashCode();
                hashCode = hashCode * 59 + this.AgencyId.GetHashCode();
                hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Email != null)
                    hashCode = hashCode * 59 + this.Email.GetHashCode();
                if (this.FirstName != null)
                    hashCode = hashCode * 59 + this.FirstName.GetHashCode();
                if (this.Mobile != null)
                    hashCode = hashCode * 59 + this.Mobile.GetHashCode();
                if (this.Photo != null)
                    hashCode = hashCode * 59 + this.Photo.GetHashCode();
                if (this.LastName != null)
                    hashCode = hashCode * 59 + this.LastName.GetHashCode();
                if (this.IsActiveProfilePage != null)
                    hashCode = hashCode * 59 + this.IsActiveProfilePage.GetHashCode();
                if (this.Phone != null)
                    hashCode = hashCode * 59 + this.Phone.GetHashCode();
                hashCode = hashCode * 59 + this.SaleActive.GetHashCode();
                hashCode = hashCode * 59 + this.RentalActive.GetHashCode();
                if (this.SecondaryEmail != null)
                    hashCode = hashCode * 59 + this.SecondaryEmail.GetHashCode();
                if (this.FacebookUrl != null)
                    hashCode = hashCode * 59 + this.FacebookUrl.GetHashCode();
                if (this.TwitterUrl != null)
                    hashCode = hashCode * 59 + this.TwitterUrl.GetHashCode();
                if (this.AgentVideo != null)
                    hashCode = hashCode * 59 + this.AgentVideo.GetHashCode();
                if (this.ProfileText != null)
                    hashCode = hashCode * 59 + this.ProfileText.GetHashCode();
                hashCode = hashCode * 59 + this.IsHideSoldLeasedListings.GetHashCode();
                if (this.GooglePlusUrl != null)
                    hashCode = hashCode * 59 + this.GooglePlusUrl.GetHashCode();
                if (this.PersonalWebsiteUrl != null)
                    hashCode = hashCode * 59 + this.PersonalWebsiteUrl.GetHashCode();
                if (this.LinkedInUrl != null)
                    hashCode = hashCode * 59 + this.LinkedInUrl.GetHashCode();
                if (this.Fax != null)
                    hashCode = hashCode * 59 + this.Fax.GetHashCode();
                if (this.MugShotNew != null)
                    hashCode = hashCode * 59 + this.MugShotNew.GetHashCode();
                hashCode = hashCode * 59 + this.ContactTypeCode.GetHashCode();
                hashCode = hashCode * 59 + this.ReceivesRequests.GetHashCode();
                if (this.CreAgentVideoURL != null)
                    hashCode = hashCode * 59 + this.CreAgentVideoURL.GetHashCode();
                hashCode = hashCode * 59 + this.ReceiveScheduledReportEmail.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
