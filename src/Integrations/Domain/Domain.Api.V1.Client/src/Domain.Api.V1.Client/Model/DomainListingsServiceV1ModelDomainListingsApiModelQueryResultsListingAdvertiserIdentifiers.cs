/*
 * Domain Public API
 *
 * See https://developer.domain.com.au for more information
 *
 * The version of the OpenAPI document: v1
 * Contact: api@domain.com.au
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Domain.Api.V1.Client.Client.OpenAPIDateConverter;

namespace Domain.Api.V1.Client.Model
{
    /// <summary>
    /// DomainListingsServiceV1ModelDomainListingsApiModelQueryResultsListingAdvertiserIdentifiers
    /// </summary>
    [DataContract(Name = "Domain.ListingsService.v1.Model.DomainListingsApiModelQueryResultsListingAdvertiserIdentifiers")]
    public partial class DomainListingsServiceV1ModelDomainListingsApiModelQueryResultsListingAdvertiserIdentifiers : IEquatable<DomainListingsServiceV1ModelDomainListingsApiModelQueryResultsListingAdvertiserIdentifiers>, IValidatableObject
    {
        /// <summary>
        /// Defines AdvertiserType
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum AdvertiserTypeEnum
        {
            /// <summary>
            /// Enum Agency for value: agency
            /// </summary>
            [EnumMember(Value = "agency")]
            Agency = 1,

            /// <summary>
            /// Enum Private for value: private
            /// </summary>
            [EnumMember(Value = "private")]
            Private = 2

        }

        /// <summary>
        /// Gets or Sets AdvertiserType
        /// </summary>
        [DataMember(Name = "advertiserType", EmitDefaultValue = false)]
        public AdvertiserTypeEnum? AdvertiserType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="DomainListingsServiceV1ModelDomainListingsApiModelQueryResultsListingAdvertiserIdentifiers" /> class.
        /// </summary>
        /// <param name="advertiserType">advertiserType.</param>
        /// <param name="advertiserId">advertiserId.</param>
        /// <param name="contactIds">contactIds.</param>
        /// <param name="agentIds">agentIds.</param>
        /// <param name="conjunctionContactIds">conjunctionContactIds.</param>
        /// <param name="conjunctionAgentIds">conjunctionAgentIds.</param>
        public DomainListingsServiceV1ModelDomainListingsApiModelQueryResultsListingAdvertiserIdentifiers(AdvertiserTypeEnum? advertiserType = default(AdvertiserTypeEnum?), int advertiserId = default(int), List<int> contactIds = default(List<int>), List<string> agentIds = default(List<string>), List<int> conjunctionContactIds = default(List<int>), List<string> conjunctionAgentIds = default(List<string>))
        {
            this.AdvertiserType = advertiserType;
            this.AdvertiserId = advertiserId;
            this.ContactIds = contactIds;
            this.AgentIds = agentIds;
            this.ConjunctionContactIds = conjunctionContactIds;
            this.ConjunctionAgentIds = conjunctionAgentIds;
        }

        /// <summary>
        /// Gets or Sets AdvertiserId
        /// </summary>
        [DataMember(Name = "advertiserId", EmitDefaultValue = false)]
        public int AdvertiserId { get; set; }

        /// <summary>
        /// Gets or Sets ContactIds
        /// </summary>
        [DataMember(Name = "contactIds", EmitDefaultValue = false)]
        public List<int> ContactIds { get; set; }

        /// <summary>
        /// Gets or Sets AgentIds
        /// </summary>
        [DataMember(Name = "agentIds", EmitDefaultValue = false)]
        public List<string> AgentIds { get; set; }

        /// <summary>
        /// Gets or Sets ConjunctionContactIds
        /// </summary>
        [DataMember(Name = "conjunctionContactIds", EmitDefaultValue = false)]
        public List<int> ConjunctionContactIds { get; set; }

        /// <summary>
        /// Gets or Sets ConjunctionAgentIds
        /// </summary>
        [DataMember(Name = "conjunctionAgentIds", EmitDefaultValue = false)]
        public List<string> ConjunctionAgentIds { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DomainListingsServiceV1ModelDomainListingsApiModelQueryResultsListingAdvertiserIdentifiers {\n");
            sb.Append("  AdvertiserType: ").Append(AdvertiserType).Append("\n");
            sb.Append("  AdvertiserId: ").Append(AdvertiserId).Append("\n");
            sb.Append("  ContactIds: ").Append(ContactIds).Append("\n");
            sb.Append("  AgentIds: ").Append(AgentIds).Append("\n");
            sb.Append("  ConjunctionContactIds: ").Append(ConjunctionContactIds).Append("\n");
            sb.Append("  ConjunctionAgentIds: ").Append(ConjunctionAgentIds).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DomainListingsServiceV1ModelDomainListingsApiModelQueryResultsListingAdvertiserIdentifiers);
        }

        /// <summary>
        /// Returns true if DomainListingsServiceV1ModelDomainListingsApiModelQueryResultsListingAdvertiserIdentifiers instances are equal
        /// </summary>
        /// <param name="input">Instance of DomainListingsServiceV1ModelDomainListingsApiModelQueryResultsListingAdvertiserIdentifiers to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DomainListingsServiceV1ModelDomainListingsApiModelQueryResultsListingAdvertiserIdentifiers input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AdvertiserType == input.AdvertiserType ||
                    this.AdvertiserType.Equals(input.AdvertiserType)
                ) && 
                (
                    this.AdvertiserId == input.AdvertiserId ||
                    this.AdvertiserId.Equals(input.AdvertiserId)
                ) && 
                (
                    this.ContactIds == input.ContactIds ||
                    this.ContactIds != null &&
                    input.ContactIds != null &&
                    this.ContactIds.SequenceEqual(input.ContactIds)
                ) && 
                (
                    this.AgentIds == input.AgentIds ||
                    this.AgentIds != null &&
                    input.AgentIds != null &&
                    this.AgentIds.SequenceEqual(input.AgentIds)
                ) && 
                (
                    this.ConjunctionContactIds == input.ConjunctionContactIds ||
                    this.ConjunctionContactIds != null &&
                    input.ConjunctionContactIds != null &&
                    this.ConjunctionContactIds.SequenceEqual(input.ConjunctionContactIds)
                ) && 
                (
                    this.ConjunctionAgentIds == input.ConjunctionAgentIds ||
                    this.ConjunctionAgentIds != null &&
                    input.ConjunctionAgentIds != null &&
                    this.ConjunctionAgentIds.SequenceEqual(input.ConjunctionAgentIds)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.AdvertiserType.GetHashCode();
                hashCode = hashCode * 59 + this.AdvertiserId.GetHashCode();
                if (this.ContactIds != null)
                    hashCode = hashCode * 59 + this.ContactIds.GetHashCode();
                if (this.AgentIds != null)
                    hashCode = hashCode * 59 + this.AgentIds.GetHashCode();
                if (this.ConjunctionContactIds != null)
                    hashCode = hashCode * 59 + this.ConjunctionContactIds.GetHashCode();
                if (this.ConjunctionAgentIds != null)
                    hashCode = hashCode * 59 + this.ConjunctionAgentIds.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
