/*
 * Domain Public API
 *
 * See https://developer.domain.com.au for more information
 *
 * The version of the OpenAPI document: v1
 * Contact: api@domain.com.au
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Domain.Api.V1.Client.Client.OpenAPIDateConverter;

namespace Domain.Api.V1.Client.Model
{
    /// <summary>
    /// PSMA GNAF identifier
    /// </summary>
    [DataContract(Name = "Domain.Public.Adapter.Web.Api.Models.v1.Properties.GnafId")]
    public partial class DomainPublicAdapterWebApiModelsV1PropertiesGnafId : IEquatable<DomainPublicAdapterWebApiModelsV1PropertiesGnafId>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DomainPublicAdapterWebApiModelsV1PropertiesGnafId" /> class.
        /// </summary>
        /// <param name="monthNo">PSMA GNAF Edition Month..</param>
        /// <param name="yearNo">PSMA GNAF Edition Year..</param>
        /// <param name="gnafPID">PSMA GNAF Pid..</param>
        public DomainPublicAdapterWebApiModelsV1PropertiesGnafId(int monthNo = default(int), int yearNo = default(int), string gnafPID = default(string))
        {
            this.MonthNo = monthNo;
            this.YearNo = yearNo;
            this.GnafPID = gnafPID;
        }

        /// <summary>
        /// PSMA GNAF Edition Month.
        /// </summary>
        /// <value>PSMA GNAF Edition Month.</value>
        [DataMember(Name = "monthNo", EmitDefaultValue = false)]
        public int MonthNo { get; set; }

        /// <summary>
        /// PSMA GNAF Edition Year.
        /// </summary>
        /// <value>PSMA GNAF Edition Year.</value>
        [DataMember(Name = "yearNo", EmitDefaultValue = false)]
        public int YearNo { get; set; }

        /// <summary>
        /// PSMA GNAF Pid.
        /// </summary>
        /// <value>PSMA GNAF Pid.</value>
        [DataMember(Name = "gnafPID", EmitDefaultValue = false)]
        public string GnafPID { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DomainPublicAdapterWebApiModelsV1PropertiesGnafId {\n");
            sb.Append("  MonthNo: ").Append(MonthNo).Append("\n");
            sb.Append("  YearNo: ").Append(YearNo).Append("\n");
            sb.Append("  GnafPID: ").Append(GnafPID).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DomainPublicAdapterWebApiModelsV1PropertiesGnafId);
        }

        /// <summary>
        /// Returns true if DomainPublicAdapterWebApiModelsV1PropertiesGnafId instances are equal
        /// </summary>
        /// <param name="input">Instance of DomainPublicAdapterWebApiModelsV1PropertiesGnafId to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DomainPublicAdapterWebApiModelsV1PropertiesGnafId input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.MonthNo == input.MonthNo ||
                    this.MonthNo.Equals(input.MonthNo)
                ) && 
                (
                    this.YearNo == input.YearNo ||
                    this.YearNo.Equals(input.YearNo)
                ) && 
                (
                    this.GnafPID == input.GnafPID ||
                    (this.GnafPID != null &&
                    this.GnafPID.Equals(input.GnafPID))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.MonthNo.GetHashCode();
                hashCode = hashCode * 59 + this.YearNo.GetHashCode();
                if (this.GnafPID != null)
                    hashCode = hashCode * 59 + this.GnafPID.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
