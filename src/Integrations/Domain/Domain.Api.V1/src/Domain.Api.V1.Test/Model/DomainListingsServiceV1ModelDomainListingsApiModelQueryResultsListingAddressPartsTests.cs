/*
 * Domain Public API
 *
 * See https://developer.domain.com.au for more information
 *
 * The version of the OpenAPI document: v1
 * Contact: api@domain.com.au
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Domain.Api.V1.Api;
using Domain.Api.V1.Model;
using Domain.Api.V1.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Domain.Api.V1.Test.Model
{
    /// <summary>
    ///  Class for testing DomainListingsServiceV1ModelDomainListingsApiModelQueryResultsListingAddressParts
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class DomainListingsServiceV1ModelDomainListingsApiModelQueryResultsListingAddressPartsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for DomainListingsServiceV1ModelDomainListingsApiModelQueryResultsListingAddressParts
        //private DomainListingsServiceV1ModelDomainListingsApiModelQueryResultsListingAddressParts instance;

        public DomainListingsServiceV1ModelDomainListingsApiModelQueryResultsListingAddressPartsTests()
        {
            // TODO uncomment below to create an instance of DomainListingsServiceV1ModelDomainListingsApiModelQueryResultsListingAddressParts
            //instance = new DomainListingsServiceV1ModelDomainListingsApiModelQueryResultsListingAddressParts();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DomainListingsServiceV1ModelDomainListingsApiModelQueryResultsListingAddressParts
        /// </summary>
        [Fact]
        public void DomainListingsServiceV1ModelDomainListingsApiModelQueryResultsListingAddressPartsInstanceTest()
        {
            // TODO uncomment below to test "IsType" DomainListingsServiceV1ModelDomainListingsApiModelQueryResultsListingAddressParts
            //Assert.IsType<DomainListingsServiceV1ModelDomainListingsApiModelQueryResultsListingAddressParts>(instance);
        }


        /// <summary>
        /// Test the property 'StateAbbreviation'
        /// </summary>
        [Fact]
        public void StateAbbreviationTest()
        {
            // TODO unit test for the property 'StateAbbreviation'
        }
        /// <summary>
        /// Test the property 'DisplayType'
        /// </summary>
        [Fact]
        public void DisplayTypeTest()
        {
            // TODO unit test for the property 'DisplayType'
        }
        /// <summary>
        /// Test the property 'StreetNumber'
        /// </summary>
        [Fact]
        public void StreetNumberTest()
        {
            // TODO unit test for the property 'StreetNumber'
        }
        /// <summary>
        /// Test the property 'UnitNumber'
        /// </summary>
        [Fact]
        public void UnitNumberTest()
        {
            // TODO unit test for the property 'UnitNumber'
        }
        /// <summary>
        /// Test the property 'Street'
        /// </summary>
        [Fact]
        public void StreetTest()
        {
            // TODO unit test for the property 'Street'
        }
        /// <summary>
        /// Test the property 'Suburb'
        /// </summary>
        [Fact]
        public void SuburbTest()
        {
            // TODO unit test for the property 'Suburb'
        }
        /// <summary>
        /// Test the property 'SuburbId'
        /// </summary>
        [Fact]
        public void SuburbIdTest()
        {
            // TODO unit test for the property 'SuburbId'
        }
        /// <summary>
        /// Test the property 'Postcode'
        /// </summary>
        [Fact]
        public void PostcodeTest()
        {
            // TODO unit test for the property 'Postcode'
        }
        /// <summary>
        /// Test the property 'DisplayAddress'
        /// </summary>
        [Fact]
        public void DisplayAddressTest()
        {
            // TODO unit test for the property 'DisplayAddress'
        }

    }

}
