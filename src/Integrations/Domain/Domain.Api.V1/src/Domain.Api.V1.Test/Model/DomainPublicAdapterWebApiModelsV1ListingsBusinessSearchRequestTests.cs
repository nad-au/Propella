/*
 * Domain Public API
 *
 * See https://developer.domain.com.au for more information
 *
 * The version of the OpenAPI document: v1
 * Contact: api@domain.com.au
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Domain.Api.V1.Api;
using Domain.Api.V1.Model;
using Domain.Api.V1.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Domain.Api.V1.Test.Model
{
    /// <summary>
    ///  Class for testing DomainPublicAdapterWebApiModelsV1ListingsBusinessSearchRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class DomainPublicAdapterWebApiModelsV1ListingsBusinessSearchRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for DomainPublicAdapterWebApiModelsV1ListingsBusinessSearchRequest
        //private DomainPublicAdapterWebApiModelsV1ListingsBusinessSearchRequest instance;

        public DomainPublicAdapterWebApiModelsV1ListingsBusinessSearchRequestTests()
        {
            // TODO uncomment below to create an instance of DomainPublicAdapterWebApiModelsV1ListingsBusinessSearchRequest
            //instance = new DomainPublicAdapterWebApiModelsV1ListingsBusinessSearchRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DomainPublicAdapterWebApiModelsV1ListingsBusinessSearchRequest
        /// </summary>
        [Fact]
        public void DomainPublicAdapterWebApiModelsV1ListingsBusinessSearchRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" DomainPublicAdapterWebApiModelsV1ListingsBusinessSearchRequest
            //Assert.IsType<DomainPublicAdapterWebApiModelsV1ListingsBusinessSearchRequest>(instance);
        }


        /// <summary>
        /// Test the property 'PageNumber'
        /// </summary>
        [Fact]
        public void PageNumberTest()
        {
            // TODO unit test for the property 'PageNumber'
        }
        /// <summary>
        /// Test the property 'AdvertiserId'
        /// </summary>
        [Fact]
        public void AdvertiserIdTest()
        {
            // TODO unit test for the property 'AdvertiserId'
        }
        /// <summary>
        /// Test the property 'PropertyTypes'
        /// </summary>
        [Fact]
        public void PropertyTypesTest()
        {
            // TODO unit test for the property 'PropertyTypes'
        }
        /// <summary>
        /// Test the property 'Keywords'
        /// </summary>
        [Fact]
        public void KeywordsTest()
        {
            // TODO unit test for the property 'Keywords'
        }
        /// <summary>
        /// Test the property 'BrandId'
        /// </summary>
        [Fact]
        public void BrandIdTest()
        {
            // TODO unit test for the property 'BrandId'
        }
        /// <summary>
        /// Test the property 'FranchiseGroupId'
        /// </summary>
        [Fact]
        public void FranchiseGroupIdTest()
        {
            // TODO unit test for the property 'FranchiseGroupId'
        }
        /// <summary>
        /// Test the property 'Locations'
        /// </summary>
        [Fact]
        public void LocationsTest()
        {
            // TODO unit test for the property 'Locations'
        }
        /// <summary>
        /// Test the property 'PageSize'
        /// </summary>
        [Fact]
        public void PageSizeTest()
        {
            // TODO unit test for the property 'PageSize'
        }
        /// <summary>
        /// Test the property 'Price'
        /// </summary>
        [Fact]
        public void PriceTest()
        {
            // TODO unit test for the property 'Price'
        }
        /// <summary>
        /// Test the property 'Sort'
        /// </summary>
        [Fact]
        public void SortTest()
        {
            // TODO unit test for the property 'Sort'
        }
        /// <summary>
        /// Test the property 'SearchMode'
        /// </summary>
        [Fact]
        public void SearchModeTest()
        {
            // TODO unit test for the property 'SearchMode'
        }

    }

}
