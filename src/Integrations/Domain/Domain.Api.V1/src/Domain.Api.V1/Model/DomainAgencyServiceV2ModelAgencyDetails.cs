/*
 * Domain Public API
 *
 * See https://developer.domain.com.au for more information
 *
 * The version of the OpenAPI document: v1
 * Contact: api@domain.com.au
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Domain.Api.V1.Client.OpenAPIDateConverter;

namespace Domain.Api.V1.Model
{
    /// <summary>
    /// DomainAgencyServiceV2ModelAgencyDetails
    /// </summary>
    [DataContract(Name = "Domain.AgencyService.v2.Model.AgencyDetails")]
    public partial class DomainAgencyServiceV2ModelAgencyDetails : IEquatable<DomainAgencyServiceV2ModelAgencyDetails>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DomainAgencyServiceV2ModelAgencyDetails" /> class.
        /// </summary>
        /// <param name="streetAddress1">streetAddress1.</param>
        /// <param name="streetAddress2">streetAddress2.</param>
        /// <param name="suburb">suburb.</param>
        /// <param name="state">state.</param>
        /// <param name="postcode">postcode.</param>
        /// <param name="agencyWebsite">agencyWebsite.</param>
        /// <param name="principalName">principalName.</param>
        /// <param name="principalEmail">principalEmail.</param>
        /// <param name="showPastSalesPrices">showPastSalesPrices.</param>
        /// <param name="isAgencyReportEnabled">isAgencyReportEnabled.</param>
        /// <param name="salesEmail">salesEmail.</param>
        /// <param name="rentalEmail">rentalEmail.</param>
        /// <param name="isPromotionalTelephoneActive">isPromotionalTelephoneActive.</param>
        /// <param name="hideMarketPriceEstimate">hideMarketPriceEstimate.</param>
        /// <param name="limitEmailDomain">limitEmailDomain.</param>
        /// <param name="showTabSoldLastYear">showTabSoldLastYear.</param>
        public DomainAgencyServiceV2ModelAgencyDetails(string streetAddress1 = default(string), string streetAddress2 = default(string), string suburb = default(string), string state = default(string), string postcode = default(string), string agencyWebsite = default(string), string principalName = default(string), string principalEmail = default(string), bool showPastSalesPrices = default(bool), bool isAgencyReportEnabled = default(bool), string salesEmail = default(string), string rentalEmail = default(string), bool isPromotionalTelephoneActive = default(bool), bool hideMarketPriceEstimate = default(bool), bool limitEmailDomain = default(bool), bool showTabSoldLastYear = default(bool))
        {
            this.StreetAddress1 = streetAddress1;
            this.StreetAddress2 = streetAddress2;
            this.Suburb = suburb;
            this.State = state;
            this.Postcode = postcode;
            this.AgencyWebsite = agencyWebsite;
            this.PrincipalName = principalName;
            this.PrincipalEmail = principalEmail;
            this.ShowPastSalesPrices = showPastSalesPrices;
            this.IsAgencyReportEnabled = isAgencyReportEnabled;
            this.SalesEmail = salesEmail;
            this.RentalEmail = rentalEmail;
            this.IsPromotionalTelephoneActive = isPromotionalTelephoneActive;
            this.HideMarketPriceEstimate = hideMarketPriceEstimate;
            this.LimitEmailDomain = limitEmailDomain;
            this.ShowTabSoldLastYear = showTabSoldLastYear;
        }

        /// <summary>
        /// Gets or Sets StreetAddress1
        /// </summary>
        [DataMember(Name = "streetAddress1", EmitDefaultValue = false)]
        public string StreetAddress1 { get; set; }

        /// <summary>
        /// Gets or Sets StreetAddress2
        /// </summary>
        [DataMember(Name = "streetAddress2", EmitDefaultValue = false)]
        public string StreetAddress2 { get; set; }

        /// <summary>
        /// Gets or Sets Suburb
        /// </summary>
        [DataMember(Name = "suburb", EmitDefaultValue = false)]
        public string Suburb { get; set; }

        /// <summary>
        /// Gets or Sets State
        /// </summary>
        [DataMember(Name = "state", EmitDefaultValue = false)]
        public string State { get; set; }

        /// <summary>
        /// Gets or Sets Postcode
        /// </summary>
        [DataMember(Name = "postcode", EmitDefaultValue = false)]
        public string Postcode { get; set; }

        /// <summary>
        /// Gets or Sets AgencyWebsite
        /// </summary>
        [DataMember(Name = "agencyWebsite", EmitDefaultValue = false)]
        public string AgencyWebsite { get; set; }

        /// <summary>
        /// Gets or Sets PrincipalName
        /// </summary>
        [DataMember(Name = "principalName", EmitDefaultValue = false)]
        public string PrincipalName { get; set; }

        /// <summary>
        /// Gets or Sets PrincipalEmail
        /// </summary>
        [DataMember(Name = "principalEmail", EmitDefaultValue = false)]
        public string PrincipalEmail { get; set; }

        /// <summary>
        /// Gets or Sets ShowPastSalesPrices
        /// </summary>
        [DataMember(Name = "showPastSalesPrices", EmitDefaultValue = false)]
        public bool ShowPastSalesPrices { get; set; }

        /// <summary>
        /// Gets or Sets IsAgencyReportEnabled
        /// </summary>
        [DataMember(Name = "isAgencyReportEnabled", EmitDefaultValue = false)]
        public bool IsAgencyReportEnabled { get; set; }

        /// <summary>
        /// Gets or Sets SalesEmail
        /// </summary>
        [DataMember(Name = "salesEmail", EmitDefaultValue = false)]
        public string SalesEmail { get; set; }

        /// <summary>
        /// Gets or Sets RentalEmail
        /// </summary>
        [DataMember(Name = "rentalEmail", EmitDefaultValue = false)]
        public string RentalEmail { get; set; }

        /// <summary>
        /// Gets or Sets IsPromotionalTelephoneActive
        /// </summary>
        [DataMember(Name = "isPromotionalTelephoneActive", EmitDefaultValue = false)]
        public bool IsPromotionalTelephoneActive { get; set; }

        /// <summary>
        /// Gets or Sets HideMarketPriceEstimate
        /// </summary>
        [DataMember(Name = "hideMarketPriceEstimate", EmitDefaultValue = false)]
        public bool HideMarketPriceEstimate { get; set; }

        /// <summary>
        /// Gets or Sets LimitEmailDomain
        /// </summary>
        [DataMember(Name = "limitEmailDomain", EmitDefaultValue = false)]
        public bool LimitEmailDomain { get; set; }

        /// <summary>
        /// Gets or Sets ShowTabSoldLastYear
        /// </summary>
        [DataMember(Name = "showTabSoldLastYear", EmitDefaultValue = false)]
        public bool ShowTabSoldLastYear { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DomainAgencyServiceV2ModelAgencyDetails {\n");
            sb.Append("  StreetAddress1: ").Append(StreetAddress1).Append("\n");
            sb.Append("  StreetAddress2: ").Append(StreetAddress2).Append("\n");
            sb.Append("  Suburb: ").Append(Suburb).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  Postcode: ").Append(Postcode).Append("\n");
            sb.Append("  AgencyWebsite: ").Append(AgencyWebsite).Append("\n");
            sb.Append("  PrincipalName: ").Append(PrincipalName).Append("\n");
            sb.Append("  PrincipalEmail: ").Append(PrincipalEmail).Append("\n");
            sb.Append("  ShowPastSalesPrices: ").Append(ShowPastSalesPrices).Append("\n");
            sb.Append("  IsAgencyReportEnabled: ").Append(IsAgencyReportEnabled).Append("\n");
            sb.Append("  SalesEmail: ").Append(SalesEmail).Append("\n");
            sb.Append("  RentalEmail: ").Append(RentalEmail).Append("\n");
            sb.Append("  IsPromotionalTelephoneActive: ").Append(IsPromotionalTelephoneActive).Append("\n");
            sb.Append("  HideMarketPriceEstimate: ").Append(HideMarketPriceEstimate).Append("\n");
            sb.Append("  LimitEmailDomain: ").Append(LimitEmailDomain).Append("\n");
            sb.Append("  ShowTabSoldLastYear: ").Append(ShowTabSoldLastYear).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DomainAgencyServiceV2ModelAgencyDetails);
        }

        /// <summary>
        /// Returns true if DomainAgencyServiceV2ModelAgencyDetails instances are equal
        /// </summary>
        /// <param name="input">Instance of DomainAgencyServiceV2ModelAgencyDetails to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DomainAgencyServiceV2ModelAgencyDetails input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.StreetAddress1 == input.StreetAddress1 ||
                    (this.StreetAddress1 != null &&
                    this.StreetAddress1.Equals(input.StreetAddress1))
                ) && 
                (
                    this.StreetAddress2 == input.StreetAddress2 ||
                    (this.StreetAddress2 != null &&
                    this.StreetAddress2.Equals(input.StreetAddress2))
                ) && 
                (
                    this.Suburb == input.Suburb ||
                    (this.Suburb != null &&
                    this.Suburb.Equals(input.Suburb))
                ) && 
                (
                    this.State == input.State ||
                    (this.State != null &&
                    this.State.Equals(input.State))
                ) && 
                (
                    this.Postcode == input.Postcode ||
                    (this.Postcode != null &&
                    this.Postcode.Equals(input.Postcode))
                ) && 
                (
                    this.AgencyWebsite == input.AgencyWebsite ||
                    (this.AgencyWebsite != null &&
                    this.AgencyWebsite.Equals(input.AgencyWebsite))
                ) && 
                (
                    this.PrincipalName == input.PrincipalName ||
                    (this.PrincipalName != null &&
                    this.PrincipalName.Equals(input.PrincipalName))
                ) && 
                (
                    this.PrincipalEmail == input.PrincipalEmail ||
                    (this.PrincipalEmail != null &&
                    this.PrincipalEmail.Equals(input.PrincipalEmail))
                ) && 
                (
                    this.ShowPastSalesPrices == input.ShowPastSalesPrices ||
                    this.ShowPastSalesPrices.Equals(input.ShowPastSalesPrices)
                ) && 
                (
                    this.IsAgencyReportEnabled == input.IsAgencyReportEnabled ||
                    this.IsAgencyReportEnabled.Equals(input.IsAgencyReportEnabled)
                ) && 
                (
                    this.SalesEmail == input.SalesEmail ||
                    (this.SalesEmail != null &&
                    this.SalesEmail.Equals(input.SalesEmail))
                ) && 
                (
                    this.RentalEmail == input.RentalEmail ||
                    (this.RentalEmail != null &&
                    this.RentalEmail.Equals(input.RentalEmail))
                ) && 
                (
                    this.IsPromotionalTelephoneActive == input.IsPromotionalTelephoneActive ||
                    this.IsPromotionalTelephoneActive.Equals(input.IsPromotionalTelephoneActive)
                ) && 
                (
                    this.HideMarketPriceEstimate == input.HideMarketPriceEstimate ||
                    this.HideMarketPriceEstimate.Equals(input.HideMarketPriceEstimate)
                ) && 
                (
                    this.LimitEmailDomain == input.LimitEmailDomain ||
                    this.LimitEmailDomain.Equals(input.LimitEmailDomain)
                ) && 
                (
                    this.ShowTabSoldLastYear == input.ShowTabSoldLastYear ||
                    this.ShowTabSoldLastYear.Equals(input.ShowTabSoldLastYear)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.StreetAddress1 != null)
                    hashCode = hashCode * 59 + this.StreetAddress1.GetHashCode();
                if (this.StreetAddress2 != null)
                    hashCode = hashCode * 59 + this.StreetAddress2.GetHashCode();
                if (this.Suburb != null)
                    hashCode = hashCode * 59 + this.Suburb.GetHashCode();
                if (this.State != null)
                    hashCode = hashCode * 59 + this.State.GetHashCode();
                if (this.Postcode != null)
                    hashCode = hashCode * 59 + this.Postcode.GetHashCode();
                if (this.AgencyWebsite != null)
                    hashCode = hashCode * 59 + this.AgencyWebsite.GetHashCode();
                if (this.PrincipalName != null)
                    hashCode = hashCode * 59 + this.PrincipalName.GetHashCode();
                if (this.PrincipalEmail != null)
                    hashCode = hashCode * 59 + this.PrincipalEmail.GetHashCode();
                hashCode = hashCode * 59 + this.ShowPastSalesPrices.GetHashCode();
                hashCode = hashCode * 59 + this.IsAgencyReportEnabled.GetHashCode();
                if (this.SalesEmail != null)
                    hashCode = hashCode * 59 + this.SalesEmail.GetHashCode();
                if (this.RentalEmail != null)
                    hashCode = hashCode * 59 + this.RentalEmail.GetHashCode();
                hashCode = hashCode * 59 + this.IsPromotionalTelephoneActive.GetHashCode();
                hashCode = hashCode * 59 + this.HideMarketPriceEstimate.GetHashCode();
                hashCode = hashCode * 59 + this.LimitEmailDomain.GetHashCode();
                hashCode = hashCode * 59 + this.ShowTabSoldLastYear.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
