/*
 * Domain Public API
 *
 * See https://developer.domain.com.au for more information
 *
 * The version of the OpenAPI document: v1
 * Contact: api@domain.com.au
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Domain.Api.V1.Client.OpenAPIDateConverter;

namespace Domain.Api.V1.Model
{
    /// <summary>
    /// Phone number details
    /// </summary>
    [DataContract(Name = "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.PhoneNumber")]
    public partial class DomainPublicAdapterWebApiModelsV1ListingsBusinessPhoneNumber : IEquatable<DomainPublicAdapterWebApiModelsV1ListingsBusinessPhoneNumber>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DomainPublicAdapterWebApiModelsV1ListingsBusinessPhoneNumber" /> class.
        /// </summary>
        /// <param name="displayLabel">Diplay label.</param>
        /// <param name="type">Type: \\\&quot;fax\\\&quot;, \\\&quot;mobile\\\&quot;, \\\&quot;telephone\\\&quot;.</param>
        /// <param name="number">Phone number.</param>
        public DomainPublicAdapterWebApiModelsV1ListingsBusinessPhoneNumber(string displayLabel = default(string), string type = default(string), string number = default(string))
        {
            this.DisplayLabel = displayLabel;
            this.Type = type;
            this.Number = number;
        }

        /// <summary>
        /// Diplay label
        /// </summary>
        /// <value>Diplay label</value>
        [DataMember(Name = "displayLabel", EmitDefaultValue = false)]
        public string DisplayLabel { get; set; }

        /// <summary>
        /// Type: \\\&quot;fax\\\&quot;, \\\&quot;mobile\\\&quot;, \\\&quot;telephone\\\&quot;
        /// </summary>
        /// <value>Type: \\\&quot;fax\\\&quot;, \\\&quot;mobile\\\&quot;, \\\&quot;telephone\\\&quot;</value>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public string Type { get; set; }

        /// <summary>
        /// Phone number
        /// </summary>
        /// <value>Phone number</value>
        [DataMember(Name = "number", EmitDefaultValue = false)]
        public string Number { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DomainPublicAdapterWebApiModelsV1ListingsBusinessPhoneNumber {\n");
            sb.Append("  DisplayLabel: ").Append(DisplayLabel).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Number: ").Append(Number).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DomainPublicAdapterWebApiModelsV1ListingsBusinessPhoneNumber);
        }

        /// <summary>
        /// Returns true if DomainPublicAdapterWebApiModelsV1ListingsBusinessPhoneNumber instances are equal
        /// </summary>
        /// <param name="input">Instance of DomainPublicAdapterWebApiModelsV1ListingsBusinessPhoneNumber to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DomainPublicAdapterWebApiModelsV1ListingsBusinessPhoneNumber input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.DisplayLabel == input.DisplayLabel ||
                    (this.DisplayLabel != null &&
                    this.DisplayLabel.Equals(input.DisplayLabel))
                ) && 
                (
                    this.Type == input.Type ||
                    (this.Type != null &&
                    this.Type.Equals(input.Type))
                ) && 
                (
                    this.Number == input.Number ||
                    (this.Number != null &&
                    this.Number.Equals(input.Number))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DisplayLabel != null)
                    hashCode = hashCode * 59 + this.DisplayLabel.GetHashCode();
                if (this.Type != null)
                    hashCode = hashCode * 59 + this.Type.GetHashCode();
                if (this.Number != null)
                    hashCode = hashCode * 59 + this.Number.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
