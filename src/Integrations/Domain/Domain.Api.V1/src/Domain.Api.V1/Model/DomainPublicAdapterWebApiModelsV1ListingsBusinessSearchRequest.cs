/*
 * Domain Public API
 *
 * See https://developer.domain.com.au for more information
 *
 * The version of the OpenAPI document: v1
 * Contact: api@domain.com.au
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Domain.Api.V1.Client.OpenAPIDateConverter;

namespace Domain.Api.V1.Model
{
    /// <summary>
    /// Represents a CRE Business Search Request
    /// </summary>
    [DataContract(Name = "Domain.Public.Adapter.Web.Api.Models.v1.Listings.Business.SearchRequest")]
    public partial class DomainPublicAdapterWebApiModelsV1ListingsBusinessSearchRequest : IEquatable<DomainPublicAdapterWebApiModelsV1ListingsBusinessSearchRequest>, IValidatableObject
    {
        /// <summary>
        /// Defines PropertyTypes
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum PropertyTypesEnum
        {
            /// <summary>
            /// Enum Unknown for value: unknown
            /// </summary>
            [EnumMember(Value = "unknown")]
            Unknown = 1,

            /// <summary>
            /// Enum AccessoriesParts for value: accessoriesParts
            /// </summary>
            [EnumMember(Value = "accessoriesParts")]
            AccessoriesParts = 2,

            /// <summary>
            /// Enum AccommodationTourism for value: accommodationTourism
            /// </summary>
            [EnumMember(Value = "accommodationTourism")]
            AccommodationTourism = 3,

            /// <summary>
            /// Enum Accounting for value: accounting
            /// </summary>
            [EnumMember(Value = "accounting")]
            Accounting = 4,

            /// <summary>
            /// Enum AcreageSemiRural for value: acreageSemiRural
            /// </summary>
            [EnumMember(Value = "acreageSemiRural")]
            AcreageSemiRural = 5,

            /// <summary>
            /// Enum Adult for value: adult
            /// </summary>
            [EnumMember(Value = "adult")]
            Adult = 6,

            /// <summary>
            /// Enum AdvertisingMarketing for value: advertisingMarketing
            /// </summary>
            [EnumMember(Value = "advertisingMarketing")]
            AdvertisingMarketing = 7,

            /// <summary>
            /// Enum Aerial for value: aerial
            /// </summary>
            [EnumMember(Value = "aerial")]
            Aerial = 8,

            /// <summary>
            /// Enum Aeronautical for value: aeronautical
            /// </summary>
            [EnumMember(Value = "aeronautical")]
            Aeronautical = 9,

            /// <summary>
            /// Enum AgedCare for value: agedCare
            /// </summary>
            [EnumMember(Value = "agedCare")]
            AgedCare = 10,

            /// <summary>
            /// Enum Agricultural for value: agricultural
            /// </summary>
            [EnumMember(Value = "agricultural")]
            Agricultural = 11,

            /// <summary>
            /// Enum Air for value: air
            /// </summary>
            [EnumMember(Value = "air")]
            Air = 12,

            /// <summary>
            /// Enum Aircraft for value: aircraft
            /// </summary>
            [EnumMember(Value = "aircraft")]
            Aircraft = 13,

            /// <summary>
            /// Enum Alarms for value: alarms
            /// </summary>
            [EnumMember(Value = "alarms")]
            Alarms = 14,

            /// <summary>
            /// Enum AlcoholLiquor for value: alcoholLiquor
            /// </summary>
            [EnumMember(Value = "alcoholLiquor")]
            AlcoholLiquor = 15,

            /// <summary>
            /// Enum Amusements for value: amusements
            /// </summary>
            [EnumMember(Value = "amusements")]
            Amusements = 16,

            /// <summary>
            /// Enum AnimalRelated for value: animalRelated
            /// </summary>
            [EnumMember(Value = "animalRelated")]
            AnimalRelated = 17,

            /// <summary>
            /// Enum ApartmentUnitFlat for value: apartmentUnitFlat
            /// </summary>
            [EnumMember(Value = "apartmentUnitFlat")]
            ApartmentUnitFlat = 18,

            /// <summary>
            /// Enum Aquaculture for value: aquaculture
            /// </summary>
            [EnumMember(Value = "aquaculture")]
            Aquaculture = 19,

            /// <summary>
            /// Enum AquaticMarineMarinaBerth for value: aquaticMarineMarinaBerth
            /// </summary>
            [EnumMember(Value = "aquaticMarineMarinaBerth")]
            AquaticMarineMarinaBerth = 20,

            /// <summary>
            /// Enum ArtsCrafts for value: artsCrafts
            /// </summary>
            [EnumMember(Value = "artsCrafts")]
            ArtsCrafts = 21,

            /// <summary>
            /// Enum AutoElectrical for value: autoElectrical
            /// </summary>
            [EnumMember(Value = "autoElectrical")]
            AutoElectrical = 22,

            /// <summary>
            /// Enum Automotive for value: automotive
            /// </summary>
            [EnumMember(Value = "automotive")]
            Automotive = 23,

            /// <summary>
            /// Enum BackpackerHostel for value: backpackerHostel
            /// </summary>
            [EnumMember(Value = "backpackerHostel")]
            BackpackerHostel = 24,

            /// <summary>
            /// Enum Bakery for value: bakery
            /// </summary>
            [EnumMember(Value = "bakery")]
            Bakery = 25,

            /// <summary>
            /// Enum BarsNightclubs for value: barsNightclubs
            /// </summary>
            [EnumMember(Value = "barsNightclubs")]
            BarsNightclubs = 26,

            /// <summary>
            /// Enum BeautyHealth for value: beautyHealth
            /// </summary>
            [EnumMember(Value = "beautyHealth")]
            BeautyHealth = 27,

            /// <summary>
            /// Enum BeautyProducts for value: beautyProducts
            /// </summary>
            [EnumMember(Value = "beautyProducts")]
            BeautyProducts = 28,

            /// <summary>
            /// Enum BeautySalon for value: beautySalon
            /// </summary>
            [EnumMember(Value = "beautySalon")]
            BeautySalon = 29,

            /// <summary>
            /// Enum BedAndBreakfast for value: bedAndBreakfast
            /// </summary>
            [EnumMember(Value = "bedAndBreakfast")]
            BedAndBreakfast = 30,

            /// <summary>
            /// Enum BikeAndMotorcycle for value: bikeAndMotorcycle
            /// </summary>
            [EnumMember(Value = "bikeAndMotorcycle")]
            BikeAndMotorcycle = 31,

            /// <summary>
            /// Enum BlockOfUnits for value: blockOfUnits
            /// </summary>
            [EnumMember(Value = "blockOfUnits")]
            BlockOfUnits = 32,

            /// <summary>
            /// Enum BoardingKennels for value: boardingKennels
            /// </summary>
            [EnumMember(Value = "boardingKennels")]
            BoardingKennels = 33,

            /// <summary>
            /// Enum BoatsMarineMarinaBerth for value: boatsMarineMarinaBerth
            /// </summary>
            [EnumMember(Value = "boatsMarineMarinaBerth")]
            BoatsMarineMarinaBerth = 34,

            /// <summary>
            /// Enum Bookkeeping for value: bookkeeping
            /// </summary>
            [EnumMember(Value = "bookkeeping")]
            Bookkeeping = 35,

            /// <summary>
            /// Enum Brokerage for value: brokerage
            /// </summary>
            [EnumMember(Value = "brokerage")]
            Brokerage = 36,

            /// <summary>
            /// Enum Builder for value: builder
            /// </summary>
            [EnumMember(Value = "builder")]
            Builder = 37,

            /// <summary>
            /// Enum BuildingAndConstruction for value: buildingAndConstruction
            /// </summary>
            [EnumMember(Value = "buildingAndConstruction")]
            BuildingAndConstruction = 38,

            /// <summary>
            /// Enum Bus for value: bus
            /// </summary>
            [EnumMember(Value = "bus")]
            Bus = 39,

            /// <summary>
            /// Enum Butcher for value: butcher
            /// </summary>
            [EnumMember(Value = "butcher")]
            Butcher = 40,

            /// <summary>
            /// Enum CafeCoffeeShop for value: cafeCoffeeShop
            /// </summary>
            [EnumMember(Value = "cafeCoffeeShop")]
            CafeCoffeeShop = 41,

            /// <summary>
            /// Enum Car for value: car
            /// </summary>
            [EnumMember(Value = "car")]
            Car = 42,

            /// <summary>
            /// Enum CarBusTruck for value: carBusTruck
            /// </summary>
            [EnumMember(Value = "carBusTruck")]
            CarBusTruck = 43,

            /// <summary>
            /// Enum CarDealership for value: carDealership
            /// </summary>
            [EnumMember(Value = "carDealership")]
            CarDealership = 44,

            /// <summary>
            /// Enum CarRental for value: carRental
            /// </summary>
            [EnumMember(Value = "carRental")]
            CarRental = 45,

            /// <summary>
            /// Enum CarSpace for value: carSpace
            /// </summary>
            [EnumMember(Value = "carSpace")]
            CarSpace = 46,

            /// <summary>
            /// Enum CarWash for value: carWash
            /// </summary>
            [EnumMember(Value = "carWash")]
            CarWash = 47,

            /// <summary>
            /// Enum CaravanPark for value: caravanPark
            /// </summary>
            [EnumMember(Value = "caravanPark")]
            CaravanPark = 48,

            /// <summary>
            /// Enum Carpenter for value: carpenter
            /// </summary>
            [EnumMember(Value = "carpenter")]
            Carpenter = 49,

            /// <summary>
            /// Enum Catering for value: catering
            /// </summary>
            [EnumMember(Value = "catering")]
            Catering = 50,

            /// <summary>
            /// Enum ChildCare for value: childCare
            /// </summary>
            [EnumMember(Value = "childCare")]
            ChildCare = 51,

            /// <summary>
            /// Enum Civil for value: civil
            /// </summary>
            [EnumMember(Value = "civil")]
            Civil = 52,

            /// <summary>
            /// Enum Cleaning for value: cleaning
            /// </summary>
            [EnumMember(Value = "cleaning")]
            Cleaning = 53,

            /// <summary>
            /// Enum CleaningAndMaintenance for value: cleaningAndMaintenance
            /// </summary>
            [EnumMember(Value = "cleaningAndMaintenance")]
            CleaningAndMaintenance = 54,

            /// <summary>
            /// Enum ClinicalPractice for value: clinicalPractice
            /// </summary>
            [EnumMember(Value = "clinicalPractice")]
            ClinicalPractice = 55,

            /// <summary>
            /// Enum ClothingAccessories for value: clothingAccessories
            /// </summary>
            [EnumMember(Value = "clothingAccessories")]
            ClothingAccessories = 56,

            /// <summary>
            /// Enum ClothingFootwear for value: clothingFootwear
            /// </summary>
            [EnumMember(Value = "clothingFootwear")]
            ClothingFootwear = 57,

            /// <summary>
            /// Enum Communication for value: communication
            /// </summary>
            [EnumMember(Value = "communication")]
            Communication = 58,

            /// <summary>
            /// Enum Communications for value: communications
            /// </summary>
            [EnumMember(Value = "communications")]
            Communications = 59,

            /// <summary>
            /// Enum ComputerIT for value: computerIT
            /// </summary>
            [EnumMember(Value = "computerIT")]
            ComputerIT = 60,

            /// <summary>
            /// Enum ComputerAndInternet for value: computerAndInternet
            /// </summary>
            [EnumMember(Value = "computerAndInternet")]
            ComputerAndInternet = 61,

            /// <summary>
            /// Enum Construction for value: construction
            /// </summary>
            [EnumMember(Value = "construction")]
            Construction = 62,

            /// <summary>
            /// Enum ConvenienceStore for value: convenienceStore
            /// </summary>
            [EnumMember(Value = "convenienceStore")]
            ConvenienceStore = 63,

            /// <summary>
            /// Enum CopyLaminate for value: copyLaminate
            /// </summary>
            [EnumMember(Value = "copyLaminate")]
            CopyLaminate = 64,

            /// <summary>
            /// Enum Courier for value: courier
            /// </summary>
            [EnumMember(Value = "courier")]
            Courier = 65,

            /// <summary>
            /// Enum CropHarvesting for value: cropHarvesting
            /// </summary>
            [EnumMember(Value = "cropHarvesting")]
            CropHarvesting = 66,

            /// <summary>
            /// Enum Customs for value: customs
            /// </summary>
            [EnumMember(Value = "customs")]
            Customs = 67,

            /// <summary>
            /// Enum DairyFarming for value: dairyFarming
            /// </summary>
            [EnumMember(Value = "dairyFarming")]
            DairyFarming = 68,

            /// <summary>
            /// Enum Deli for value: deli
            /// </summary>
            [EnumMember(Value = "deli")]
            Deli = 69,

            /// <summary>
            /// Enum Dental for value: dental
            /// </summary>
            [EnumMember(Value = "dental")]
            Dental = 70,

            /// <summary>
            /// Enum Detailing for value: detailing
            /// </summary>
            [EnumMember(Value = "detailing")]
            Detailing = 71,

            /// <summary>
            /// Enum DevelopmentLand for value: developmentLand
            /// </summary>
            [EnumMember(Value = "developmentLand")]
            DevelopmentLand = 72,

            /// <summary>
            /// Enum DevelopmentSite for value: developmentSite
            /// </summary>
            [EnumMember(Value = "developmentSite")]
            DevelopmentSite = 73,

            /// <summary>
            /// Enum Distributors for value: distributors
            /// </summary>
            [EnumMember(Value = "distributors")]
            Distributors = 74,

            /// <summary>
            /// Enum DrivingSchools for value: drivingSchools
            /// </summary>
            [EnumMember(Value = "drivingSchools")]
            DrivingSchools = 75,

            /// <summary>
            /// Enum Duplex for value: duplex
            /// </summary>
            [EnumMember(Value = "duplex")]
            Duplex = 76,

            /// <summary>
            /// Enum EducationTraining for value: educationTraining
            /// </summary>
            [EnumMember(Value = "educationTraining")]
            EducationTraining = 77,

            /// <summary>
            /// Enum Educational for value: educational
            /// </summary>
            [EnumMember(Value = "educational")]
            Educational = 78,

            /// <summary>
            /// Enum Electrical for value: electrical
            /// </summary>
            [EnumMember(Value = "electrical")]
            Electrical = 79,

            /// <summary>
            /// Enum EmploymentRecruitment for value: employmentRecruitment
            /// </summary>
            [EnumMember(Value = "employmentRecruitment")]
            EmploymentRecruitment = 80,

            /// <summary>
            /// Enum Entertainment for value: entertainment
            /// </summary>
            [EnumMember(Value = "entertainment")]
            Entertainment = 81,

            /// <summary>
            /// Enum EntertainmentTechnology for value: entertainmentTechnology
            /// </summary>
            [EnumMember(Value = "entertainmentTechnology")]
            EntertainmentTechnology = 82,

            /// <summary>
            /// Enum Export for value: export
            /// </summary>
            [EnumMember(Value = "export")]
            Export = 83,

            /// <summary>
            /// Enum Farm for value: farm
            /// </summary>
            [EnumMember(Value = "farm")]
            Farm = 84,

            /// <summary>
            /// Enum Farming for value: farming
            /// </summary>
            [EnumMember(Value = "farming")]
            Farming = 85,

            /// <summary>
            /// Enum Fertiliser for value: fertiliser
            /// </summary>
            [EnumMember(Value = "fertiliser")]
            Fertiliser = 86,

            /// <summary>
            /// Enum Finance for value: finance
            /// </summary>
            [EnumMember(Value = "finance")]
            Finance = 87,

            /// <summary>
            /// Enum FinancialServices for value: financialServices
            /// </summary>
            [EnumMember(Value = "financialServices")]
            FinancialServices = 88,

            /// <summary>
            /// Enum FishingForestry for value: fishingForestry
            /// </summary>
            [EnumMember(Value = "fishingForestry")]
            FishingForestry = 89,

            /// <summary>
            /// Enum FloristNursery for value: floristNursery
            /// </summary>
            [EnumMember(Value = "floristNursery")]
            FloristNursery = 90,

            /// <summary>
            /// Enum FoodBeverage for value: foodBeverage
            /// </summary>
            [EnumMember(Value = "foodBeverage")]
            FoodBeverage = 91,

            /// <summary>
            /// Enum FoodBeverageHospitality for value: foodBeverageHospitality
            /// </summary>
            [EnumMember(Value = "foodBeverageHospitality")]
            FoodBeverageHospitality = 92,

            /// <summary>
            /// Enum FranchiseBusinessOpportunities for value: franchiseBusinessOpportunities
            /// </summary>
            [EnumMember(Value = "franchiseBusinessOpportunities")]
            FranchiseBusinessOpportunities = 93,

            /// <summary>
            /// Enum Freight for value: freight
            /// </summary>
            [EnumMember(Value = "freight")]
            Freight = 94,

            /// <summary>
            /// Enum FruitVegFreshProduce for value: fruitVegFreshProduce
            /// </summary>
            [EnumMember(Value = "fruitVegFreshProduce")]
            FruitVegFreshProduce = 95,

            /// <summary>
            /// Enum FruitPicking for value: fruitPicking
            /// </summary>
            [EnumMember(Value = "fruitPicking")]
            FruitPicking = 96,

            /// <summary>
            /// Enum FunctionCentre for value: functionCentre
            /// </summary>
            [EnumMember(Value = "functionCentre")]
            FunctionCentre = 97,

            /// <summary>
            /// Enum FurnitureTimber for value: furnitureTimber
            /// </summary>
            [EnumMember(Value = "furnitureTimber")]
            FurnitureTimber = 98,

            /// <summary>
            /// Enum Gambling for value: gambling
            /// </summary>
            [EnumMember(Value = "gambling")]
            Gambling = 99,

            /// <summary>
            /// Enum GardenHousehold for value: gardenHousehold
            /// </summary>
            [EnumMember(Value = "gardenHousehold")]
            GardenHousehold = 100,

            /// <summary>
            /// Enum GardenNurseries for value: gardenNurseries
            /// </summary>
            [EnumMember(Value = "gardenNurseries")]
            GardenNurseries = 101,

            /// <summary>
            /// Enum Gardening for value: gardening
            /// </summary>
            [EnumMember(Value = "gardening")]
            Gardening = 102,

            /// <summary>
            /// Enum GlassCeramic for value: glassCeramic
            /// </summary>
            [EnumMember(Value = "glassCeramic")]
            GlassCeramic = 103,

            /// <summary>
            /// Enum GuestHouseBB for value: guestHouseBB
            /// </summary>
            [EnumMember(Value = "guestHouseBB")]
            GuestHouseBB = 104,

            /// <summary>
            /// Enum Guesthouse for value: guesthouse
            /// </summary>
            [EnumMember(Value = "guesthouse")]
            Guesthouse = 105,

            /// <summary>
            /// Enum Hairdresser for value: hairdresser
            /// </summary>
            [EnumMember(Value = "hairdresser")]
            Hairdresser = 106,

            /// <summary>
            /// Enum HealthBeauty for value: healthBeauty
            /// </summary>
            [EnumMember(Value = "healthBeauty")]
            HealthBeauty = 107,

            /// <summary>
            /// Enum HealthSpa for value: healthSpa
            /// </summary>
            [EnumMember(Value = "healthSpa")]
            HealthSpa = 108,

            /// <summary>
            /// Enum Hire for value: hire
            /// </summary>
            [EnumMember(Value = "hire")]
            Hire = 109,

            /// <summary>
            /// Enum HomeGarden for value: homeGarden
            /// </summary>
            [EnumMember(Value = "homeGarden")]
            HomeGarden = 110,

            /// <summary>
            /// Enum HomeBased for value: homeBased
            /// </summary>
            [EnumMember(Value = "homeBased")]
            HomeBased = 111,

            /// <summary>
            /// Enum NewHomeDesigns for value: newHomeDesigns
            /// </summary>
            [EnumMember(Value = "newHomeDesigns")]
            NewHomeDesigns = 112,

            /// <summary>
            /// Enum HomewareHardware for value: homewareHardware
            /// </summary>
            [EnumMember(Value = "homewareHardware")]
            HomewareHardware = 113,

            /// <summary>
            /// Enum Hospital for value: hospital
            /// </summary>
            [EnumMember(Value = "hospital")]
            Hospital = 114,

            /// <summary>
            /// Enum Hotel for value: hotel
            /// </summary>
            [EnumMember(Value = "hotel")]
            Hotel = 115,

            /// <summary>
            /// Enum HotelLeisure for value: hotelLeisure
            /// </summary>
            [EnumMember(Value = "hotelLeisure")]
            HotelLeisure = 116,

            /// <summary>
            /// Enum HotelMotelPub for value: hotelMotelPub
            /// </summary>
            [EnumMember(Value = "hotelMotelPub")]
            HotelMotelPub = 117,

            /// <summary>
            /// Enum House for value: house
            /// </summary>
            [EnumMember(Value = "house")]
            House = 118,

            /// <summary>
            /// Enum NewHouseLand for value: newHouseLand
            /// </summary>
            [EnumMember(Value = "newHouseLand")]
            NewHouseLand = 119,

            /// <summary>
            /// Enum HuntingTrap for value: huntingTrap
            /// </summary>
            [EnumMember(Value = "huntingTrap")]
            HuntingTrap = 120,

            /// <summary>
            /// Enum Import for value: import
            /// </summary>
            [EnumMember(Value = "import")]
            Import = 121,

            /// <summary>
            /// Enum ImportExportWholesale for value: importExportWholesale
            /// </summary>
            [EnumMember(Value = "importExportWholesale")]
            ImportExportWholesale = 122,

            /// <summary>
            /// Enum IndustrialManufacturing for value: industrialManufacturing
            /// </summary>
            [EnumMember(Value = "industrialManufacturing")]
            IndustrialManufacturing = 123,

            /// <summary>
            /// Enum IndustrialWarehouse for value: industrialWarehouse
            /// </summary>
            [EnumMember(Value = "industrialWarehouse")]
            IndustrialWarehouse = 124,

            /// <summary>
            /// Enum Insemination for value: insemination
            /// </summary>
            [EnumMember(Value = "insemination")]
            Insemination = 125,

            /// <summary>
            /// Enum Insurance for value: insurance
            /// </summary>
            [EnumMember(Value = "insurance")]
            Insurance = 126,

            /// <summary>
            /// Enum InternationalNewDevelopment for value: internationalNewDevelopment
            /// </summary>
            [EnumMember(Value = "internationalNewDevelopment")]
            InternationalNewDevelopment = 127,

            /// <summary>
            /// Enum Internet for value: internet
            /// </summary>
            [EnumMember(Value = "internet")]
            Internet = 128,

            /// <summary>
            /// Enum IrrigationServices for value: irrigationServices
            /// </summary>
            [EnumMember(Value = "irrigationServices")]
            IrrigationServices = 129,

            /// <summary>
            /// Enum JuiceBar for value: juiceBar
            /// </summary>
            [EnumMember(Value = "juiceBar")]
            JuiceBar = 130,

            /// <summary>
            /// Enum LandClearing for value: landClearing
            /// </summary>
            [EnumMember(Value = "landClearing")]
            LandClearing = 131,

            /// <summary>
            /// Enum NewLand for value: newLand
            /// </summary>
            [EnumMember(Value = "newLand")]
            NewLand = 132,

            /// <summary>
            /// Enum Landscaping for value: landscaping
            /// </summary>
            [EnumMember(Value = "landscaping")]
            Landscaping = 133,

            /// <summary>
            /// Enum LaundryDryCleaning for value: laundryDryCleaning
            /// </summary>
            [EnumMember(Value = "laundryDryCleaning")]
            LaundryDryCleaning = 134,

            /// <summary>
            /// Enum Legal for value: legal
            /// </summary>
            [EnumMember(Value = "legal")]
            Legal = 135,

            /// <summary>
            /// Enum LeisureEntertainment for value: leisureEntertainment
            /// </summary>
            [EnumMember(Value = "leisureEntertainment")]
            LeisureEntertainment = 136,

            /// <summary>
            /// Enum LimousineTaxi for value: limousineTaxi
            /// </summary>
            [EnumMember(Value = "limousineTaxi")]
            LimousineTaxi = 137,

            /// <summary>
            /// Enum Livestock for value: livestock
            /// </summary>
            [EnumMember(Value = "livestock")]
            Livestock = 138,

            /// <summary>
            /// Enum InternationalCommercial for value: internationalCommercial
            /// </summary>
            [EnumMember(Value = "internationalCommercial")]
            InternationalCommercial = 139,

            /// <summary>
            /// Enum Machinery for value: machinery
            /// </summary>
            [EnumMember(Value = "machinery")]
            Machinery = 140,

            /// <summary>
            /// Enum MachineryMetal for value: machineryMetal
            /// </summary>
            [EnumMember(Value = "machineryMetal")]
            MachineryMetal = 141,

            /// <summary>
            /// Enum ManagementRights for value: managementRights
            /// </summary>
            [EnumMember(Value = "managementRights")]
            ManagementRights = 142,

            /// <summary>
            /// Enum Manufacturers for value: manufacturers
            /// </summary>
            [EnumMember(Value = "manufacturers")]
            Manufacturers = 143,

            /// <summary>
            /// Enum ManufacturingEngineering for value: manufacturingEngineering
            /// </summary>
            [EnumMember(Value = "manufacturingEngineering")]
            ManufacturingEngineering = 144,

            /// <summary>
            /// Enum Marine for value: marine
            /// </summary>
            [EnumMember(Value = "marine")]
            Marine = 145,

            /// <summary>
            /// Enum Massage for value: massage
            /// </summary>
            [EnumMember(Value = "massage")]
            Massage = 146,

            /// <summary>
            /// Enum MechanicalRepair for value: mechanicalRepair
            /// </summary>
            [EnumMember(Value = "mechanicalRepair")]
            MechanicalRepair = 147,

            /// <summary>
            /// Enum Media for value: media
            /// </summary>
            [EnumMember(Value = "media")]
            Media = 148,

            /// <summary>
            /// Enum Medical for value: medical
            /// </summary>
            [EnumMember(Value = "medical")]
            Medical = 149,

            /// <summary>
            /// Enum MedicalConsulting for value: medicalConsulting
            /// </summary>
            [EnumMember(Value = "medicalConsulting")]
            MedicalConsulting = 150,

            /// <summary>
            /// Enum MedicalPractice for value: medicalPractice
            /// </summary>
            [EnumMember(Value = "medicalPractice")]
            MedicalPractice = 151,

            /// <summary>
            /// Enum MiningEarthMoving for value: miningEarthMoving
            /// </summary>
            [EnumMember(Value = "miningEarthMoving")]
            MiningEarthMoving = 152,

            /// <summary>
            /// Enum MobileServices for value: mobileServices
            /// </summary>
            [EnumMember(Value = "mobileServices")]
            MobileServices = 153,

            /// <summary>
            /// Enum Motel for value: motel
            /// </summary>
            [EnumMember(Value = "motel")]
            Motel = 154,

            /// <summary>
            /// Enum Motorcycle for value: motorcycle
            /// </summary>
            [EnumMember(Value = "motorcycle")]
            Motorcycle = 155,

            /// <summary>
            /// Enum MusicRelated for value: musicRelated
            /// </summary>
            [EnumMember(Value = "musicRelated")]
            MusicRelated = 156,

            /// <summary>
            /// Enum Mustering for value: mustering
            /// </summary>
            [EnumMember(Value = "mustering")]
            Mustering = 157,

            /// <summary>
            /// Enum Nails for value: nails
            /// </summary>
            [EnumMember(Value = "nails")]
            Nails = 158,

            /// <summary>
            /// Enum NaturalTherapies for value: naturalTherapies
            /// </summary>
            [EnumMember(Value = "naturalTherapies")]
            NaturalTherapies = 159,

            /// <summary>
            /// Enum NewApartments for value: newApartments
            /// </summary>
            [EnumMember(Value = "newApartments")]
            NewApartments = 160,

            /// <summary>
            /// Enum Newsagency for value: newsagency
            /// </summary>
            [EnumMember(Value = "newsagency")]
            Newsagency = 161,

            /// <summary>
            /// Enum Nursery for value: nursery
            /// </summary>
            [EnumMember(Value = "nursery")]
            Nursery = 162,

            /// <summary>
            /// Enum NursingHome for value: nursingHome
            /// </summary>
            [EnumMember(Value = "nursingHome")]
            NursingHome = 163,

            /// <summary>
            /// Enum Offices for value: offices
            /// </summary>
            [EnumMember(Value = "offices")]
            Offices = 164,

            /// <summary>
            /// Enum OfficeSupplies for value: officeSupplies
            /// </summary>
            [EnumMember(Value = "officeSupplies")]
            OfficeSupplies = 165,

            /// <summary>
            /// Enum OilGas for value: oilGas
            /// </summary>
            [EnumMember(Value = "oilGas")]
            OilGas = 166,

            /// <summary>
            /// Enum OnStreet for value: onStreet
            /// </summary>
            [EnumMember(Value = "onStreet")]
            OnStreet = 167,

            /// <summary>
            /// Enum PanelBeating for value: panelBeating
            /// </summary>
            [EnumMember(Value = "panelBeating")]
            PanelBeating = 168,

            /// <summary>
            /// Enum PaperPrinting for value: paperPrinting
            /// </summary>
            [EnumMember(Value = "paperPrinting")]
            PaperPrinting = 169,

            /// <summary>
            /// Enum ParkingCarSpace for value: parkingCarSpace
            /// </summary>
            [EnumMember(Value = "parkingCarSpace")]
            ParkingCarSpace = 170,

            /// <summary>
            /// Enum Penthouse for value: penthouse
            /// </summary>
            [EnumMember(Value = "penthouse")]
            Penthouse = 171,

            /// <summary>
            /// Enum PestRelated for value: pestRelated
            /// </summary>
            [EnumMember(Value = "pestRelated")]
            PestRelated = 172,

            /// <summary>
            /// Enum Pharmacies for value: pharmacies
            /// </summary>
            [EnumMember(Value = "pharmacies")]
            Pharmacies = 173,

            /// <summary>
            /// Enum Plastic for value: plastic
            /// </summary>
            [EnumMember(Value = "plastic")]
            Plastic = 174,

            /// <summary>
            /// Enum Plumbing for value: plumbing
            /// </summary>
            [EnumMember(Value = "plumbing")]
            Plumbing = 175,

            /// <summary>
            /// Enum PoolWater for value: poolWater
            /// </summary>
            [EnumMember(Value = "poolWater")]
            PoolWater = 176,

            /// <summary>
            /// Enum PostOffices for value: postOffices
            /// </summary>
            [EnumMember(Value = "postOffices")]
            PostOffices = 177,

            /// <summary>
            /// Enum PrintPhoto for value: printPhoto
            /// </summary>
            [EnumMember(Value = "printPhoto")]
            PrintPhoto = 178,

            /// <summary>
            /// Enum Professional for value: professional
            /// </summary>
            [EnumMember(Value = "professional")]
            Professional = 179,

            /// <summary>
            /// Enum PropertyRealEstate for value: propertyRealEstate
            /// </summary>
            [EnumMember(Value = "propertyRealEstate")]
            PropertyRealEstate = 180,

            /// <summary>
            /// Enum Rail for value: rail
            /// </summary>
            [EnumMember(Value = "rail")]
            Rail = 181,

            /// <summary>
            /// Enum RecreationSport for value: recreationSport
            /// </summary>
            [EnumMember(Value = "recreationSport")]
            RecreationSport = 182,

            /// <summary>
            /// Enum Recruitment for value: recruitment
            /// </summary>
            [EnumMember(Value = "recruitment")]
            Recruitment = 183,

            /// <summary>
            /// Enum Repair for value: repair
            /// </summary>
            [EnumMember(Value = "repair")]
            Repair = 184,

            /// <summary>
            /// Enum Resort for value: resort
            /// </summary>
            [EnumMember(Value = "resort")]
            Resort = 185,

            /// <summary>
            /// Enum Restaurant for value: restaurant
            /// </summary>
            [EnumMember(Value = "restaurant")]
            Restaurant = 186,

            /// <summary>
            /// Enum Retail for value: retail
            /// </summary>
            [EnumMember(Value = "retail")]
            Retail = 187,

            /// <summary>
            /// Enum Retailer for value: retailer
            /// </summary>
            [EnumMember(Value = "retailer")]
            Retailer = 188,

            /// <summary>
            /// Enum RetirementVillage for value: retirementVillage
            /// </summary>
            [EnumMember(Value = "retirementVillage")]
            RetirementVillage = 189,

            /// <summary>
            /// Enum Road for value: road
            /// </summary>
            [EnumMember(Value = "road")]
            Road = 190,

            /// <summary>
            /// Enum Rural for value: rural
            /// </summary>
            [EnumMember(Value = "rural")]
            Rural = 191,

            /// <summary>
            /// Enum RuralCommercialFarming for value: ruralCommercialFarming
            /// </summary>
            [EnumMember(Value = "ruralCommercialFarming")]
            RuralCommercialFarming = 192,

            /// <summary>
            /// Enum Scientific for value: scientific
            /// </summary>
            [EnumMember(Value = "scientific")]
            Scientific = 193,

            /// <summary>
            /// Enum Sea for value: sea
            /// </summary>
            [EnumMember(Value = "sea")]
            Sea = 194,

            /// <summary>
            /// Enum Security for value: security
            /// </summary>
            [EnumMember(Value = "security")]
            Security = 195,

            /// <summary>
            /// Enum SemiDetached for value: semiDetached
            /// </summary>
            [EnumMember(Value = "semiDetached")]
            SemiDetached = 196,

            /// <summary>
            /// Enum ServiceStation for value: serviceStation
            /// </summary>
            [EnumMember(Value = "serviceStation")]
            ServiceStation = 197,

            /// <summary>
            /// Enum Serviced for value: serviced
            /// </summary>
            [EnumMember(Value = "serviced")]
            Serviced = 198,

            /// <summary>
            /// Enum Services for value: services
            /// </summary>
            [EnumMember(Value = "services")]
            Services = 199,

            /// <summary>
            /// Enum Shearing for value: shearing
            /// </summary>
            [EnumMember(Value = "shearing")]
            Shearing = 200,

            /// <summary>
            /// Enum ShowroomsBulkyGoods for value: showroomsBulkyGoods
            /// </summary>
            [EnumMember(Value = "showroomsBulkyGoods")]
            ShowroomsBulkyGoods = 201,

            /// <summary>
            /// Enum SpecialistFarm for value: specialistFarm
            /// </summary>
            [EnumMember(Value = "specialistFarm")]
            SpecialistFarm = 202,

            /// <summary>
            /// Enum SportsComplexGym for value: sportsComplexGym
            /// </summary>
            [EnumMember(Value = "sportsComplexGym")]
            SportsComplexGym = 203,

            /// <summary>
            /// Enum Studio for value: studio
            /// </summary>
            [EnumMember(Value = "studio")]
            Studio = 204,

            /// <summary>
            /// Enum Supermarket for value: supermarket
            /// </summary>
            [EnumMember(Value = "supermarket")]
            Supermarket = 205,

            /// <summary>
            /// Enum TakeawayFood for value: takeawayFood
            /// </summary>
            [EnumMember(Value = "takeawayFood")]
            TakeawayFood = 206,

            /// <summary>
            /// Enum Taxi for value: taxi
            /// </summary>
            [EnumMember(Value = "taxi")]
            Taxi = 207,

            /// <summary>
            /// Enum Terrace for value: terrace
            /// </summary>
            [EnumMember(Value = "terrace")]
            Terrace = 208,

            /// <summary>
            /// Enum ThemePark for value: themePark
            /// </summary>
            [EnumMember(Value = "themePark")]
            ThemePark = 209,

            /// <summary>
            /// Enum Tours for value: tours
            /// </summary>
            [EnumMember(Value = "tours")]
            Tours = 210,

            /// <summary>
            /// Enum Townhouse for value: townhouse
            /// </summary>
            [EnumMember(Value = "townhouse")]
            Townhouse = 211,

            /// <summary>
            /// Enum Training for value: training
            /// </summary>
            [EnumMember(Value = "training")]
            Training = 212,

            /// <summary>
            /// Enum TransportDistribution for value: transportDistribution
            /// </summary>
            [EnumMember(Value = "transportDistribution")]
            TransportDistribution = 213,

            /// <summary>
            /// Enum Travel for value: travel
            /// </summary>
            [EnumMember(Value = "travel")]
            Travel = 214,

            /// <summary>
            /// Enum Truck for value: truck
            /// </summary>
            [EnumMember(Value = "truck")]
            Truck = 215,

            /// <summary>
            /// Enum VacantLand for value: vacantLand
            /// </summary>
            [EnumMember(Value = "vacantLand")]
            VacantLand = 216,

            /// <summary>
            /// Enum Vending for value: vending
            /// </summary>
            [EnumMember(Value = "vending")]
            Vending = 217,

            /// <summary>
            /// Enum Villa for value: villa
            /// </summary>
            [EnumMember(Value = "villa")]
            Villa = 218,

            /// <summary>
            /// Enum Water for value: water
            /// </summary>
            [EnumMember(Value = "water")]
            Water = 219,

            /// <summary>
            /// Enum Welding for value: welding
            /// </summary>
            [EnumMember(Value = "welding")]
            Welding = 220,

            /// <summary>
            /// Enum Wholesale for value: wholesale
            /// </summary>
            [EnumMember(Value = "wholesale")]
            Wholesale = 221,

            /// <summary>
            /// Enum Wholesalers for value: wholesalers
            /// </summary>
            [EnumMember(Value = "wholesalers")]
            Wholesalers = 222,

            /// <summary>
            /// Enum WithShowroomWarehouse for value: withShowroomWarehouse
            /// </summary>
            [EnumMember(Value = "withShowroomWarehouse")]
            WithShowroomWarehouse = 223,

            /// <summary>
            /// Enum WithinShoppingComplex for value: withinShoppingComplex
            /// </summary>
            [EnumMember(Value = "withinShoppingComplex")]
            WithinShoppingComplex = 224,

            /// <summary>
            /// Enum WoolClassing for value: woolClassing
            /// </summary>
            [EnumMember(Value = "woolClassing")]
            WoolClassing = 225,

            /// <summary>
            /// Enum Wreckers for value: wreckers
            /// </summary>
            [EnumMember(Value = "wreckers")]
            Wreckers = 226,

            /// <summary>
            /// Enum Tattersalls for value: tattersalls
            /// </summary>
            [EnumMember(Value = "tattersalls")]
            Tattersalls = 227,

            /// <summary>
            /// Enum ServicedOffices for value: servicedOffices
            /// </summary>
            [EnumMember(Value = "servicedOffices")]
            ServicedOffices = 228,

            /// <summary>
            /// Enum Other for value: other
            /// </summary>
            [EnumMember(Value = "other")]
            Other = 229,

            /// <summary>
            /// Enum AlcoholGrocery for value: alcoholGrocery
            /// </summary>
            [EnumMember(Value = "alcoholGrocery")]
            AlcoholGrocery = 230,

            /// <summary>
            /// Enum CafeRestaurant for value: cafeRestaurant
            /// </summary>
            [EnumMember(Value = "cafeRestaurant")]
            CafeRestaurant = 231,

            /// <summary>
            /// Enum DiscountStore for value: discountStore
            /// </summary>
            [EnumMember(Value = "discountStore")]
            DiscountStore = 232,

            /// <summary>
            /// Enum EcoFriendly for value: ecoFriendly
            /// </summary>
            [EnumMember(Value = "ecoFriendly")]
            EcoFriendly = 233,

            /// <summary>
            /// Enum Green for value: green
            /// </summary>
            [EnumMember(Value = "green")]
            Green = 234,

            /// <summary>
            /// Enum Grocery for value: grocery
            /// </summary>
            [EnumMember(Value = "grocery")]
            Grocery = 235,

            /// <summary>
            /// Enum SpecialityRetail for value: specialityRetail
            /// </summary>
            [EnumMember(Value = "specialityRetail")]
            SpecialityRetail = 236,

            /// <summary>
            /// Enum Storage for value: storage
            /// </summary>
            [EnumMember(Value = "storage")]
            Storage = 237,

            /// <summary>
            /// Enum TravelAgency for value: travelAgency
            /// </summary>
            [EnumMember(Value = "travelAgency")]
            TravelAgency = 238,

            /// <summary>
            /// Enum VarietyStore for value: varietyStore
            /// </summary>
            [EnumMember(Value = "varietyStore")]
            VarietyStore = 239,

            /// <summary>
            /// Enum FranchiseNew for value: franchiseNew
            /// </summary>
            [EnumMember(Value = "franchiseNew")]
            FranchiseNew = 240,

            /// <summary>
            /// Enum Business for value: business
            /// </summary>
            [EnumMember(Value = "business")]
            Business = 241

        }


        /// <summary>
        /// Listing property types
        /// </summary>
        /// <value>Listing property types</value>
        [DataMember(Name = "propertyTypes", EmitDefaultValue = false)]
        public List<PropertyTypesEnum> PropertyTypes { get; set; }
        /// <summary>
        /// Sorting order
        /// </summary>
        /// <value>Sorting order</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum SortEnum
        {
            /// <summary>
            /// Enum Default for value: default
            /// </summary>
            [EnumMember(Value = "default")]
            Default = 1,

            /// <summary>
            /// Enum NewestFirst for value: newestFirst
            /// </summary>
            [EnumMember(Value = "newestFirst")]
            NewestFirst = 2,

            /// <summary>
            /// Enum LowTotalPriceFirst for value: lowTotalPriceFirst
            /// </summary>
            [EnumMember(Value = "lowTotalPriceFirst")]
            LowTotalPriceFirst = 3,

            /// <summary>
            /// Enum HightTotalPriceFirst for value: hightTotalPriceFirst
            /// </summary>
            [EnumMember(Value = "hightTotalPriceFirst")]
            HightTotalPriceFirst = 4,

            /// <summary>
            /// Enum SuburbAsc for value: suburbAsc
            /// </summary>
            [EnumMember(Value = "suburbAsc")]
            SuburbAsc = 5,

            /// <summary>
            /// Enum SuburbDesc for value: suburbDesc
            /// </summary>
            [EnumMember(Value = "suburbDesc")]
            SuburbDesc = 6

        }

        /// <summary>
        /// Sorting order
        /// </summary>
        /// <value>Sorting order</value>
        [DataMember(Name = "sort", EmitDefaultValue = false)]
        public SortEnum? Sort { get; set; }
        /// <summary>
        /// Search mode
        /// </summary>
        /// <value>Search mode</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum SearchModeEnum
        {
            /// <summary>
            /// Enum ForSale for value: forSale
            /// </summary>
            [EnumMember(Value = "forSale")]
            ForSale = 1,

            /// <summary>
            /// Enum FranchiseOpportunity for value: franchiseOpportunity
            /// </summary>
            [EnumMember(Value = "franchiseOpportunity")]
            FranchiseOpportunity = 2,

            /// <summary>
            /// Enum FranchiseBrand for value: franchiseBrand
            /// </summary>
            [EnumMember(Value = "franchiseBrand")]
            FranchiseBrand = 3

        }

        /// <summary>
        /// Search mode
        /// </summary>
        /// <value>Search mode</value>
        [DataMember(Name = "searchMode", EmitDefaultValue = false)]
        public SearchModeEnum? SearchMode { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="DomainPublicAdapterWebApiModelsV1ListingsBusinessSearchRequest" /> class.
        /// </summary>
        /// <param name="pageNumber">pageNumber.</param>
        /// <param name="advertiserId">AdvertiserId e.g. An Agency ID.</param>
        /// <param name="propertyTypes">Listing property types.</param>
        /// <param name="keywords">Search listings by keyword.</param>
        /// <param name="brandId">The franchise brand ID.</param>
        /// <param name="franchiseGroupId">The franchise group ID. A franchise group owns multiple franchise brands..</param>
        /// <param name="locations">Location search criteria.</param>
        /// <param name="pageSize">Search results page size.</param>
        /// <param name="price">price.</param>
        /// <param name="sort">Sorting order.</param>
        /// <param name="searchMode">Search mode.</param>
        public DomainPublicAdapterWebApiModelsV1ListingsBusinessSearchRequest(int pageNumber = default(int), int advertiserId = default(int), List<PropertyTypesEnum> propertyTypes = default(List<PropertyTypesEnum>), List<string> keywords = default(List<string>), int brandId = default(int), int franchiseGroupId = default(int), List<DomainPublicAdapterWebApiModelsV1ListingsBusinessLocationSearch> locations = default(List<DomainPublicAdapterWebApiModelsV1ListingsBusinessLocationSearch>), int pageSize = default(int), DomainPublicAdapterWebApiModelsV1ListingsBusinessPriceSearch price = default(DomainPublicAdapterWebApiModelsV1ListingsBusinessPriceSearch), SortEnum? sort = default(SortEnum?), SearchModeEnum? searchMode = default(SearchModeEnum?))
        {
            this.PageNumber = pageNumber;
            this.AdvertiserId = advertiserId;
            this.PropertyTypes = propertyTypes;
            this.Keywords = keywords;
            this.BrandId = brandId;
            this.FranchiseGroupId = franchiseGroupId;
            this.Locations = locations;
            this.PageSize = pageSize;
            this.Price = price;
            this.Sort = sort;
            this.SearchMode = searchMode;
        }

        /// <summary>
        /// Gets or Sets PageNumber
        /// </summary>
        [DataMember(Name = "pageNumber", EmitDefaultValue = false)]
        public int PageNumber { get; set; }

        /// <summary>
        /// AdvertiserId e.g. An Agency ID
        /// </summary>
        /// <value>AdvertiserId e.g. An Agency ID</value>
        [DataMember(Name = "advertiserId", EmitDefaultValue = false)]
        public int AdvertiserId { get; set; }

        /// <summary>
        /// Search listings by keyword
        /// </summary>
        /// <value>Search listings by keyword</value>
        [DataMember(Name = "keywords", EmitDefaultValue = false)]
        public List<string> Keywords { get; set; }

        /// <summary>
        /// The franchise brand ID
        /// </summary>
        /// <value>The franchise brand ID</value>
        [DataMember(Name = "brandId", EmitDefaultValue = false)]
        public int BrandId { get; set; }

        /// <summary>
        /// The franchise group ID. A franchise group owns multiple franchise brands.
        /// </summary>
        /// <value>The franchise group ID. A franchise group owns multiple franchise brands.</value>
        [DataMember(Name = "franchiseGroupId", EmitDefaultValue = false)]
        public int FranchiseGroupId { get; set; }

        /// <summary>
        /// Location search criteria
        /// </summary>
        /// <value>Location search criteria</value>
        [DataMember(Name = "locations", EmitDefaultValue = false)]
        public List<DomainPublicAdapterWebApiModelsV1ListingsBusinessLocationSearch> Locations { get; set; }

        /// <summary>
        /// Search results page size
        /// </summary>
        /// <value>Search results page size</value>
        [DataMember(Name = "pageSize", EmitDefaultValue = false)]
        public int PageSize { get; set; }

        /// <summary>
        /// Gets or Sets Price
        /// </summary>
        [DataMember(Name = "price", EmitDefaultValue = false)]
        public DomainPublicAdapterWebApiModelsV1ListingsBusinessPriceSearch Price { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DomainPublicAdapterWebApiModelsV1ListingsBusinessSearchRequest {\n");
            sb.Append("  PageNumber: ").Append(PageNumber).Append("\n");
            sb.Append("  AdvertiserId: ").Append(AdvertiserId).Append("\n");
            sb.Append("  PropertyTypes: ").Append(PropertyTypes).Append("\n");
            sb.Append("  Keywords: ").Append(Keywords).Append("\n");
            sb.Append("  BrandId: ").Append(BrandId).Append("\n");
            sb.Append("  FranchiseGroupId: ").Append(FranchiseGroupId).Append("\n");
            sb.Append("  Locations: ").Append(Locations).Append("\n");
            sb.Append("  PageSize: ").Append(PageSize).Append("\n");
            sb.Append("  Price: ").Append(Price).Append("\n");
            sb.Append("  Sort: ").Append(Sort).Append("\n");
            sb.Append("  SearchMode: ").Append(SearchMode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DomainPublicAdapterWebApiModelsV1ListingsBusinessSearchRequest);
        }

        /// <summary>
        /// Returns true if DomainPublicAdapterWebApiModelsV1ListingsBusinessSearchRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of DomainPublicAdapterWebApiModelsV1ListingsBusinessSearchRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DomainPublicAdapterWebApiModelsV1ListingsBusinessSearchRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PageNumber == input.PageNumber ||
                    this.PageNumber.Equals(input.PageNumber)
                ) && 
                (
                    this.AdvertiserId == input.AdvertiserId ||
                    this.AdvertiserId.Equals(input.AdvertiserId)
                ) && 
                (
                    this.PropertyTypes == input.PropertyTypes ||
                    this.PropertyTypes.SequenceEqual(input.PropertyTypes)
                ) && 
                (
                    this.Keywords == input.Keywords ||
                    this.Keywords != null &&
                    input.Keywords != null &&
                    this.Keywords.SequenceEqual(input.Keywords)
                ) && 
                (
                    this.BrandId == input.BrandId ||
                    this.BrandId.Equals(input.BrandId)
                ) && 
                (
                    this.FranchiseGroupId == input.FranchiseGroupId ||
                    this.FranchiseGroupId.Equals(input.FranchiseGroupId)
                ) && 
                (
                    this.Locations == input.Locations ||
                    this.Locations != null &&
                    input.Locations != null &&
                    this.Locations.SequenceEqual(input.Locations)
                ) && 
                (
                    this.PageSize == input.PageSize ||
                    this.PageSize.Equals(input.PageSize)
                ) && 
                (
                    this.Price == input.Price ||
                    (this.Price != null &&
                    this.Price.Equals(input.Price))
                ) && 
                (
                    this.Sort == input.Sort ||
                    this.Sort.Equals(input.Sort)
                ) && 
                (
                    this.SearchMode == input.SearchMode ||
                    this.SearchMode.Equals(input.SearchMode)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.PageNumber.GetHashCode();
                hashCode = hashCode * 59 + this.AdvertiserId.GetHashCode();
                hashCode = hashCode * 59 + this.PropertyTypes.GetHashCode();
                if (this.Keywords != null)
                    hashCode = hashCode * 59 + this.Keywords.GetHashCode();
                hashCode = hashCode * 59 + this.BrandId.GetHashCode();
                hashCode = hashCode * 59 + this.FranchiseGroupId.GetHashCode();
                if (this.Locations != null)
                    hashCode = hashCode * 59 + this.Locations.GetHashCode();
                hashCode = hashCode * 59 + this.PageSize.GetHashCode();
                if (this.Price != null)
                    hashCode = hashCode * 59 + this.Price.GetHashCode();
                hashCode = hashCode * 59 + this.Sort.GetHashCode();
                hashCode = hashCode * 59 + this.SearchMode.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
