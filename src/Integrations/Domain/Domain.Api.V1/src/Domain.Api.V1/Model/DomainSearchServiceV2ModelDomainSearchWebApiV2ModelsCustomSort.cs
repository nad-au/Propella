/*
 * Domain Public API
 *
 * See https://developer.domain.com.au for more information
 *
 * The version of the OpenAPI document: v1
 * Contact: api@domain.com.au
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Domain.Api.V1.Client.OpenAPIDateConverter;

namespace Domain.Api.V1.Model
{
    /// <summary>
    /// DomainSearchServiceV2ModelDomainSearchWebApiV2ModelsCustomSort
    /// </summary>
    [DataContract(Name = "Domain.SearchService.v2.Model.DomainSearchWebApiV2ModelsCustomSort")]
    public partial class DomainSearchServiceV2ModelDomainSearchWebApiV2ModelsCustomSort : IEquatable<DomainSearchServiceV2ModelDomainSearchWebApiV2ModelsCustomSort>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DomainSearchServiceV2ModelDomainSearchWebApiV2ModelsCustomSort" /> class.
        /// </summary>
        /// <param name="elements">elements.</param>
        /// <param name="boostPrimarySuburbs">boostPrimarySuburbs.</param>
        public DomainSearchServiceV2ModelDomainSearchWebApiV2ModelsCustomSort(List<DomainSearchServiceV2ModelDomainSearchWebApiV2ModelsCustomSortElement> elements = default(List<DomainSearchServiceV2ModelDomainSearchWebApiV2ModelsCustomSortElement>), bool boostPrimarySuburbs = default(bool))
        {
            this.Elements = elements;
            this.BoostPrimarySuburbs = boostPrimarySuburbs;
        }

        /// <summary>
        /// Gets or Sets Elements
        /// </summary>
        [DataMember(Name = "elements", EmitDefaultValue = false)]
        public List<DomainSearchServiceV2ModelDomainSearchWebApiV2ModelsCustomSortElement> Elements { get; set; }

        /// <summary>
        /// Gets or Sets BoostPrimarySuburbs
        /// </summary>
        [DataMember(Name = "boostPrimarySuburbs", EmitDefaultValue = false)]
        public bool BoostPrimarySuburbs { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DomainSearchServiceV2ModelDomainSearchWebApiV2ModelsCustomSort {\n");
            sb.Append("  Elements: ").Append(Elements).Append("\n");
            sb.Append("  BoostPrimarySuburbs: ").Append(BoostPrimarySuburbs).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DomainSearchServiceV2ModelDomainSearchWebApiV2ModelsCustomSort);
        }

        /// <summary>
        /// Returns true if DomainSearchServiceV2ModelDomainSearchWebApiV2ModelsCustomSort instances are equal
        /// </summary>
        /// <param name="input">Instance of DomainSearchServiceV2ModelDomainSearchWebApiV2ModelsCustomSort to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DomainSearchServiceV2ModelDomainSearchWebApiV2ModelsCustomSort input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Elements == input.Elements ||
                    this.Elements != null &&
                    input.Elements != null &&
                    this.Elements.SequenceEqual(input.Elements)
                ) && 
                (
                    this.BoostPrimarySuburbs == input.BoostPrimarySuburbs ||
                    this.BoostPrimarySuburbs.Equals(input.BoostPrimarySuburbs)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Elements != null)
                    hashCode = hashCode * 59 + this.Elements.GetHashCode();
                hashCode = hashCode * 59 + this.BoostPrimarySuburbs.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
