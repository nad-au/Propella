/*
 * Domain Public API
 *
 * See https://developer.domain.com.au for more information
 *
 * The version of the OpenAPI document: v2
 * Contact: api@domain.com.au
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Domain.Api.V2.Client.Client.OpenAPIDateConverter;

namespace Domain.Api.V2.Client.Model
{
    /// <summary>
    /// Business off market property
    /// </summary>
    [DataContract(Name = "ListingAdmin.v2.BusinessOffMarketProperty")]
    public partial class ListingAdminV2BusinessOffMarketProperty : IEquatable<ListingAdminV2BusinessOffMarketProperty>, IValidatableObject
    {
        /// <summary>
        /// Defines PropertyType
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum PropertyTypeEnum
        {
            /// <summary>
            /// Enum AccessoriesParts for value: accessoriesParts
            /// </summary>
            [EnumMember(Value = "accessoriesParts")]
            AccessoriesParts = 1,

            /// <summary>
            /// Enum AccommodationTourism for value: accommodationTourism
            /// </summary>
            [EnumMember(Value = "accommodationTourism")]
            AccommodationTourism = 2,

            /// <summary>
            /// Enum Accounting for value: accounting
            /// </summary>
            [EnumMember(Value = "accounting")]
            Accounting = 3,

            /// <summary>
            /// Enum Adult for value: adult
            /// </summary>
            [EnumMember(Value = "adult")]
            Adult = 4,

            /// <summary>
            /// Enum AdvertisingMarketing for value: advertisingMarketing
            /// </summary>
            [EnumMember(Value = "advertisingMarketing")]
            AdvertisingMarketing = 5,

            /// <summary>
            /// Enum Aerial for value: aerial
            /// </summary>
            [EnumMember(Value = "aerial")]
            Aerial = 6,

            /// <summary>
            /// Enum Aeronautical for value: aeronautical
            /// </summary>
            [EnumMember(Value = "aeronautical")]
            Aeronautical = 7,

            /// <summary>
            /// Enum AgedCare for value: agedCare
            /// </summary>
            [EnumMember(Value = "agedCare")]
            AgedCare = 8,

            /// <summary>
            /// Enum Agricultural for value: agricultural
            /// </summary>
            [EnumMember(Value = "agricultural")]
            Agricultural = 9,

            /// <summary>
            /// Enum Air for value: air
            /// </summary>
            [EnumMember(Value = "air")]
            Air = 10,

            /// <summary>
            /// Enum Aircraft for value: aircraft
            /// </summary>
            [EnumMember(Value = "aircraft")]
            Aircraft = 11,

            /// <summary>
            /// Enum Alarms for value: alarms
            /// </summary>
            [EnumMember(Value = "alarms")]
            Alarms = 12,

            /// <summary>
            /// Enum AlcoholLiquor for value: alcoholLiquor
            /// </summary>
            [EnumMember(Value = "alcoholLiquor")]
            AlcoholLiquor = 13,

            /// <summary>
            /// Enum Amusements for value: amusements
            /// </summary>
            [EnumMember(Value = "amusements")]
            Amusements = 14,

            /// <summary>
            /// Enum AnimalRelated for value: animalRelated
            /// </summary>
            [EnumMember(Value = "animalRelated")]
            AnimalRelated = 15,

            /// <summary>
            /// Enum Aquaculture for value: aquaculture
            /// </summary>
            [EnumMember(Value = "aquaculture")]
            Aquaculture = 16,

            /// <summary>
            /// Enum AquaticMarineMarinaBerth for value: aquaticMarineMarinaBerth
            /// </summary>
            [EnumMember(Value = "aquaticMarineMarinaBerth")]
            AquaticMarineMarinaBerth = 17,

            /// <summary>
            /// Enum ArtsCrafts for value: artsCrafts
            /// </summary>
            [EnumMember(Value = "artsCrafts")]
            ArtsCrafts = 18,

            /// <summary>
            /// Enum AutoElectrical for value: autoElectrical
            /// </summary>
            [EnumMember(Value = "autoElectrical")]
            AutoElectrical = 19,

            /// <summary>
            /// Enum Automotive for value: automotive
            /// </summary>
            [EnumMember(Value = "automotive")]
            Automotive = 20,

            /// <summary>
            /// Enum BackpackerHostel for value: backpackerHostel
            /// </summary>
            [EnumMember(Value = "backpackerHostel")]
            BackpackerHostel = 21,

            /// <summary>
            /// Enum Bakery for value: bakery
            /// </summary>
            [EnumMember(Value = "bakery")]
            Bakery = 22,

            /// <summary>
            /// Enum BarsNightclubs for value: barsNightclubs
            /// </summary>
            [EnumMember(Value = "barsNightclubs")]
            BarsNightclubs = 23,

            /// <summary>
            /// Enum BeautyHealth for value: beautyHealth
            /// </summary>
            [EnumMember(Value = "beautyHealth")]
            BeautyHealth = 24,

            /// <summary>
            /// Enum BeautyProducts for value: beautyProducts
            /// </summary>
            [EnumMember(Value = "beautyProducts")]
            BeautyProducts = 25,

            /// <summary>
            /// Enum BeautySalon for value: beautySalon
            /// </summary>
            [EnumMember(Value = "beautySalon")]
            BeautySalon = 26,

            /// <summary>
            /// Enum BikeAndMotorcycle for value: bikeAndMotorcycle
            /// </summary>
            [EnumMember(Value = "bikeAndMotorcycle")]
            BikeAndMotorcycle = 27,

            /// <summary>
            /// Enum BoardingKennels for value: boardingKennels
            /// </summary>
            [EnumMember(Value = "boardingKennels")]
            BoardingKennels = 28,

            /// <summary>
            /// Enum BoatsMarineMarinaBerth for value: boatsMarineMarinaBerth
            /// </summary>
            [EnumMember(Value = "boatsMarineMarinaBerth")]
            BoatsMarineMarinaBerth = 29,

            /// <summary>
            /// Enum Bookkeeping for value: bookkeeping
            /// </summary>
            [EnumMember(Value = "bookkeeping")]
            Bookkeeping = 30,

            /// <summary>
            /// Enum Brokerage for value: brokerage
            /// </summary>
            [EnumMember(Value = "brokerage")]
            Brokerage = 31,

            /// <summary>
            /// Enum Builder for value: builder
            /// </summary>
            [EnumMember(Value = "builder")]
            Builder = 32,

            /// <summary>
            /// Enum BuildingAndConstruction for value: buildingAndConstruction
            /// </summary>
            [EnumMember(Value = "buildingAndConstruction")]
            BuildingAndConstruction = 33,

            /// <summary>
            /// Enum Bus for value: bus
            /// </summary>
            [EnumMember(Value = "bus")]
            Bus = 34,

            /// <summary>
            /// Enum Butcher for value: butcher
            /// </summary>
            [EnumMember(Value = "butcher")]
            Butcher = 35,

            /// <summary>
            /// Enum CafeCoffeeShop for value: cafeCoffeeShop
            /// </summary>
            [EnumMember(Value = "cafeCoffeeShop")]
            CafeCoffeeShop = 36,

            /// <summary>
            /// Enum Car for value: car
            /// </summary>
            [EnumMember(Value = "car")]
            Car = 37,

            /// <summary>
            /// Enum CarBusTruck for value: carBusTruck
            /// </summary>
            [EnumMember(Value = "carBusTruck")]
            CarBusTruck = 38,

            /// <summary>
            /// Enum CarDealership for value: carDealership
            /// </summary>
            [EnumMember(Value = "carDealership")]
            CarDealership = 39,

            /// <summary>
            /// Enum CarRental for value: carRental
            /// </summary>
            [EnumMember(Value = "carRental")]
            CarRental = 40,

            /// <summary>
            /// Enum CarWash for value: carWash
            /// </summary>
            [EnumMember(Value = "carWash")]
            CarWash = 41,

            /// <summary>
            /// Enum CaravanPark for value: caravanPark
            /// </summary>
            [EnumMember(Value = "caravanPark")]
            CaravanPark = 42,

            /// <summary>
            /// Enum Carpenter for value: carpenter
            /// </summary>
            [EnumMember(Value = "carpenter")]
            Carpenter = 43,

            /// <summary>
            /// Enum Catering for value: catering
            /// </summary>
            [EnumMember(Value = "catering")]
            Catering = 44,

            /// <summary>
            /// Enum ChildCare for value: childCare
            /// </summary>
            [EnumMember(Value = "childCare")]
            ChildCare = 45,

            /// <summary>
            /// Enum Civil for value: civil
            /// </summary>
            [EnumMember(Value = "civil")]
            Civil = 46,

            /// <summary>
            /// Enum Cleaning for value: cleaning
            /// </summary>
            [EnumMember(Value = "cleaning")]
            Cleaning = 47,

            /// <summary>
            /// Enum CleaningAndMaintenance for value: cleaningAndMaintenance
            /// </summary>
            [EnumMember(Value = "cleaningAndMaintenance")]
            CleaningAndMaintenance = 48,

            /// <summary>
            /// Enum ClinicalPractice for value: clinicalPractice
            /// </summary>
            [EnumMember(Value = "clinicalPractice")]
            ClinicalPractice = 49,

            /// <summary>
            /// Enum ClothingAccessories for value: clothingAccessories
            /// </summary>
            [EnumMember(Value = "clothingAccessories")]
            ClothingAccessories = 50,

            /// <summary>
            /// Enum ClothingFootwear for value: clothingFootwear
            /// </summary>
            [EnumMember(Value = "clothingFootwear")]
            ClothingFootwear = 51,

            /// <summary>
            /// Enum Communication for value: communication
            /// </summary>
            [EnumMember(Value = "communication")]
            Communication = 52,

            /// <summary>
            /// Enum Communications for value: communications
            /// </summary>
            [EnumMember(Value = "communications")]
            Communications = 53,

            /// <summary>
            /// Enum ComputerIT for value: computerIT
            /// </summary>
            [EnumMember(Value = "computerIT")]
            ComputerIT = 54,

            /// <summary>
            /// Enum ComputerAndInternet for value: computerAndInternet
            /// </summary>
            [EnumMember(Value = "computerAndInternet")]
            ComputerAndInternet = 55,

            /// <summary>
            /// Enum Construction for value: construction
            /// </summary>
            [EnumMember(Value = "construction")]
            Construction = 56,

            /// <summary>
            /// Enum ConvenienceStore for value: convenienceStore
            /// </summary>
            [EnumMember(Value = "convenienceStore")]
            ConvenienceStore = 57,

            /// <summary>
            /// Enum CopyLaminate for value: copyLaminate
            /// </summary>
            [EnumMember(Value = "copyLaminate")]
            CopyLaminate = 58,

            /// <summary>
            /// Enum Courier for value: courier
            /// </summary>
            [EnumMember(Value = "courier")]
            Courier = 59,

            /// <summary>
            /// Enum CropHarvesting for value: cropHarvesting
            /// </summary>
            [EnumMember(Value = "cropHarvesting")]
            CropHarvesting = 60,

            /// <summary>
            /// Enum Customs for value: customs
            /// </summary>
            [EnumMember(Value = "customs")]
            Customs = 61,

            /// <summary>
            /// Enum DairyFarming for value: dairyFarming
            /// </summary>
            [EnumMember(Value = "dairyFarming")]
            DairyFarming = 62,

            /// <summary>
            /// Enum Deli for value: deli
            /// </summary>
            [EnumMember(Value = "deli")]
            Deli = 63,

            /// <summary>
            /// Enum Dental for value: dental
            /// </summary>
            [EnumMember(Value = "dental")]
            Dental = 64,

            /// <summary>
            /// Enum Detailing for value: detailing
            /// </summary>
            [EnumMember(Value = "detailing")]
            Detailing = 65,

            /// <summary>
            /// Enum Distributors for value: distributors
            /// </summary>
            [EnumMember(Value = "distributors")]
            Distributors = 66,

            /// <summary>
            /// Enum DrivingSchools for value: drivingSchools
            /// </summary>
            [EnumMember(Value = "drivingSchools")]
            DrivingSchools = 67,

            /// <summary>
            /// Enum EducationTraining for value: educationTraining
            /// </summary>
            [EnumMember(Value = "educationTraining")]
            EducationTraining = 68,

            /// <summary>
            /// Enum Educational for value: educational
            /// </summary>
            [EnumMember(Value = "educational")]
            Educational = 69,

            /// <summary>
            /// Enum Electrical for value: electrical
            /// </summary>
            [EnumMember(Value = "electrical")]
            Electrical = 70,

            /// <summary>
            /// Enum EmploymentRecruitment for value: employmentRecruitment
            /// </summary>
            [EnumMember(Value = "employmentRecruitment")]
            EmploymentRecruitment = 71,

            /// <summary>
            /// Enum Entertainment for value: entertainment
            /// </summary>
            [EnumMember(Value = "entertainment")]
            Entertainment = 72,

            /// <summary>
            /// Enum EntertainmentTechnology for value: entertainmentTechnology
            /// </summary>
            [EnumMember(Value = "entertainmentTechnology")]
            EntertainmentTechnology = 73,

            /// <summary>
            /// Enum Export for value: export
            /// </summary>
            [EnumMember(Value = "export")]
            Export = 74,

            /// <summary>
            /// Enum Farming for value: farming
            /// </summary>
            [EnumMember(Value = "farming")]
            Farming = 75,

            /// <summary>
            /// Enum Fertiliser for value: fertiliser
            /// </summary>
            [EnumMember(Value = "fertiliser")]
            Fertiliser = 76,

            /// <summary>
            /// Enum Finance for value: finance
            /// </summary>
            [EnumMember(Value = "finance")]
            Finance = 77,

            /// <summary>
            /// Enum FinancialServices for value: financialServices
            /// </summary>
            [EnumMember(Value = "financialServices")]
            FinancialServices = 78,

            /// <summary>
            /// Enum FishingForestry for value: fishingForestry
            /// </summary>
            [EnumMember(Value = "fishingForestry")]
            FishingForestry = 79,

            /// <summary>
            /// Enum FloristNursery for value: floristNursery
            /// </summary>
            [EnumMember(Value = "floristNursery")]
            FloristNursery = 80,

            /// <summary>
            /// Enum FoodBeverage for value: foodBeverage
            /// </summary>
            [EnumMember(Value = "foodBeverage")]
            FoodBeverage = 81,

            /// <summary>
            /// Enum FoodBeverageHospitality for value: foodBeverageHospitality
            /// </summary>
            [EnumMember(Value = "foodBeverageHospitality")]
            FoodBeverageHospitality = 82,

            /// <summary>
            /// Enum FranchiseBusinessOpportunities for value: franchiseBusinessOpportunities
            /// </summary>
            [EnumMember(Value = "franchiseBusinessOpportunities")]
            FranchiseBusinessOpportunities = 83,

            /// <summary>
            /// Enum Freight for value: freight
            /// </summary>
            [EnumMember(Value = "freight")]
            Freight = 84,

            /// <summary>
            /// Enum FruitVegFreshProduce for value: fruitVegFreshProduce
            /// </summary>
            [EnumMember(Value = "fruitVegFreshProduce")]
            FruitVegFreshProduce = 85,

            /// <summary>
            /// Enum FruitPicking for value: fruitPicking
            /// </summary>
            [EnumMember(Value = "fruitPicking")]
            FruitPicking = 86,

            /// <summary>
            /// Enum FunctionCentre for value: functionCentre
            /// </summary>
            [EnumMember(Value = "functionCentre")]
            FunctionCentre = 87,

            /// <summary>
            /// Enum FurnitureTimber for value: furnitureTimber
            /// </summary>
            [EnumMember(Value = "furnitureTimber")]
            FurnitureTimber = 88,

            /// <summary>
            /// Enum Gambling for value: gambling
            /// </summary>
            [EnumMember(Value = "gambling")]
            Gambling = 89,

            /// <summary>
            /// Enum GardenHousehold for value: gardenHousehold
            /// </summary>
            [EnumMember(Value = "gardenHousehold")]
            GardenHousehold = 90,

            /// <summary>
            /// Enum GardenNurseries for value: gardenNurseries
            /// </summary>
            [EnumMember(Value = "gardenNurseries")]
            GardenNurseries = 91,

            /// <summary>
            /// Enum Gardening for value: gardening
            /// </summary>
            [EnumMember(Value = "gardening")]
            Gardening = 92,

            /// <summary>
            /// Enum GlassCeramic for value: glassCeramic
            /// </summary>
            [EnumMember(Value = "glassCeramic")]
            GlassCeramic = 93,

            /// <summary>
            /// Enum GuestHouseBB for value: guestHouseBB
            /// </summary>
            [EnumMember(Value = "guestHouseBB")]
            GuestHouseBB = 94,

            /// <summary>
            /// Enum Hairdresser for value: hairdresser
            /// </summary>
            [EnumMember(Value = "hairdresser")]
            Hairdresser = 95,

            /// <summary>
            /// Enum HealthBeauty for value: healthBeauty
            /// </summary>
            [EnumMember(Value = "healthBeauty")]
            HealthBeauty = 96,

            /// <summary>
            /// Enum HealthSpa for value: healthSpa
            /// </summary>
            [EnumMember(Value = "healthSpa")]
            HealthSpa = 97,

            /// <summary>
            /// Enum Hire for value: hire
            /// </summary>
            [EnumMember(Value = "hire")]
            Hire = 98,

            /// <summary>
            /// Enum HomeGarden for value: homeGarden
            /// </summary>
            [EnumMember(Value = "homeGarden")]
            HomeGarden = 99,

            /// <summary>
            /// Enum HomeBased for value: homeBased
            /// </summary>
            [EnumMember(Value = "homeBased")]
            HomeBased = 100,

            /// <summary>
            /// Enum HomewareHardware for value: homewareHardware
            /// </summary>
            [EnumMember(Value = "homewareHardware")]
            HomewareHardware = 101,

            /// <summary>
            /// Enum Hospital for value: hospital
            /// </summary>
            [EnumMember(Value = "hospital")]
            Hospital = 102,

            /// <summary>
            /// Enum Hotel for value: hotel
            /// </summary>
            [EnumMember(Value = "hotel")]
            Hotel = 103,

            /// <summary>
            /// Enum HuntingTrap for value: huntingTrap
            /// </summary>
            [EnumMember(Value = "huntingTrap")]
            HuntingTrap = 104,

            /// <summary>
            /// Enum Import for value: import
            /// </summary>
            [EnumMember(Value = "import")]
            Import = 105,

            /// <summary>
            /// Enum ImportExportWholesale for value: importExportWholesale
            /// </summary>
            [EnumMember(Value = "importExportWholesale")]
            ImportExportWholesale = 106,

            /// <summary>
            /// Enum IndustrialManufacturing for value: industrialManufacturing
            /// </summary>
            [EnumMember(Value = "industrialManufacturing")]
            IndustrialManufacturing = 107,

            /// <summary>
            /// Enum Insemination for value: insemination
            /// </summary>
            [EnumMember(Value = "insemination")]
            Insemination = 108,

            /// <summary>
            /// Enum Insurance for value: insurance
            /// </summary>
            [EnumMember(Value = "insurance")]
            Insurance = 109,

            /// <summary>
            /// Enum Internet for value: internet
            /// </summary>
            [EnumMember(Value = "internet")]
            Internet = 110,

            /// <summary>
            /// Enum IrrigationServices for value: irrigationServices
            /// </summary>
            [EnumMember(Value = "irrigationServices")]
            IrrigationServices = 111,

            /// <summary>
            /// Enum JuiceBar for value: juiceBar
            /// </summary>
            [EnumMember(Value = "juiceBar")]
            JuiceBar = 112,

            /// <summary>
            /// Enum LandClearing for value: landClearing
            /// </summary>
            [EnumMember(Value = "landClearing")]
            LandClearing = 113,

            /// <summary>
            /// Enum Landscaping for value: landscaping
            /// </summary>
            [EnumMember(Value = "landscaping")]
            Landscaping = 114,

            /// <summary>
            /// Enum LaundryDryCleaning for value: laundryDryCleaning
            /// </summary>
            [EnumMember(Value = "laundryDryCleaning")]
            LaundryDryCleaning = 115,

            /// <summary>
            /// Enum Legal for value: legal
            /// </summary>
            [EnumMember(Value = "legal")]
            Legal = 116,

            /// <summary>
            /// Enum LeisureEntertainment for value: leisureEntertainment
            /// </summary>
            [EnumMember(Value = "leisureEntertainment")]
            LeisureEntertainment = 117,

            /// <summary>
            /// Enum LimousineTaxi for value: limousineTaxi
            /// </summary>
            [EnumMember(Value = "limousineTaxi")]
            LimousineTaxi = 118,

            /// <summary>
            /// Enum Livestock for value: livestock
            /// </summary>
            [EnumMember(Value = "livestock")]
            Livestock = 119,

            /// <summary>
            /// Enum Machinery for value: machinery
            /// </summary>
            [EnumMember(Value = "machinery")]
            Machinery = 120,

            /// <summary>
            /// Enum MachineryMetal for value: machineryMetal
            /// </summary>
            [EnumMember(Value = "machineryMetal")]
            MachineryMetal = 121,

            /// <summary>
            /// Enum ManagementRights for value: managementRights
            /// </summary>
            [EnumMember(Value = "managementRights")]
            ManagementRights = 122,

            /// <summary>
            /// Enum Manufacturers for value: manufacturers
            /// </summary>
            [EnumMember(Value = "manufacturers")]
            Manufacturers = 123,

            /// <summary>
            /// Enum ManufacturingEngineering for value: manufacturingEngineering
            /// </summary>
            [EnumMember(Value = "manufacturingEngineering")]
            ManufacturingEngineering = 124,

            /// <summary>
            /// Enum Marine for value: marine
            /// </summary>
            [EnumMember(Value = "marine")]
            Marine = 125,

            /// <summary>
            /// Enum Massage for value: massage
            /// </summary>
            [EnumMember(Value = "massage")]
            Massage = 126,

            /// <summary>
            /// Enum MechanicalRepair for value: mechanicalRepair
            /// </summary>
            [EnumMember(Value = "mechanicalRepair")]
            MechanicalRepair = 127,

            /// <summary>
            /// Enum Media for value: media
            /// </summary>
            [EnumMember(Value = "media")]
            Media = 128,

            /// <summary>
            /// Enum Medical for value: medical
            /// </summary>
            [EnumMember(Value = "medical")]
            Medical = 129,

            /// <summary>
            /// Enum MedicalPractice for value: medicalPractice
            /// </summary>
            [EnumMember(Value = "medicalPractice")]
            MedicalPractice = 130,

            /// <summary>
            /// Enum MiningEarthMoving for value: miningEarthMoving
            /// </summary>
            [EnumMember(Value = "miningEarthMoving")]
            MiningEarthMoving = 131,

            /// <summary>
            /// Enum MobileServices for value: mobileServices
            /// </summary>
            [EnumMember(Value = "mobileServices")]
            MobileServices = 132,

            /// <summary>
            /// Enum Motel for value: motel
            /// </summary>
            [EnumMember(Value = "motel")]
            Motel = 133,

            /// <summary>
            /// Enum Motorcycle for value: motorcycle
            /// </summary>
            [EnumMember(Value = "motorcycle")]
            Motorcycle = 134,

            /// <summary>
            /// Enum MusicRelated for value: musicRelated
            /// </summary>
            [EnumMember(Value = "musicRelated")]
            MusicRelated = 135,

            /// <summary>
            /// Enum Mustering for value: mustering
            /// </summary>
            [EnumMember(Value = "mustering")]
            Mustering = 136,

            /// <summary>
            /// Enum Nails for value: nails
            /// </summary>
            [EnumMember(Value = "nails")]
            Nails = 137,

            /// <summary>
            /// Enum NaturalTherapies for value: naturalTherapies
            /// </summary>
            [EnumMember(Value = "naturalTherapies")]
            NaturalTherapies = 138,

            /// <summary>
            /// Enum Newsagency for value: newsagency
            /// </summary>
            [EnumMember(Value = "newsagency")]
            Newsagency = 139,

            /// <summary>
            /// Enum Nursery for value: nursery
            /// </summary>
            [EnumMember(Value = "nursery")]
            Nursery = 140,

            /// <summary>
            /// Enum NursingHome for value: nursingHome
            /// </summary>
            [EnumMember(Value = "nursingHome")]
            NursingHome = 141,

            /// <summary>
            /// Enum OfficeSupplies for value: officeSupplies
            /// </summary>
            [EnumMember(Value = "officeSupplies")]
            OfficeSupplies = 142,

            /// <summary>
            /// Enum OilGas for value: oilGas
            /// </summary>
            [EnumMember(Value = "oilGas")]
            OilGas = 143,

            /// <summary>
            /// Enum PanelBeating for value: panelBeating
            /// </summary>
            [EnumMember(Value = "panelBeating")]
            PanelBeating = 144,

            /// <summary>
            /// Enum PaperPrinting for value: paperPrinting
            /// </summary>
            [EnumMember(Value = "paperPrinting")]
            PaperPrinting = 145,

            /// <summary>
            /// Enum ParkingCarSpace for value: parkingCarSpace
            /// </summary>
            [EnumMember(Value = "parkingCarSpace")]
            ParkingCarSpace = 146,

            /// <summary>
            /// Enum PestRelated for value: pestRelated
            /// </summary>
            [EnumMember(Value = "pestRelated")]
            PestRelated = 147,

            /// <summary>
            /// Enum Pharmacies for value: pharmacies
            /// </summary>
            [EnumMember(Value = "pharmacies")]
            Pharmacies = 148,

            /// <summary>
            /// Enum Plastic for value: plastic
            /// </summary>
            [EnumMember(Value = "plastic")]
            Plastic = 149,

            /// <summary>
            /// Enum Plumbing for value: plumbing
            /// </summary>
            [EnumMember(Value = "plumbing")]
            Plumbing = 150,

            /// <summary>
            /// Enum PoolWater for value: poolWater
            /// </summary>
            [EnumMember(Value = "poolWater")]
            PoolWater = 151,

            /// <summary>
            /// Enum PostOffices for value: postOffices
            /// </summary>
            [EnumMember(Value = "postOffices")]
            PostOffices = 152,

            /// <summary>
            /// Enum PrintPhoto for value: printPhoto
            /// </summary>
            [EnumMember(Value = "printPhoto")]
            PrintPhoto = 153,

            /// <summary>
            /// Enum Professional for value: professional
            /// </summary>
            [EnumMember(Value = "professional")]
            Professional = 154,

            /// <summary>
            /// Enum PropertyRealEstate for value: propertyRealEstate
            /// </summary>
            [EnumMember(Value = "propertyRealEstate")]
            PropertyRealEstate = 155,

            /// <summary>
            /// Enum Rail for value: rail
            /// </summary>
            [EnumMember(Value = "rail")]
            Rail = 156,

            /// <summary>
            /// Enum RecreationSport for value: recreationSport
            /// </summary>
            [EnumMember(Value = "recreationSport")]
            RecreationSport = 157,

            /// <summary>
            /// Enum Recruitment for value: recruitment
            /// </summary>
            [EnumMember(Value = "recruitment")]
            Recruitment = 158,

            /// <summary>
            /// Enum Repair for value: repair
            /// </summary>
            [EnumMember(Value = "repair")]
            Repair = 159,

            /// <summary>
            /// Enum Resort for value: resort
            /// </summary>
            [EnumMember(Value = "resort")]
            Resort = 160,

            /// <summary>
            /// Enum Restaurant for value: restaurant
            /// </summary>
            [EnumMember(Value = "restaurant")]
            Restaurant = 161,

            /// <summary>
            /// Enum Retail for value: retail
            /// </summary>
            [EnumMember(Value = "retail")]
            Retail = 162,

            /// <summary>
            /// Enum Retailer for value: retailer
            /// </summary>
            [EnumMember(Value = "retailer")]
            Retailer = 163,

            /// <summary>
            /// Enum Retirement for value: retirement
            /// </summary>
            [EnumMember(Value = "retirement")]
            Retirement = 164,

            /// <summary>
            /// Enum RetirementVillage for value: retirementVillage
            /// </summary>
            [EnumMember(Value = "retirementVillage")]
            RetirementVillage = 165,

            /// <summary>
            /// Enum Road for value: road
            /// </summary>
            [EnumMember(Value = "road")]
            Road = 166,

            /// <summary>
            /// Enum Rural for value: rural
            /// </summary>
            [EnumMember(Value = "rural")]
            Rural = 167,

            /// <summary>
            /// Enum Scientific for value: scientific
            /// </summary>
            [EnumMember(Value = "scientific")]
            Scientific = 168,

            /// <summary>
            /// Enum Sea for value: sea
            /// </summary>
            [EnumMember(Value = "sea")]
            Sea = 169,

            /// <summary>
            /// Enum Security for value: security
            /// </summary>
            [EnumMember(Value = "security")]
            Security = 170,

            /// <summary>
            /// Enum ServiceStation for value: serviceStation
            /// </summary>
            [EnumMember(Value = "serviceStation")]
            ServiceStation = 171,

            /// <summary>
            /// Enum Services for value: services
            /// </summary>
            [EnumMember(Value = "services")]
            Services = 172,

            /// <summary>
            /// Enum Shearing for value: shearing
            /// </summary>
            [EnumMember(Value = "shearing")]
            Shearing = 173,

            /// <summary>
            /// Enum SportsComplexGym for value: sportsComplexGym
            /// </summary>
            [EnumMember(Value = "sportsComplexGym")]
            SportsComplexGym = 174,

            /// <summary>
            /// Enum Supermarket for value: supermarket
            /// </summary>
            [EnumMember(Value = "supermarket")]
            Supermarket = 175,

            /// <summary>
            /// Enum TakeawayFood for value: takeawayFood
            /// </summary>
            [EnumMember(Value = "takeawayFood")]
            TakeawayFood = 176,

            /// <summary>
            /// Enum Taxi for value: taxi
            /// </summary>
            [EnumMember(Value = "taxi")]
            Taxi = 177,

            /// <summary>
            /// Enum ThemePark for value: themePark
            /// </summary>
            [EnumMember(Value = "themePark")]
            ThemePark = 178,

            /// <summary>
            /// Enum Tours for value: tours
            /// </summary>
            [EnumMember(Value = "tours")]
            Tours = 179,

            /// <summary>
            /// Enum Training for value: training
            /// </summary>
            [EnumMember(Value = "training")]
            Training = 180,

            /// <summary>
            /// Enum TransportDistribution for value: transportDistribution
            /// </summary>
            [EnumMember(Value = "transportDistribution")]
            TransportDistribution = 181,

            /// <summary>
            /// Enum Travel for value: travel
            /// </summary>
            [EnumMember(Value = "travel")]
            Travel = 182,

            /// <summary>
            /// Enum Truck for value: truck
            /// </summary>
            [EnumMember(Value = "truck")]
            Truck = 183,

            /// <summary>
            /// Enum Vending for value: vending
            /// </summary>
            [EnumMember(Value = "vending")]
            Vending = 184,

            /// <summary>
            /// Enum Water for value: water
            /// </summary>
            [EnumMember(Value = "water")]
            Water = 185,

            /// <summary>
            /// Enum Welding for value: welding
            /// </summary>
            [EnumMember(Value = "welding")]
            Welding = 186,

            /// <summary>
            /// Enum Wholesale for value: wholesale
            /// </summary>
            [EnumMember(Value = "wholesale")]
            Wholesale = 187,

            /// <summary>
            /// Enum Wholesalers for value: wholesalers
            /// </summary>
            [EnumMember(Value = "wholesalers")]
            Wholesalers = 188,

            /// <summary>
            /// Enum WoolClassing for value: woolClassing
            /// </summary>
            [EnumMember(Value = "woolClassing")]
            WoolClassing = 189,

            /// <summary>
            /// Enum Wreckers for value: wreckers
            /// </summary>
            [EnumMember(Value = "wreckers")]
            Wreckers = 190,

            /// <summary>
            /// Enum AlcoholGrocery for value: alcoholGrocery
            /// </summary>
            [EnumMember(Value = "alcoholGrocery")]
            AlcoholGrocery = 191,

            /// <summary>
            /// Enum CafeRestaurants for value: cafeRestaurants
            /// </summary>
            [EnumMember(Value = "cafeRestaurants")]
            CafeRestaurants = 192,

            /// <summary>
            /// Enum DiscountStore for value: discountStore
            /// </summary>
            [EnumMember(Value = "discountStore")]
            DiscountStore = 193,

            /// <summary>
            /// Enum EcoFriendly for value: ecoFriendly
            /// </summary>
            [EnumMember(Value = "ecoFriendly")]
            EcoFriendly = 194,

            /// <summary>
            /// Enum Green for value: green
            /// </summary>
            [EnumMember(Value = "green")]
            Green = 195,

            /// <summary>
            /// Enum Grocery for value: grocery
            /// </summary>
            [EnumMember(Value = "grocery")]
            Grocery = 196,

            /// <summary>
            /// Enum SpecialityRetail for value: specialityRetail
            /// </summary>
            [EnumMember(Value = "specialityRetail")]
            SpecialityRetail = 197,

            /// <summary>
            /// Enum Storage for value: storage
            /// </summary>
            [EnumMember(Value = "storage")]
            Storage = 198,

            /// <summary>
            /// Enum TravelAgency for value: travelAgency
            /// </summary>
            [EnumMember(Value = "travelAgency")]
            TravelAgency = 199,

            /// <summary>
            /// Enum VarietyStore for value: varietyStore
            /// </summary>
            [EnumMember(Value = "varietyStore")]
            VarietyStore = 200,

            /// <summary>
            /// Enum ChickenShop for value: chickenShop
            /// </summary>
            [EnumMember(Value = "chickenShop")]
            ChickenShop = 201,

            /// <summary>
            /// Enum SeafoodShop for value: seafoodShop
            /// </summary>
            [EnumMember(Value = "seafoodShop")]
            SeafoodShop = 202,

            /// <summary>
            /// Enum DeliCafe for value: deliCafe
            /// </summary>
            [EnumMember(Value = "deliCafe")]
            DeliCafe = 203,

            /// <summary>
            /// Enum Cropping for value: cropping
            /// </summary>
            [EnumMember(Value = "cropping")]
            Cropping = 204,

            /// <summary>
            /// Enum Viticulture for value: viticulture
            /// </summary>
            [EnumMember(Value = "viticulture")]
            Viticulture = 205,

            /// <summary>
            /// Enum Grazing for value: grazing
            /// </summary>
            [EnumMember(Value = "grazing")]
            Grazing = 206,

            /// <summary>
            /// Enum Horticulture for value: horticulture
            /// </summary>
            [EnumMember(Value = "horticulture")]
            Horticulture = 207,

            /// <summary>
            /// Enum Equine for value: equine
            /// </summary>
            [EnumMember(Value = "equine")]
            Equine = 208,

            /// <summary>
            /// Enum Farmlet for value: farmlet
            /// </summary>
            [EnumMember(Value = "farmlet")]
            Farmlet = 209,

            /// <summary>
            /// Enum Orchard for value: orchard
            /// </summary>
            [EnumMember(Value = "orchard")]
            Orchard = 210,

            /// <summary>
            /// Enum RuralLifestyle for value: ruralLifestyle
            /// </summary>
            [EnumMember(Value = "ruralLifestyle")]
            RuralLifestyle = 211,

            /// <summary>
            /// Enum OnlineBusiness for value: onlineBusiness
            /// </summary>
            [EnumMember(Value = "onlineBusiness")]
            OnlineBusiness = 212

        }


        /// <summary>
        /// Business property types [&#39;accessoriesParts&#39;, &#39;accommodationTourism&#39;, &#39;accounting&#39;, &#39;adult&#39;, &#39;advertisingMarketing&#39;, &#39;aerial&#39;, &#39;aeronautical&#39;, &#39;agedCare&#39;, &#39;agricultural&#39;, &#39;air&#39;, &#39;aircraft&#39;, &#39;alarms&#39;, &#39;alcoholLiquor&#39;, &#39;amusements&#39;, &#39;animalRelated&#39;, &#39;aquaculture&#39;, &#39;aquaticMarineMarinaBerth&#39;, &#39;artsCrafts&#39;, &#39;autoElectrical&#39;, &#39;automotive&#39;, &#39;backpackerHostel&#39;, &#39;bakery&#39;, &#39;barsNightclubs&#39;, &#39;beautyHealth&#39;, &#39;beautyProducts&#39;, &#39;beautySalon&#39;, &#39;bikeAndMotorcycle&#39;, &#39;boardingKennels&#39;, &#39;boatsMarineMarinaBerth&#39;, &#39;bookkeeping&#39;, &#39;brokerage&#39;, &#39;builder&#39;, &#39;buildingAndConstruction&#39;, &#39;bus&#39;, &#39;butcher&#39;, &#39;cafeCoffeeShop&#39;, &#39;car&#39;, &#39;carBusTruck&#39;, &#39;carDealership&#39;, &#39;carRental&#39;, &#39;carWash&#39;, &#39;caravanPark&#39;, &#39;carpenter&#39;, &#39;catering&#39;, &#39;childCare&#39;, &#39;civil&#39;, &#39;cleaning&#39;, &#39;cleaningAndMaintenance&#39;, &#39;clinicalPractice&#39;, &#39;clothingAccessories&#39;, &#39;clothingFootwear&#39;, &#39;communication&#39;, &#39;communications&#39;, &#39;computerIT&#39;, &#39;computerAndInternet&#39;, &#39;construction&#39;, &#39;convenienceStore&#39;, &#39;copyLaminate&#39;, &#39;courier&#39;, &#39;cropHarvesting&#39;, &#39;customs&#39;, &#39;dairyFarming&#39;, &#39;deli&#39;, &#39;dental&#39;, &#39;detailing&#39;, &#39;distributors&#39;, &#39;drivingSchools&#39;, &#39;educationTraining&#39;, &#39;educational&#39;, &#39;electrical&#39;, &#39;employmentRecruitment&#39;, &#39;entertainment&#39;, &#39;entertainmentTechnology&#39;, &#39;export&#39;, &#39;farming&#39;, &#39;fertiliser&#39;, &#39;finance&#39;, &#39;financialServices&#39;, &#39;fishingForestry&#39;, &#39;floristNursery&#39;, &#39;foodBeverage&#39;, &#39;foodBeverageHospitality&#39;, &#39;franchiseBusinessOpportunities&#39;, &#39;freight&#39;, &#39;fruitVegFreshProduce&#39;, &#39;fruitPicking&#39;, &#39;functionCentre&#39;, &#39;furnitureTimber&#39;, &#39;gambling&#39;, &#39;gardenHousehold&#39;, &#39;gardenNurseries&#39;, &#39;gardening&#39;, &#39;glassCeramic&#39;, &#39;guestHouseBB&#39;, &#39;hairdresser&#39;, &#39;healthBeauty&#39;, &#39;healthSpa&#39;, &#39;hire&#39;, &#39;homeGarden&#39;, &#39;homeBased&#39;, &#39;homewareHardware&#39;, &#39;hospital&#39;, &#39;hotel&#39;, &#39;huntingTrap&#39;, &#39;import&#39;, &#39;importExportWholesale&#39;, &#39;industrialManufacturing&#39;, &#39;insemination&#39;, &#39;insurance&#39;, &#39;internet&#39;, &#39;irrigationServices&#39;, &#39;juiceBar&#39;, &#39;landClearing&#39;, &#39;landscaping&#39;, &#39;laundryDryCleaning&#39;, &#39;legal&#39;, &#39;leisureEntertainment&#39;, &#39;limousineTaxi&#39;, &#39;livestock&#39;, &#39;machinery&#39;, &#39;machineryMetal&#39;, &#39;managementRights&#39;, &#39;manufacturers&#39;, &#39;manufacturingEngineering&#39;, &#39;marine&#39;, &#39;massage&#39;, &#39;mechanicalRepair&#39;, &#39;media&#39;, &#39;medical&#39;, &#39;medicalPractice&#39;, &#39;miningEarthMoving&#39;, &#39;mobileServices&#39;, &#39;motel&#39;, &#39;motorcycle&#39;, &#39;musicRelated&#39;, &#39;mustering&#39;, &#39;nails&#39;, &#39;naturalTherapies&#39;, &#39;newsagency&#39;, &#39;nursery&#39;, &#39;nursingHome&#39;, &#39;officeSupplies&#39;, &#39;oilGas&#39;, &#39;panelBeating&#39;, &#39;paperPrinting&#39;, &#39;parkingCarSpace&#39;, &#39;pestRelated&#39;, &#39;pharmacies&#39;, &#39;plastic&#39;, &#39;plumbing&#39;, &#39;poolWater&#39;, &#39;postOffices&#39;, &#39;printPhoto&#39;, &#39;professional&#39;, &#39;propertyRealEstate&#39;, &#39;rail&#39;, &#39;recreationSport&#39;, &#39;recruitment&#39;, &#39;repair&#39;, &#39;resort&#39;, &#39;restaurant&#39;, &#39;retail&#39;, &#39;retailer&#39;, &#39;retirement&#39;, &#39;retirementVillage&#39;, &#39;road&#39;, &#39;rural&#39;, &#39;scientific&#39;, &#39;sea&#39;, &#39;security&#39;, &#39;serviceStation&#39;, &#39;services&#39;, &#39;shearing&#39;, &#39;sportsComplexGym&#39;, &#39;supermarket&#39;, &#39;takeawayFood&#39;, &#39;taxi&#39;, &#39;themePark&#39;, &#39;tours&#39;, &#39;training&#39;, &#39;transportDistribution&#39;, &#39;travel&#39;, &#39;truck&#39;, &#39;vending&#39;, &#39;water&#39;, &#39;welding&#39;, &#39;wholesale&#39;, &#39;wholesalers&#39;, &#39;woolClassing&#39;, &#39;wreckers&#39;, &#39;alcoholGrocery&#39;, &#39;cafeRestaurants&#39;, &#39;discountStore&#39;, &#39;ecoFriendly&#39;, &#39;green&#39;, &#39;grocery&#39;, &#39;specialityRetail&#39;, &#39;storage&#39;, &#39;travelAgency&#39;, &#39;varietyStore&#39;, &#39;chickenShop&#39;, &#39;seafoodShop&#39;, &#39;deliCafe&#39;, &#39;cropping&#39;, &#39;viticulture&#39;, &#39;grazing&#39;, &#39;horticulture&#39;, &#39;equine&#39;, &#39;farmlet&#39;, &#39;orchard&#39;, &#39;ruralLifestyle&#39;, &#39;onlineBusiness&#39;].
        /// </summary>
        /// <value>Business property types [&#39;accessoriesParts&#39;, &#39;accommodationTourism&#39;, &#39;accounting&#39;, &#39;adult&#39;, &#39;advertisingMarketing&#39;, &#39;aerial&#39;, &#39;aeronautical&#39;, &#39;agedCare&#39;, &#39;agricultural&#39;, &#39;air&#39;, &#39;aircraft&#39;, &#39;alarms&#39;, &#39;alcoholLiquor&#39;, &#39;amusements&#39;, &#39;animalRelated&#39;, &#39;aquaculture&#39;, &#39;aquaticMarineMarinaBerth&#39;, &#39;artsCrafts&#39;, &#39;autoElectrical&#39;, &#39;automotive&#39;, &#39;backpackerHostel&#39;, &#39;bakery&#39;, &#39;barsNightclubs&#39;, &#39;beautyHealth&#39;, &#39;beautyProducts&#39;, &#39;beautySalon&#39;, &#39;bikeAndMotorcycle&#39;, &#39;boardingKennels&#39;, &#39;boatsMarineMarinaBerth&#39;, &#39;bookkeeping&#39;, &#39;brokerage&#39;, &#39;builder&#39;, &#39;buildingAndConstruction&#39;, &#39;bus&#39;, &#39;butcher&#39;, &#39;cafeCoffeeShop&#39;, &#39;car&#39;, &#39;carBusTruck&#39;, &#39;carDealership&#39;, &#39;carRental&#39;, &#39;carWash&#39;, &#39;caravanPark&#39;, &#39;carpenter&#39;, &#39;catering&#39;, &#39;childCare&#39;, &#39;civil&#39;, &#39;cleaning&#39;, &#39;cleaningAndMaintenance&#39;, &#39;clinicalPractice&#39;, &#39;clothingAccessories&#39;, &#39;clothingFootwear&#39;, &#39;communication&#39;, &#39;communications&#39;, &#39;computerIT&#39;, &#39;computerAndInternet&#39;, &#39;construction&#39;, &#39;convenienceStore&#39;, &#39;copyLaminate&#39;, &#39;courier&#39;, &#39;cropHarvesting&#39;, &#39;customs&#39;, &#39;dairyFarming&#39;, &#39;deli&#39;, &#39;dental&#39;, &#39;detailing&#39;, &#39;distributors&#39;, &#39;drivingSchools&#39;, &#39;educationTraining&#39;, &#39;educational&#39;, &#39;electrical&#39;, &#39;employmentRecruitment&#39;, &#39;entertainment&#39;, &#39;entertainmentTechnology&#39;, &#39;export&#39;, &#39;farming&#39;, &#39;fertiliser&#39;, &#39;finance&#39;, &#39;financialServices&#39;, &#39;fishingForestry&#39;, &#39;floristNursery&#39;, &#39;foodBeverage&#39;, &#39;foodBeverageHospitality&#39;, &#39;franchiseBusinessOpportunities&#39;, &#39;freight&#39;, &#39;fruitVegFreshProduce&#39;, &#39;fruitPicking&#39;, &#39;functionCentre&#39;, &#39;furnitureTimber&#39;, &#39;gambling&#39;, &#39;gardenHousehold&#39;, &#39;gardenNurseries&#39;, &#39;gardening&#39;, &#39;glassCeramic&#39;, &#39;guestHouseBB&#39;, &#39;hairdresser&#39;, &#39;healthBeauty&#39;, &#39;healthSpa&#39;, &#39;hire&#39;, &#39;homeGarden&#39;, &#39;homeBased&#39;, &#39;homewareHardware&#39;, &#39;hospital&#39;, &#39;hotel&#39;, &#39;huntingTrap&#39;, &#39;import&#39;, &#39;importExportWholesale&#39;, &#39;industrialManufacturing&#39;, &#39;insemination&#39;, &#39;insurance&#39;, &#39;internet&#39;, &#39;irrigationServices&#39;, &#39;juiceBar&#39;, &#39;landClearing&#39;, &#39;landscaping&#39;, &#39;laundryDryCleaning&#39;, &#39;legal&#39;, &#39;leisureEntertainment&#39;, &#39;limousineTaxi&#39;, &#39;livestock&#39;, &#39;machinery&#39;, &#39;machineryMetal&#39;, &#39;managementRights&#39;, &#39;manufacturers&#39;, &#39;manufacturingEngineering&#39;, &#39;marine&#39;, &#39;massage&#39;, &#39;mechanicalRepair&#39;, &#39;media&#39;, &#39;medical&#39;, &#39;medicalPractice&#39;, &#39;miningEarthMoving&#39;, &#39;mobileServices&#39;, &#39;motel&#39;, &#39;motorcycle&#39;, &#39;musicRelated&#39;, &#39;mustering&#39;, &#39;nails&#39;, &#39;naturalTherapies&#39;, &#39;newsagency&#39;, &#39;nursery&#39;, &#39;nursingHome&#39;, &#39;officeSupplies&#39;, &#39;oilGas&#39;, &#39;panelBeating&#39;, &#39;paperPrinting&#39;, &#39;parkingCarSpace&#39;, &#39;pestRelated&#39;, &#39;pharmacies&#39;, &#39;plastic&#39;, &#39;plumbing&#39;, &#39;poolWater&#39;, &#39;postOffices&#39;, &#39;printPhoto&#39;, &#39;professional&#39;, &#39;propertyRealEstate&#39;, &#39;rail&#39;, &#39;recreationSport&#39;, &#39;recruitment&#39;, &#39;repair&#39;, &#39;resort&#39;, &#39;restaurant&#39;, &#39;retail&#39;, &#39;retailer&#39;, &#39;retirement&#39;, &#39;retirementVillage&#39;, &#39;road&#39;, &#39;rural&#39;, &#39;scientific&#39;, &#39;sea&#39;, &#39;security&#39;, &#39;serviceStation&#39;, &#39;services&#39;, &#39;shearing&#39;, &#39;sportsComplexGym&#39;, &#39;supermarket&#39;, &#39;takeawayFood&#39;, &#39;taxi&#39;, &#39;themePark&#39;, &#39;tours&#39;, &#39;training&#39;, &#39;transportDistribution&#39;, &#39;travel&#39;, &#39;truck&#39;, &#39;vending&#39;, &#39;water&#39;, &#39;welding&#39;, &#39;wholesale&#39;, &#39;wholesalers&#39;, &#39;woolClassing&#39;, &#39;wreckers&#39;, &#39;alcoholGrocery&#39;, &#39;cafeRestaurants&#39;, &#39;discountStore&#39;, &#39;ecoFriendly&#39;, &#39;green&#39;, &#39;grocery&#39;, &#39;specialityRetail&#39;, &#39;storage&#39;, &#39;travelAgency&#39;, &#39;varietyStore&#39;, &#39;chickenShop&#39;, &#39;seafoodShop&#39;, &#39;deliCafe&#39;, &#39;cropping&#39;, &#39;viticulture&#39;, &#39;grazing&#39;, &#39;horticulture&#39;, &#39;equine&#39;, &#39;farmlet&#39;, &#39;orchard&#39;, &#39;ruralLifestyle&#39;, &#39;onlineBusiness&#39;].</value>
        [DataMember(Name = "propertyType", IsRequired = true, EmitDefaultValue = false)]
        public List<PropertyTypeEnum> PropertyType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ListingAdminV2BusinessOffMarketProperty" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ListingAdminV2BusinessOffMarketProperty() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ListingAdminV2BusinessOffMarketProperty" /> class.
        /// </summary>
        /// <param name="propertyType">Business property types [&#39;accessoriesParts&#39;, &#39;accommodationTourism&#39;, &#39;accounting&#39;, &#39;adult&#39;, &#39;advertisingMarketing&#39;, &#39;aerial&#39;, &#39;aeronautical&#39;, &#39;agedCare&#39;, &#39;agricultural&#39;, &#39;air&#39;, &#39;aircraft&#39;, &#39;alarms&#39;, &#39;alcoholLiquor&#39;, &#39;amusements&#39;, &#39;animalRelated&#39;, &#39;aquaculture&#39;, &#39;aquaticMarineMarinaBerth&#39;, &#39;artsCrafts&#39;, &#39;autoElectrical&#39;, &#39;automotive&#39;, &#39;backpackerHostel&#39;, &#39;bakery&#39;, &#39;barsNightclubs&#39;, &#39;beautyHealth&#39;, &#39;beautyProducts&#39;, &#39;beautySalon&#39;, &#39;bikeAndMotorcycle&#39;, &#39;boardingKennels&#39;, &#39;boatsMarineMarinaBerth&#39;, &#39;bookkeeping&#39;, &#39;brokerage&#39;, &#39;builder&#39;, &#39;buildingAndConstruction&#39;, &#39;bus&#39;, &#39;butcher&#39;, &#39;cafeCoffeeShop&#39;, &#39;car&#39;, &#39;carBusTruck&#39;, &#39;carDealership&#39;, &#39;carRental&#39;, &#39;carWash&#39;, &#39;caravanPark&#39;, &#39;carpenter&#39;, &#39;catering&#39;, &#39;childCare&#39;, &#39;civil&#39;, &#39;cleaning&#39;, &#39;cleaningAndMaintenance&#39;, &#39;clinicalPractice&#39;, &#39;clothingAccessories&#39;, &#39;clothingFootwear&#39;, &#39;communication&#39;, &#39;communications&#39;, &#39;computerIT&#39;, &#39;computerAndInternet&#39;, &#39;construction&#39;, &#39;convenienceStore&#39;, &#39;copyLaminate&#39;, &#39;courier&#39;, &#39;cropHarvesting&#39;, &#39;customs&#39;, &#39;dairyFarming&#39;, &#39;deli&#39;, &#39;dental&#39;, &#39;detailing&#39;, &#39;distributors&#39;, &#39;drivingSchools&#39;, &#39;educationTraining&#39;, &#39;educational&#39;, &#39;electrical&#39;, &#39;employmentRecruitment&#39;, &#39;entertainment&#39;, &#39;entertainmentTechnology&#39;, &#39;export&#39;, &#39;farming&#39;, &#39;fertiliser&#39;, &#39;finance&#39;, &#39;financialServices&#39;, &#39;fishingForestry&#39;, &#39;floristNursery&#39;, &#39;foodBeverage&#39;, &#39;foodBeverageHospitality&#39;, &#39;franchiseBusinessOpportunities&#39;, &#39;freight&#39;, &#39;fruitVegFreshProduce&#39;, &#39;fruitPicking&#39;, &#39;functionCentre&#39;, &#39;furnitureTimber&#39;, &#39;gambling&#39;, &#39;gardenHousehold&#39;, &#39;gardenNurseries&#39;, &#39;gardening&#39;, &#39;glassCeramic&#39;, &#39;guestHouseBB&#39;, &#39;hairdresser&#39;, &#39;healthBeauty&#39;, &#39;healthSpa&#39;, &#39;hire&#39;, &#39;homeGarden&#39;, &#39;homeBased&#39;, &#39;homewareHardware&#39;, &#39;hospital&#39;, &#39;hotel&#39;, &#39;huntingTrap&#39;, &#39;import&#39;, &#39;importExportWholesale&#39;, &#39;industrialManufacturing&#39;, &#39;insemination&#39;, &#39;insurance&#39;, &#39;internet&#39;, &#39;irrigationServices&#39;, &#39;juiceBar&#39;, &#39;landClearing&#39;, &#39;landscaping&#39;, &#39;laundryDryCleaning&#39;, &#39;legal&#39;, &#39;leisureEntertainment&#39;, &#39;limousineTaxi&#39;, &#39;livestock&#39;, &#39;machinery&#39;, &#39;machineryMetal&#39;, &#39;managementRights&#39;, &#39;manufacturers&#39;, &#39;manufacturingEngineering&#39;, &#39;marine&#39;, &#39;massage&#39;, &#39;mechanicalRepair&#39;, &#39;media&#39;, &#39;medical&#39;, &#39;medicalPractice&#39;, &#39;miningEarthMoving&#39;, &#39;mobileServices&#39;, &#39;motel&#39;, &#39;motorcycle&#39;, &#39;musicRelated&#39;, &#39;mustering&#39;, &#39;nails&#39;, &#39;naturalTherapies&#39;, &#39;newsagency&#39;, &#39;nursery&#39;, &#39;nursingHome&#39;, &#39;officeSupplies&#39;, &#39;oilGas&#39;, &#39;panelBeating&#39;, &#39;paperPrinting&#39;, &#39;parkingCarSpace&#39;, &#39;pestRelated&#39;, &#39;pharmacies&#39;, &#39;plastic&#39;, &#39;plumbing&#39;, &#39;poolWater&#39;, &#39;postOffices&#39;, &#39;printPhoto&#39;, &#39;professional&#39;, &#39;propertyRealEstate&#39;, &#39;rail&#39;, &#39;recreationSport&#39;, &#39;recruitment&#39;, &#39;repair&#39;, &#39;resort&#39;, &#39;restaurant&#39;, &#39;retail&#39;, &#39;retailer&#39;, &#39;retirement&#39;, &#39;retirementVillage&#39;, &#39;road&#39;, &#39;rural&#39;, &#39;scientific&#39;, &#39;sea&#39;, &#39;security&#39;, &#39;serviceStation&#39;, &#39;services&#39;, &#39;shearing&#39;, &#39;sportsComplexGym&#39;, &#39;supermarket&#39;, &#39;takeawayFood&#39;, &#39;taxi&#39;, &#39;themePark&#39;, &#39;tours&#39;, &#39;training&#39;, &#39;transportDistribution&#39;, &#39;travel&#39;, &#39;truck&#39;, &#39;vending&#39;, &#39;water&#39;, &#39;welding&#39;, &#39;wholesale&#39;, &#39;wholesalers&#39;, &#39;woolClassing&#39;, &#39;wreckers&#39;, &#39;alcoholGrocery&#39;, &#39;cafeRestaurants&#39;, &#39;discountStore&#39;, &#39;ecoFriendly&#39;, &#39;green&#39;, &#39;grocery&#39;, &#39;specialityRetail&#39;, &#39;storage&#39;, &#39;travelAgency&#39;, &#39;varietyStore&#39;, &#39;chickenShop&#39;, &#39;seafoodShop&#39;, &#39;deliCafe&#39;, &#39;cropping&#39;, &#39;viticulture&#39;, &#39;grazing&#39;, &#39;horticulture&#39;, &#39;equine&#39;, &#39;farmlet&#39;, &#39;orchard&#39;, &#39;ruralLifestyle&#39;, &#39;onlineBusiness&#39;]. (required).</param>
        /// <param name="parking">parking.</param>
        /// <param name="images">List of image files, photos or floor plans related to the listing..</param>
        /// <param name="address">address (required).</param>
        /// <param name="area">area.</param>
        /// <param name="landArea">landArea.</param>
        public ListingAdminV2BusinessOffMarketProperty(List<PropertyTypeEnum> propertyType = default(List<PropertyTypeEnum>), ListingAdminV2Parking parking = default(ListingAdminV2Parking), List<ListingAdminV2PropertyMedia> images = default(List<ListingAdminV2PropertyMedia>), ListingAdminV2Address address = default(ListingAdminV2Address), ListingAdminV2Area area = default(ListingAdminV2Area), ListingAdminV2LandArea landArea = default(ListingAdminV2LandArea))
        {
            // to ensure "propertyType" is required (not null)
            this.PropertyType = propertyType ?? throw new ArgumentNullException("propertyType is a required property for ListingAdminV2BusinessOffMarketProperty and cannot be null");
            // to ensure "address" is required (not null)
            this.Address = address ?? throw new ArgumentNullException("address is a required property for ListingAdminV2BusinessOffMarketProperty and cannot be null");
            this.Parking = parking;
            this.Images = images;
            this.Area = area;
            this.LandArea = landArea;
        }

        /// <summary>
        /// Gets or Sets Parking
        /// </summary>
        [DataMember(Name = "parking", EmitDefaultValue = false)]
        public ListingAdminV2Parking Parking { get; set; }

        /// <summary>
        /// List of image files, photos or floor plans related to the listing.
        /// </summary>
        /// <value>List of image files, photos or floor plans related to the listing.</value>
        [DataMember(Name = "images", EmitDefaultValue = false)]
        public List<ListingAdminV2PropertyMedia> Images { get; set; }

        /// <summary>
        /// Gets or Sets Address
        /// </summary>
        [DataMember(Name = "address", IsRequired = true, EmitDefaultValue = false)]
        public ListingAdminV2Address Address { get; set; }

        /// <summary>
        /// Gets or Sets Area
        /// </summary>
        [DataMember(Name = "area", EmitDefaultValue = false)]
        public ListingAdminV2Area Area { get; set; }

        /// <summary>
        /// Gets or Sets LandArea
        /// </summary>
        [DataMember(Name = "landArea", EmitDefaultValue = false)]
        public ListingAdminV2LandArea LandArea { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ListingAdminV2BusinessOffMarketProperty {\n");
            sb.Append("  PropertyType: ").Append(PropertyType).Append("\n");
            sb.Append("  Parking: ").Append(Parking).Append("\n");
            sb.Append("  Images: ").Append(Images).Append("\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  Area: ").Append(Area).Append("\n");
            sb.Append("  LandArea: ").Append(LandArea).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ListingAdminV2BusinessOffMarketProperty);
        }

        /// <summary>
        /// Returns true if ListingAdminV2BusinessOffMarketProperty instances are equal
        /// </summary>
        /// <param name="input">Instance of ListingAdminV2BusinessOffMarketProperty to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ListingAdminV2BusinessOffMarketProperty input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PropertyType == input.PropertyType ||
                    this.PropertyType.SequenceEqual(input.PropertyType)
                ) && 
                (
                    this.Parking == input.Parking ||
                    (this.Parking != null &&
                    this.Parking.Equals(input.Parking))
                ) && 
                (
                    this.Images == input.Images ||
                    this.Images != null &&
                    input.Images != null &&
                    this.Images.SequenceEqual(input.Images)
                ) && 
                (
                    this.Address == input.Address ||
                    (this.Address != null &&
                    this.Address.Equals(input.Address))
                ) && 
                (
                    this.Area == input.Area ||
                    (this.Area != null &&
                    this.Area.Equals(input.Area))
                ) && 
                (
                    this.LandArea == input.LandArea ||
                    (this.LandArea != null &&
                    this.LandArea.Equals(input.LandArea))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.PropertyType.GetHashCode();
                if (this.Parking != null)
                    hashCode = hashCode * 59 + this.Parking.GetHashCode();
                if (this.Images != null)
                    hashCode = hashCode * 59 + this.Images.GetHashCode();
                if (this.Address != null)
                    hashCode = hashCode * 59 + this.Address.GetHashCode();
                if (this.Area != null)
                    hashCode = hashCode * 59 + this.Area.GetHashCode();
                if (this.LandArea != null)
                    hashCode = hashCode * 59 + this.LandArea.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
