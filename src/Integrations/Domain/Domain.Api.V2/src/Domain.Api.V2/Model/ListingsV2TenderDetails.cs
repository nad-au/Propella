/*
 * Domain Public API
 *
 * See https://developer.domain.com.au for more information
 *
 * The version of the OpenAPI document: v2
 * Contact: api@domain.com.au
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Domain.Api.V2.Client.OpenAPIDateConverter;

namespace Domain.Api.V2.Model
{
    /// <summary>
    /// Tender details
    /// </summary>
    [DataContract(Name = "Listings.V2.TenderDetails")]
    public partial class ListingsV2TenderDetails : IEquatable<ListingsV2TenderDetails>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ListingsV2TenderDetails" /> class.
        /// </summary>
        /// <param name="tenderRecipientName">Tender recipient name.</param>
        /// <param name="tenderAddress">Tender address.</param>
        /// <param name="tenderEndDate">Tender closing date. DateTime is in AEST (Australian Eastern Standard Time) timezone..</param>
        public ListingsV2TenderDetails(string tenderRecipientName = default(string), string tenderAddress = default(string), DateTime? tenderEndDate = default(DateTime?))
        {
            this.TenderRecipientName = tenderRecipientName;
            this.TenderAddress = tenderAddress;
            this.TenderEndDate = tenderEndDate;
        }

        /// <summary>
        /// Tender recipient name
        /// </summary>
        /// <value>Tender recipient name</value>
        [DataMember(Name = "tenderRecipientName", EmitDefaultValue = true)]
        public string TenderRecipientName { get; set; }

        /// <summary>
        /// Tender address
        /// </summary>
        /// <value>Tender address</value>
        [DataMember(Name = "tenderAddress", EmitDefaultValue = true)]
        public string TenderAddress { get; set; }

        /// <summary>
        /// Tender closing date. DateTime is in AEST (Australian Eastern Standard Time) timezone.
        /// </summary>
        /// <value>Tender closing date. DateTime is in AEST (Australian Eastern Standard Time) timezone.</value>
        [DataMember(Name = "tenderEndDate", EmitDefaultValue = true)]
        public DateTime? TenderEndDate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ListingsV2TenderDetails {\n");
            sb.Append("  TenderRecipientName: ").Append(TenderRecipientName).Append("\n");
            sb.Append("  TenderAddress: ").Append(TenderAddress).Append("\n");
            sb.Append("  TenderEndDate: ").Append(TenderEndDate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ListingsV2TenderDetails);
        }

        /// <summary>
        /// Returns true if ListingsV2TenderDetails instances are equal
        /// </summary>
        /// <param name="input">Instance of ListingsV2TenderDetails to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ListingsV2TenderDetails input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.TenderRecipientName == input.TenderRecipientName ||
                    (this.TenderRecipientName != null &&
                    this.TenderRecipientName.Equals(input.TenderRecipientName))
                ) && 
                (
                    this.TenderAddress == input.TenderAddress ||
                    (this.TenderAddress != null &&
                    this.TenderAddress.Equals(input.TenderAddress))
                ) && 
                (
                    this.TenderEndDate == input.TenderEndDate ||
                    (this.TenderEndDate != null &&
                    this.TenderEndDate.Equals(input.TenderEndDate))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.TenderRecipientName != null)
                    hashCode = hashCode * 59 + this.TenderRecipientName.GetHashCode();
                if (this.TenderAddress != null)
                    hashCode = hashCode * 59 + this.TenderAddress.GetHashCode();
                if (this.TenderEndDate != null)
                    hashCode = hashCode * 59 + this.TenderEndDate.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
