/*
 * Domain Public API
 *
 * See https://developer.domain.com.au for more information
 *
 * The version of the OpenAPI document: v2
 * Contact: api@domain.com.au
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Domain.Api.Client.Client.OpenAPIDateConverter;

namespace Domain.Api.Client.Model
{
    /// <summary>
    /// The rental method of the advertised listing  * &#x60;NotStated&#x60; - The not stated * &#x60;Rent&#x60; - The listing is for rental by leasing * &#x60;Share&#x60; - The listing is for rental by sharing * &#x60;Holiday&#x60; - The listing is a holiday rental * &#x60;Lease&#x60; - The listing is for lease
    /// </summary>
    /// <value>The rental method of the advertised listing  * &#x60;NotStated&#x60; - The not stated * &#x60;Rent&#x60; - The listing is for rental by leasing * &#x60;Share&#x60; - The listing is for rental by sharing * &#x60;Holiday&#x60; - The listing is a holiday rental * &#x60;Lease&#x60; - The listing is for lease</value>
    
    [JsonConverter(typeof(StringEnumConverter))]
    
    public enum ListingsV2RentalMethod
    {
        /// <summary>
        /// Enum NotStated for value: notStated
        /// </summary>
        [EnumMember(Value = "notStated")]
        NotStated = 1,

        /// <summary>
        /// Enum Rent for value: rent
        /// </summary>
        [EnumMember(Value = "rent")]
        Rent = 2,

        /// <summary>
        /// Enum Share for value: share
        /// </summary>
        [EnumMember(Value = "share")]
        Share = 3,

        /// <summary>
        /// Enum Holiday for value: holiday
        /// </summary>
        [EnumMember(Value = "holiday")]
        Holiday = 4,

        /// <summary>
        /// Enum Lease for value: lease
        /// </summary>
        [EnumMember(Value = "lease")]
        Lease = 5

    }

}
